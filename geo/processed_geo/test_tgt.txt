program: answer ( river ( loc_2 ( stateid ( 'colorado' ) ) ) )
program: answer ( count ( state ( low_point_2 ( lower_2 ( low_point_1 ( stateid ( 'alabama' ) ) ) ) ) ) )
program: answer ( count ( river ( loc_2 ( stateid ( 'california' ) ) ) ) )
program: answer ( state ( next_to_2 ( stateid ( 'utah' ) ) ) )
program: answer ( elevation_1 ( placeid ( 'mount mckinley' ) ) )
program: answer ( elevation_1 ( highest ( place ( loc_2 ( countryid ( 'usa' ) ) ) ) ) )
program: answer ( elevation_1 ( highest ( place ( loc_2 ( stateid ( 'alabama' ) ) ) ) ) )
program: answer ( size ( stateid ( 'alaska' ) ) )
program: answer ( size ( stateid ( 'texas' ) ) )
program: answer ( len ( river ( riverid ( 'colorado' ) ) ) )
program: answer ( len ( river ( riverid ( 'delaware' ) ) ) )
program: answer ( len ( longest ( river ( loc_2 ( stateid ( 'california' ) ) ) ) ) )
program: answer ( len ( longest ( river ( loc_2 ( countryid ( 'usa' ) ) ) ) ) )
program: answer ( len ( river ( riverid ( 'north platte' ) ) ) )
program: answer ( len ( river ( riverid ( 'ohio' ) ) ) )
program: answer ( count ( capital ( loc_2 ( stateid ( 'rhode island' ) ) ) ) )
program: answer ( count ( city ( loc_2 ( countryid ( 'usa' ) ) ) ) )
program: answer ( population_1 ( largest ( city ( all ) ) ) )
program: answer ( count ( river ( riverid ( 'colorado' ) ) ) )
program: answer ( population_1 ( cityid ( 'detroit', _ ) ) )
program: answer ( population_1 ( cityid ( 'houston', _ ) ) )
program: answer ( population_1 ( cityid ( 'minneapolis', 'mn' ) ) )
program: answer ( population_1 ( stateid ( 'mississippi' ) ) )
program: answer ( population_1 ( stateid ( 'rhode island' ) ) )
program: answer ( population_1 ( largest ( city ( loc_2 ( state ( stateid ( 'new york' ) ) ) ) ) ) )
program: answer ( population_1 ( capital ( loc_2 ( stateid ( 'texas' ) ) ) ) )
program: answer ( population_1 ( countryid ( 'usa' ) ) )
program: answer ( population_1 ( cityid ( 'austin', _ ) ) )
program: answer ( population_1 ( stateid ( 'utah' ) ) )
program: answer ( population_1 ( stateid ( 'texas' ) ) )
program: answer ( count ( river ( loc_2 ( stateid ( 'iowa' ) ) ) ) )
program: answer ( count ( river ( loc_2 ( most ( state ( loc_1 ( river ( all ) ) ) ) ) ) ) )
program: answer ( count ( river ( loc_2 ( stateid ( 'colorado' ) ) ) ) )
program: answer ( count ( state ( loc_2 ( countryid ( 'usa' ) ) ) ) )
program: answer ( count ( state ( all ) ) )
program: answer ( count ( state ( loc_2 ( countryid ( 'usa' ) ) ) ) )
program: answer ( count ( state ( next_to_2 ( stateid ( 'iowa' ) ) ) ) )
program: answer ( count ( state ( next_to_2 ( largest_one ( population_1 ( state ( all ) ) ) ) ) ) )
program: answer ( count ( exclude ( state ( all ) , loc_1 ( river ( all ) ) ) ) )
program: answer ( count ( state ( next_to_1 ( stateid ( 'tennessee' ) ) ) ) )
program: answer ( count ( state ( loc_2 ( countryid ( 'usa' ) ) ) ) )
program: answer ( count ( state ( loc_1 ( place ( higher_2 ( highest ( place ( loc_2 ( state ( loc_1 ( largest ( capital ( city ( loc_2 ( countryid ( 'usa' ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
program: answer ( population_1 ( stateid ( 'texas' ) ) )
program: answer ( elevation_1 ( placeid ( 'mount mckinley' ) ) )
program: answer ( elevation_1 ( highest ( place ( loc_2 ( stateid ( 'montana' ) ) ) ) ) )
program: answer ( count ( state ( next_to_1 ( stateid ( 'iowa' ) ) ) ) )
program: answer ( major ( river ( loc_2 ( stateid ( 'florida' ) ) ) ) )
program: answer ( population_1 ( cityid ( 'boulder', _ ) ) )
program: answer ( count ( state ( next_to_2 ( stateid ( 'iowa' ) ) ) ) )
program: answer ( river ( loc_2 ( stateid ( 'new york' ) ) ) )
program: answer ( state ( loc_1 ( cityid ( 'san antonio', _ ) ) ) )
program: answer ( city ( loc_2 ( stateid ( 'texas' ) ) ) )
program: answer ( state ( traverse_1 ( longest ( river ( loc_2 ( stateid ( 'texas' ) ) ) ) ) ) )
program: answer ( river ( loc_2 ( stateid ( 'texas' ) ) ) )
program: answer ( capital ( city ( loc_2 ( stateid ( 'texas' ) ) ) ) )
program: answer ( capital ( loc_2 ( state ( next_to_2 ( stateid ( 'missouri' ) ) ) ) ) )
program: answer ( city ( loc_2 ( state ( traverse_1 ( riverid ( 'mississippi' ) ) ) ) ) )
program: answer ( city ( loc_2 ( state ( loc_1 ( highest ( place ( all ) ) ) ) ) ) )
program: answer ( highest ( place ( loc_2 ( state ( all ) ) ) ) )
program: answer ( major ( city ( loc_2 ( stateid ( 'alabama' ) ) ) ) )
program: answer ( major ( city ( loc_2 ( stateid ( 'alaska' ) ) ) ) )
program: answer ( major ( city ( loc_2 ( stateid ( 'new york' ) ) ) ) )
program: answer ( major ( city ( loc_2 ( state ( traverse_1 ( riverid ( 'mississippi' ) ) ) ) ) ) )
program: answer ( major ( city ( loc_2 ( state ( stateid ( 'california' ) ) ) ) ) )
program: answer ( major ( city ( loc_2 ( countryid ( 'usa' ) ) ) ) )
program: answer ( major ( city ( loc_2 ( stateid ( 'vermont' ) ) ) ) )
program: answer ( major ( river ( loc_2 ( stateid ( 'ohio' ) ) ) ) )
program: answer ( density_1 ( state ( all ) ) )
program: answer ( population_1 ( stateid ( 'mississippi' ) ) )
program: answer ( population_1 ( state ( traverse_1 ( river ( riverid ( 'mississippi' ) ) ) ) ) )
program: answer ( population_1 ( state ( traverse_1 ( riverid ( 'mississippi' ) ) ) ) )
program: answer ( population_1 ( state ( next_to_2 ( stateid ( 'texas' ) ) ) ) )
program: answer ( population_1 ( major ( city ( loc_2 ( stateid ( 'texas' ) ) ) ) ) )
program: answer ( river ( loc_2 ( stateid ( 'alaska' ) ) ) )
program: answer ( largest_one ( population_1 ( city ( all ) ) ) )
program: answer ( largest_one ( density_1 ( city ( loc_2 ( countryid ( 'usa' ) ) ) ) ) )
program: answer ( capital ( loc_2 ( state ( loc_1 ( lowest ( place ( all ) ) ) ) ) ) )
program: answer ( area_1 ( stateid ( 'florida' ) ) )
program: answer ( area_1 ( stateid ( 'ohio' ) ) )
program: answer ( area_1 ( state ( stateid ( 'texas' ) ) ) )
program: answer ( area_1 ( stateid ( 'wisconsin' ) ) )
program: answer ( largest ( city ( loc_2 ( state ( loc_1 ( river ( all ) ) ) ) ) ) )
program: answer ( largest ( capital ( city ( loc_2 ( countryid ( 'usa' ) ) ) ) ) )
program: answer ( largest ( city ( loc_2 ( stateid ( 'kansas' ) ) ) ) )
program: answer ( largest ( city ( loc_2 ( stateid ( 'louisiana' ) ) ) ) )
program: answer ( capital ( loc_2 ( stateid ( 'california' ) ) ) )
program: answer ( capital ( loc_2 ( stateid ( 'colorado' ) ) ) )
program: answer ( capital ( loc_2 ( stateid ( 'illinois' ) ) ) )
program: answer ( capital ( loc_2 ( stateid ( 'iowa' ) ) ) )
program: answer ( capital ( loc_2 ( stateid ( 'massachusetts' ) ) ) )
program: answer ( capital ( loc_2 ( stateid ( 'new jersey' ) ) ) )
program: answer ( capital ( loc_2 ( stateid ( 'new york' ) ) ) )
program: answer ( capital ( loc_2 ( stateid ( 'north dakota' ) ) ) )
program: answer ( capital ( loc_2 ( stateid ( 'ohio' ) ) ) )
program: answer ( capital ( loc_2 ( state ( loc_1 ( city ( cityid ( 'durham', _ ) ) ) ) ) ) )
program: answer ( capital ( loc_2 ( state ( stateid ( 'florida' ) ) ) ) )
program: answer ( capital ( loc_2 ( smallest ( state ( all ) ) ) ) )
program: answer ( capital ( loc_2 ( largest_one ( population_1 ( state ( all ) ) ) ) ) )
program: answer ( capital ( loc_2 ( largest_one ( density_1 ( state ( all ) ) ) ) ) )
program: answer ( capital ( loc_2 ( state ( loc_1 ( longest ( river ( all ) ) ) ) ) ) )
program: answer ( capital ( loc_2 ( largest_one ( population_1 ( state ( all ) ) ) ) ) )
program: answer ( sum ( area_1 ( state ( all ) ) ) )
program: answer ( density_1 ( stateid ( 'new york' ) ) )
program: answer ( high_point_1 ( stateid ( 'wyoming' ) ) )
program: answer ( highest ( place ( loc_2 ( stateid ( 'texas' ) ) ) ) )
program: answer ( highest ( place ( loc_2 ( countryid ( 'usa' ) ) ) ) )
program: answer ( highest ( mountain ( loc_2 ( countryid ( 'usa' ) ) ) ) )
program: answer ( highest ( mountain ( loc_2 ( countryid ( 'usa' ) ) ) ) )
program: answer ( highest ( place ( loc_2 ( stateid ( 'delaware' ) ) ) ) )
program: answer ( highest ( place ( loc_2 ( stateid ( 'iowa' ) ) ) ) )
program: answer ( highest ( place ( loc_2 ( stateid ( 'maine' ) ) ) ) )
program: answer ( highest ( place ( loc_2 ( stateid ( 'montana' ) ) ) ) )
program: answer ( highest ( place ( loc_2 ( stateid ( 'nevada' ) ) ) ) )
program: answer ( highest ( place ( loc_2 ( state ( next_to_2 ( stateid ( 'georgia' ) ) ) ) ) ) )
program: answer ( highest ( place ( loc_2 ( state ( loc_1 ( capital ( cityid ( 'austin', _ ) ) ) ) ) ) ) )
program: answer ( highest ( place ( loc_2 ( state ( next_to_2 ( stateid ( 'colorado' ) ) ) ) ) ) )
program: answer ( highest ( place ( loc_2 ( countryid ( 'usa' ) ) ) ) )
program: answer ( highest ( place ( loc_2 ( stateid ( 'virginia' ) ) ) ) )
program: answer ( highest ( place ( loc_2 ( smallest_one ( density_1 ( state ( all ) ) ) ) ) ) )
program: answer ( highest ( place ( loc_2 ( countryid ( 'usa' ) ) ) ) )
program: answer ( largest ( capital ( city ( loc_2 ( countryid ( 'usa' ) ) ) ) ) )
program: answer ( largest ( city ( loc_2 ( stateid ( 'california' ) ) ) ) )
program: answer ( largest ( city ( loc_2 ( stateid ( 'rhode island' ) ) ) ) )
program: answer ( largest ( city ( loc_2 ( smallest ( state ( traverse_1 ( riverid ( 'mississippi' ) ) ) ) ) ) ) )
program: answer ( largest ( city ( loc_2 ( smallest ( state ( loc_2 ( countryid ( 'usa' ) ) ) ) ) ) ) )
program: answer ( longest ( river ( loc_2 ( state ( stateid ( 'washington' ) ) ) ) ) )
program: answer ( largest ( state ( next_to_2 ( stateid ( 'arkansas' ) ) ) ) )
program: answer ( largest ( state ( next_to_2 ( stateid ( 'texas' ) ) ) ) )
program: answer ( smallest_one ( population_1 ( state ( all ) ) ) )
program: answer ( len ( river ( riverid ( 'colorado' ) ) ) )
program: answer ( len ( longest ( river ( traverse_2 ( stateid ( 'texas' ) ) ) ) ) )
program: answer ( len ( river ( riverid ( 'mississippi' ) ) ) )
program: answer ( len ( most ( river ( traverse_2 ( state ( all ) ) ) ) ) )
program: answer ( len ( most ( river ( traverse_2 ( state ( all ) ) ) ) ) )
program: answer ( longest ( river ( loc_2 ( stateid ( 'florida' ) ) ) ) )
program: answer ( longest ( river ( loc_2 ( largest ( state ( all ) ) ) ) ) )
program: answer ( longest ( river ( loc_2 ( most ( state ( loc_1 ( major ( city ( all ) ) ) ) ) ) ) ) )
program: answer ( longest ( river ( loc_2 ( state ( next_to_2 ( stateid ( 'nebraska' ) ) ) ) ) ) )
program: answer ( longest ( river ( traverse_2 ( state ( next_to_2 ( stateid ( 'indiana' ) ) ) ) ) ) )
program: answer ( lowest ( place ( loc_2 ( stateid ( 'arkansas' ) ) ) ) )
program: answer ( lowest ( place ( loc_2 ( stateid ( 'massachusetts' ) ) ) ) )
program: answer ( lowest ( place ( loc_2 ( stateid ( 'mississippi' ) ) ) ) )
program: answer ( lowest ( place ( loc_2 ( stateid ( 'nebraska' ) ) ) ) )
program: answer ( lowest ( place ( loc_2 ( state ( stateid ( 'california' ) ) ) ) ) )
program: answer ( lowest ( place ( loc_2 ( countryid ( 'usa' ) ) ) ) )
program: answer ( lowest ( place ( loc_2 ( state ( traverse_1 ( river ( riverid ( 'colorado' ) ) ) ) ) ) ) )
program: answer ( highest ( place ( loc_2 ( cityid ( 'san francisco', _ ) ) ) ) )
program: answer ( largest_one ( density_1 ( state ( loc_2 ( countryid ( 'usa' ) ) ) ) ) )
program: answer ( largest_one ( population_1 ( city ( all ) ) ) )
program: answer ( largest_one ( population_1 ( state ( all ) ) ) )
program: answer ( largest_one ( population_1 ( state ( traverse_1 ( riverid ( 'mississippi' ) ) ) ) ) )
program: answer ( density_1 ( stateid ( 'maine' ) ) )
program: answer ( density_1 ( largest ( state ( all ) ) ) )
program: answer ( population_1 ( stateid ( 'alaska' ) ) )
program: answer ( population_1 ( cityid ( 'boulder', _ ) ) )
program: answer ( population_1 ( cityid ( 'erie', 'pa' ) ) )
program: answer ( population_1 ( stateid ( 'hawaii' ) ) )
program: answer ( population_1 ( cityid ( 'houston', _ ) ) )
program: answer ( population_1 ( stateid ( 'maryland' ) ) )
program: answer ( population_1 ( stateid ( 'new mexico' ) ) )
program: answer ( population_1 ( city ( cityid ( 'new york', _ ) ) ) )
program: answer ( population_1 ( cityid ( 'san antonio', _ ) ) )
program: answer ( population_1 ( cityid ( 'tempe', 'az' ) ) )
program: answer ( population_1 ( largest ( city ( loc_2 ( largest_one ( area_1 ( state ( all ) ) ) ) ) ) ) )
program: answer ( smallest ( population_1 ( state ( all ) ) ) )
program: answer ( population_1 ( most ( state ( next_to_2 ( state ( all ) ) ) ) ) )
program: answer ( population_1 ( largest_one ( density_1 ( state ( all ) ) ) ) )
program: answer ( population_1 ( cityid ( 'tucson', _ ) ) )
program: answer ( population_1 ( stateid ( 'utah' ) ) )
program: answer ( population_1 ( stateid ( 'washington' ) ) )
program: answer ( smallest ( city ( loc_2 ( countryid ( 'usa' ) ) ) ) )
program: answer ( smallest ( city ( loc_2 ( countryid ( 'usa' ) ) ) ) )
program: answer ( smallest ( state ( next_to_2 ( stateid ( 'wyoming' ) ) ) ) )
program: answer ( smallest ( most ( state ( next_to_2 ( state ( all ) ) ) ) ) )
program: answer ( smallest ( state ( traverse_1 ( river ( riverid ( 'mississippi' ) ) ) ) ) )
program: answer ( largest_one ( area_1 ( state ( all ) ) ) )
program: answer ( smallest_one ( area_1 ( state ( all ) ) ) )
program: answer ( sum ( len ( river ( all ) ) ) )
program: answer ( len ( riverid ( 'mississippi' ) ) )
program: answer ( major ( city ( loc_2 ( stateid ( 'pennsylvania' ) ) ) ) )
program: answer ( most ( river ( traverse_2 ( state ( all ) ) ) ) )
program: answer ( river ( traverse_2 ( most ( state ( loc_1 ( city ( all ) ) ) ) ) ) )
program: answer ( river ( traverse_2 ( most ( state ( next_to_2 ( state ( all ) ) ) ) ) ) )
program: answer ( river ( loc_2 ( state ( next_to_2 ( stateid ( 'texas' ) ) ) ) ) )
program: answer ( river ( loc_2 ( stateid ( 'texas' ) ) ) )
program: answer ( river ( loc_2 ( stateid ( 'texas' ) ) ) )
program: answer ( river ( traverse_2 ( stateid ( 'new york' ) ) ) )
program: answer ( river ( traverse_2 ( most ( state ( next_to_2 ( state ( all ) ) ) ) ) ) )
program: answer ( largest_one ( population_1 ( state ( next_to_2 ( stateid ( 'nevada' ) ) ) ) ) )
program: answer ( state ( next_to_2 ( stateid ( 'new york' ) ) ) )
program: answer ( most ( state ( next_to_2 ( state ( all ) ) ) ) )
program: answer ( state ( loc_1 ( highest ( place ( loc_2 ( state ( traverse_1 ( river ( riverid ( 'colorado' ) ) ) ) ) ) ) ) ) )
program: answer ( largest_one ( area_1 ( state ( all ) ) ) )
program: answer ( state ( loc_1 ( largest ( capital ( all ) ) ) ) )
program: answer ( state ( loc_1 ( longest ( river ( all ) ) ) ) )
program: answer ( smallest_one ( density_1 ( state ( all ) ) ) )
program: answer ( most ( state ( loc_1 ( major ( city ( all ) ) ) ) ) )
program: answer ( most ( state ( loc_1 ( river ( all ) ) ) ) )
program: answer ( smallest_one ( population_1 ( state ( all ) ) ) )
program: answer ( state ( loc_1 ( cityid ( 'austin', _ ) ) ) )
program: answer ( state ( loc_1 ( cityid ( 'miami', _ ) ) ) )
program: answer ( largest_one ( population_1 ( state ( all ) ) ) )
program: answer ( state ( next_to_2 ( stateid ( 'arizona' ) ) ) )
program: answer ( state ( next_to_2 ( stateid ( 'florida' ) ) ) )
program: answer ( state ( next_to_2 ( stateid ( 'indiana' ) ) ) )
program: answer ( state ( next_to_2 ( stateid ( 'michigan' ) ) ) )
program: answer ( state ( next_to_2 ( stateid ( 'montana' ) ) ) )
program: answer ( state ( next_to_2 ( stateid ( 'new jersey' ) ) ) )
program: answer ( state ( next_to_2 ( state ( next_to_2 ( stateid ( 'mississippi' ) ) ) ) ) )
program: answer ( state ( next_to_2 ( state ( traverse_1 ( riverid ( 'ohio' ) ) ) ) ) )
program: answer ( intersection ( state ( next_to_2 ( stateid ( 'texas' ) ) ) , loc_1 ( major ( river ( all ) ) ) ) )
program: answer ( state ( next_to_2 ( largest_one ( population_1 ( state ( all ) ) ) ) ) )
program: answer ( state ( next_to_2 ( most ( state ( next_to_2 ( state ( all ) ) ) ) ) ) )
program: answer ( state ( next_to_2 ( most ( state ( loc_1 ( city ( all ) ) ) ) ) ) )
program: answer ( state ( next_to_2 ( most ( state ( loc_1 ( major ( city ( all ) ) ) ) ) ) ) )
program: answer ( state ( next_to_2 ( smallest_one ( area_1 ( state ( all ) ) ) ) ) )
program: answer ( state ( loc_1 ( major ( river ( all ) ) ) ) )
program: answer ( state ( traverse_1 ( river ( riverid ( 'delaware' ) ) ) ) )
program: answer ( state ( traverse_1 ( river ( riverid ( 'mississippi' ) ) ) ) )
program: answer ( state ( traverse_1 ( riverid ( 'missouri' ) ) ) )
program: answer ( state ( traverse_1 ( river ( riverid ( 'ohio' ) ) ) ) )
program: answer ( state ( loc_1 ( city ( cityid ( 'dallas', _ ) ) ) ) )
program: answer ( state ( loc_1 ( city ( cityid ( 'plano', _ ) ) ) ) )
program: answer ( state ( loc_1 ( city ( cityid ( 'portland', _ ) ) ) ) )
program: answer ( state ( loc_1 ( city ( cityid ( 'rochester', _ ) ) ) ) )
program: answer ( state ( loc_1 ( city ( cityid ( 'salt lake city', _ ) ) ) ) )
program: answer ( state ( next_to_2 ( stateid ( 'kentucky' ) ) ) )
program: answer ( loc_1 ( mountain ( all ) ) )
program: answer ( loc_1 ( cityid ( 'dallas', _ ) ) )
program: answer ( loc_1 ( cityid ( 'portland', _ ) ) )
program: answer ( loc_1 ( river ( riverid ( 'chattahoochee' ) ) ) )
program: answer ( highest ( mountain ( loc_2 ( countryid ( 'usa' ) ) ) ) )
program: answer ( highest ( place ( loc_2 ( stateid ( 'hawaii' ) ) ) ) )
program: answer ( lowest ( place ( loc_2 ( stateid ( 'maryland' ) ) ) ) )
program: answer ( largest_one ( population_1 ( city ( loc_2 ( stateid ( 'new mexico' ) ) ) ) ) )
program: answer ( loc_1 ( smallest ( city ( all ) ) ) )
program: answer ( largest_one ( population_1 ( city ( loc_2 ( stateid ( 'california' ) ) ) ) ) )
program: answer ( density_1 ( state ( traverse_1 ( longest ( river ( loc_2 ( countryid ( 'usa' ) ) ) ) ) ) ) )
program: answer ( highest ( exclude ( mountain ( all ) , loc_2 ( stateid ( 'alaska' ) ) ) ) )
program: answer ( longest ( river ( loc_2 ( countryid ( 'usa' ) ) ) ) )
program: answer ( smallest ( state ( all ) ) )
program: answer ( largest_one ( population_1 ( state ( next_to_2 ( stateid ( 'pennsylvania' ) ) ) ) ) )
program: answer ( most ( river ( traverse_2 ( state ( all ) ) ) ) )
program: answer ( most ( river ( traverse_2 ( state ( all ) ) ) ) )
program: answer ( most ( river ( traverse_2 ( state ( all ) ) ) ) )
program: answer ( exclude ( river ( all ) , traverse_2 ( stateid ( 'texas' ) ) ) )
program: answer ( exclude ( river ( all ) , traverse_2 ( countryid ( 'usa' ) ) ) )
program: answer ( river ( traverse_2 ( state ( next_to_2 ( state ( loc_1 ( capital ( cityid ( 'austin', _ ) ) ) ) ) ) ) ) )
program: answer ( river ( traverse_2 ( fewest ( state ( loc_1 ( city ( all ) ) ) ) ) ) )
program: answer ( state ( next_to_2 ( stateid ( 'hawaii' ) ) ) )
program: answer ( most ( state ( next_to_2 ( state ( all ) ) ) ) )
program: answer ( smallest_one ( population_1 ( capital ( all ) ) ) )
program: answer ( largest_one ( population_1 ( state ( all ) ) ) )
program: answer ( largest_one ( population_1 ( state ( all ) ) ) )
program: answer ( state ( loc_1 ( highest ( place ( all ) ) ) ) )
program: answer ( state ( loc_1 ( highest ( place ( all ) ) ) ) )
program: answer ( largest_one ( density_1 ( state ( all ) ) ) )
program: answer ( state ( loc_1 ( lowest ( place ( all ) ) ) ) )
program: answer ( state ( loc_1 ( lowest ( place ( loc_2 ( next_to_2 ( stateid ( 'idaho' ) ) ) ) ) ) ) )
program: answer ( smallest_one ( density_1 ( state ( all ) ) ) )
program: answer ( most ( state ( loc_1 ( major ( city ( all ) ) ) ) ) )
program: answer ( most ( state ( loc_1 ( major ( river ( all ) ) ) ) ) )
program: answer ( most ( state ( traverse_1 ( major ( river ( all ) ) ) ) ) )
program: answer ( largest_one ( population_1 ( state ( all ) ) ) )
program: answer ( most ( state ( loc_1 ( river ( all ) ) ) ) )
program: answer ( smallest_one ( density_1 ( state ( all ) ) ) )
program: answer ( smallest_one ( density_1 ( state ( all ) ) ) )
program: answer ( state ( loc_1 ( placeid ( 'mount mckinley' ) ) ) )
program: answer ( smallest ( state ( all ) ) )
program: answer ( state ( next_to_2 ( stateid ( 'illinois' ) ) ) )
program: answer ( state ( next_to_2 ( stateid ( 'kentucky' ) ) ) )
program: answer ( state ( next_to_2 ( river ( riverid ( 'missouri' ) ) ) ) )
program: answer ( state ( next_to_2 ( smallest_one ( area_1 ( state ( all ) ) ) ) ) )
program: answer ( state ( loc_1 ( largest ( city ( capital_1 ( state ( all ) ) ) ) ) ) )
program: answer ( state ( traverse_1 ( river ( riverid ( 'chattahoochee' ) ) ) ) )
program: answer ( state ( traverse_1 ( longest ( river ( all ) ) ) ) )
program: answer ( state ( traverse_1 ( riverid ( 'mississippi' ) ) ) )
program: answer ( state ( loc_1 ( river ( all ) ) ) )
program: answer ( state ( loc_1 ( city ( cityid ( 'austin', _ ) ) ) ) )
program: answer ( largest_one ( density_1 ( city ( all ) ) ) )
