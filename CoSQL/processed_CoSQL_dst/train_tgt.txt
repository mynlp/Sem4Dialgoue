SELECT avg ( salary ) FROM instructor
SELECT avg ( salary ) , dept_name FROM instructor GROUP BY dept_name
SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg ( salary ) DESC LIMIT 1
SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg ( salary ) LIMIT 1
SELECT dept_name FROM instructor where name = 'Mird'
SELECT salary FROM instructor where name = 'Mird'
SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg ( salary ) DESC LIMIT 1
SELECT station_id from station where name = "London Waterloo"
SELECT * FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id where T1.station_id = 1
SELECT T3.name, T3.time FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id where T1.station_id = 1
SELECT T2.name , T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id
SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = "Violin"
select T1.name from member as T1 join member_attendance as T2 on T1.Member_id = T2.Member_id group by T2.Member_id order by count ( * ) desc limit 1
select T1.name from member as T1 join member_attendance as T2 on T1.Member_id = T2.Member_id group by T2.Member_id order by count ( * ) asc limit 1
SELECT T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID WHERE T2.Role = "Violin"
select title from film where directed_by = "Bill Schreiner"
SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.directed_by ORDER BY sum ( T1.show_times_per_day ) DESC LIMIT 1
select original_air_date from film
SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.directed_by ORDER BY sum ( T1.show_times_per_day ) DESC LIMIT 1
SELECT rank FROM captain
SELECT Rank FROM captain where class ! = "Third-rate ship of the line"
SELECT rank FROM captain EXCEPT SELECT rank FROM captain WHERE CLASS = 'Third-rate ship of the line'
select Name from technician where Team = 'CLE' or team = 'CWS'
select Starting_Year from technician where Team = 'CLE' or team = 'CWS'
SELECT Starting_Year FROM technician WHERE Team = "CLE" INTERSECT SELECT Starting_Year FROM technician WHERE Team = "CWS"
select max ( Starting_Year ) ,min ( Starting_Year ) from technician
SELECT Starting_Year FROM technician WHERE Team = "CLE" INTERSECT SELECT Starting_Year FROM technician WHERE Team = "CWS"
SELECT classroom from teachers where lastname = "ONDERSMA"
SELECT firstname, lastname from teachers where classroom = 108
SELECT count ( distinct firstname ) from teachers
SELECT count ( distinct firstname ) from teachers where classroom = 108
SELECT count ( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = "LORIA" AND T2.lastname = "ONDERSMA"
SELECT max ( Milliseconds ) , min ( Milliseconds ) FROM TRACK
SELECT name FROM TRACK where Milliseconds = ( select max ( Milliseconds ) from track ) 
SELECT composer FROM TRACK where Milliseconds = ( select max ( Milliseconds ) from track ) 
SELECT max ( Milliseconds ) , min ( Milliseconds ) FROM TRACK
select * from song where song_name = "Tumi robe nirobe"
SELECT max ( T2.resolution ) , min ( T2.resolution ) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.duration LIKE "3:%"
SELECT * FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id where file_size > 4
SELECT max ( T2.resolution ) , min ( T2.resolution ) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.duration LIKE "3:%"
SELECT max ( capacity ) FROM classroom Where building = "Lamberton"
SELECT max ( capacity ) FROM classroom
SELECT sum ( room_number ) FROM classroom
SELECT avg ( capacity ) FROM classroom
SELECT * FROM classroom order by capacity limit 1
SELECT * FROM classroom WHERE capacity = 120
SELECT max ( capacity ) , avg ( capacity ) , building FROM classroom GROUP BY building
SELECT gender_code , COUNT ( * ) FROM Guests GROUP BY gender_code ORDER BY COUNT ( * ) DESC
SELECT guest_first_name, guest_last_name FROM Guests where gender_code = "Unknown"
SELECT date_of_birth FROM Guests where gender_code = "Unknown"
SELECT date_of_birth FROM Guests where guest_first_name like '%M%' or guest_last_name like '%M%'
SELECT gender_code , COUNT ( * ) FROM Guests GROUP BY gender_code ORDER BY COUNT ( * ) DESC
SELECT sum ( grant_amount ) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type = T3.organisation_type WHERE T3.organisation_type_description = 'Research'
SELECT grant_start_date FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type = T3.organisation_type WHERE T3.organisation_type_description = 'Research'
SELECT t1.organisation_id FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type = T3.organisation_type WHERE T3.organisation_type_description = 'Research'
SELECT sum ( grant_amount ) FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id JOIN organisation_Types AS T3 ON T2.organisation_type = T3.organisation_type WHERE T3.organisation_type_description = 'Research'
SELECT name FROM track WHERE year_opened > 2000
SELECT seating FROM track WHERE year_opened > 2000
SELECT name , seating FROM track WHERE year_opened > 2000 ORDER BY seating
SELECT name , seating FROM track WHERE year_opened > 2000 ORDER BY seating
SELECT distinct Studio FROM film
SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT count ( * ) FROM film where studio = "20th Century Fox"
SELECT Studio FROM film GROUP BY Studio ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT count ( * ) FROM order_items
SELECT count ( * ) FROM order_items where product_id = 7
SELECT count ( * ) FROM order_items where order_item_id = 2
SELECT product_id FROM order_items GROUP BY product_id ORDER BY count ( * ) DESC LIMIT 1
SELECT Major FROM student WHERE StuID = 1008
SELECT sex FROM student WHERE StuID = 1008
SELECT Age FROM student WHERE StuID = 1008
SELECT t3.fname , t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = "Hopkins Student Enterprises" AND t2.position = "CTO"
SELECT avg ( gross_in_dollar ) FROM film
SELECT Title FROM film WHERE Director = "Nicholas Meyer"
SELECT Title FROM film WHERE Director = "Walter Hill"
SELECT Studio FROM film WHERE Title = "48 Hrs"
SELECT Studio FROM film WHERE Title = "Star Trek II: The Wrath of Khan"
SELECT Studio FROM film WHERE Director = "Nicholas Meyer" INTERSECT SELECT Studio FROM film WHERE Director = "Walter Hill"
SELECT origin, destination, flno FROM Flight GROUP BY destination
SELECT destination, flno FROM Flight GROUP BY destination
SELECT destination, count ( * ) FROM Flight GROUP BY destination
SELECT destination, count ( * ) FROM Flight GROUP BY destination order by count ( * ) LIMIT 1
SELECT destination FROM Flight GROUP BY destination ORDER BY count ( * ) LIMIT 1
SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'Study Room'
SELECT dormid from dorm where dorm_name = "Dorm-plex 2000"
SELECT student_capacity from dorm where dorm_name = "Dorm-plex 2000"
SELECT gender from dorm where dorm_name = "Dorm-plex 2000"
SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge' INTERSECT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'Study Room'
select distinct job_id from employees
select HIRE_DATE from employees
select distinct phone_number from employees
SELECT * FROM job_history AS T1 JOIN employees AS T2 ON T1.employee_id = T2.employee_id WHERE T2.salary >= 12000
SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = "food"
SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = "Cancel" AND T4.product_name = "food" GROUP BY T1.customer_id HAVING count ( * )  > = 1
SELECT count ( T1.customer_name ) FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = "Cancel" AND T4.product_name = "food"
SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T3.order_item_status = "Cancel" AND T4.product_name = "food" GROUP BY T1.customer_id HAVING count ( * ) >= 1
SELECT product_id , product_name FROM products WHERE product_price < 600
SELECT product_id , product_name FROM products WHERE product_price > 900
SELECT count ( * ) FROM products WHERE product_price < 600 OR product_price > 900
SELECT product_id , product_name FROM products WHERE product_price < 600 OR product_price > 900
SELECT avg ( price ) FROM products
SELECT avg ( price ) , manufacturer FROM products group by manufacturer
Select name from manufacturers
Select name, headquarter from manufacturers
SELECT avg ( T1.price ) , T2.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.name
select count ( distinct artistid ) from artist
select Name from artist
SELECT COUNT ( * ) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = "AC/DC"
SELECT COUNT ( * ) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = "Metallica"
SELECT COUNT ( * ) FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = "Metallica"
select count ( distinct home_team ) from game
SELECT Player FROM injury_accident order by Number_of_matches desc limit 1
SELECT T1.date , T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id = T2.game_id ORDER BY T1.season DESC
SELECT document_name, document_code FROM documents EXCEPT SELECT t1.document_name, t1.document_code FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code JOIN document_sections_images AS t3 ON t2.section_id = t3.section_id
SELECT count ( * ) FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code JOIN document_sections_images AS t3 ON t2.section_id = t3.section_id
SELECT document_type_code FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code JOIN document_sections_images AS t3 ON t2.section_id = t3.section_id
SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code JOIN document_sections_images AS t3 ON t2.section_id = t3.section_id
SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall'
SELECT lname from student where fname = "Tracy"
SELECT city_code from student where fname = "Tracy" and lname = "Kim"
SELECT student_capacity from dorm where dorm_name = "Smith Hall"
SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall'
SELECT max ( stars ) , min ( stars ) FROM Rating
SELECT mID , ratingDate FROM Rating where stars = 5
SELECT mID , ratingDate FROM Rating where stars = 2
SELECT ratingDate FROM Rating where ratingDate ! = 'NULL' order by ratingdate limit 1
SELECT ratingDate FROM Rating order by ratingdate desc limit 1
SELECT max ( stars ) , min ( stars ) FROM Rating
SELECT Time FROM elimination
SELECT T1.Time,T2.name FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID
SELECT T2.name, T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID WHERE T2.Days_held > 50
SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID WHERE T2.Days_held > 50
SELECT customer_name from Customers where customer_code = 401
SELECT customer_address fROM Customers where customer_name = 'Ahmed'
SELECT customer_address fROM Customers where customer_name = 'Lukas'
SELECT customer_code fROM Customers where customer_name = 'Lukas'
SELECT T1.customer_name , T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = "New" INTERSECT SELECT T1.customer_name , T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = "Pending"
SELECT DISTINCT T1.state , T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'
SELECT DISTINCT T1.state , T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = "goalie"
select state, enr from college where cName not in ( SELECT DISTINCT T1.cName FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = "yes" ) 
SELECT DISTINCT T1.state , T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'
SELECT count ( DISTINCT t3.characteristic_name ) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = "cumin"
SELECT count ( DISTINCT t3.characteristic_name ) FROM Products AS t1 JOIN Product_Characteristics AS t2 ON t1.product_id = t2.product_id JOIN Characteristics AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = "basil"
SELECT typical_selling_price FROM Products WHERE product_name = "cumin"
SELECT count ( DISTINCT t3.characteristic_name ) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = "sesame"
select ClubLocation from Club where ClubName = 'Bootup Baltimore'
select count ( StuID ) from Student where Sex = 'F'
select Major from Student where Fname = 'Tracy'
SELECT t3.fname , t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = "Hopkins Student Enterprises" AND t3.sex = "M"
SELECT max ( year ) FROM PersonFriend
SELECT name from personfriend where year = ( select max ( year ) FROM PersonFriend ) 
SELECT friend from personfriend where name = "Zach" and year = 12
SELECT friend FROM PersonFriend WHERE name = 'Zach' AND YEAR = ( SELECT max ( YEAR ) FROM PersonFriend WHERE name = 'Zach' ) 
SELECT head_id , name FROM head WHERE name LIKE '%Ha%'
SELECT name FROM head WHERE head_id = 1
SELECT born_state FROM head where name = "Tiger Woods"
SELECT age FROM head where name = "Tiger Woods"
SELECT * FROM head order by age desc limit 1
SELECT count ( * ) FROM head where born_state = "Alabama"
SELECT head_id , name FROM head WHERE name LIKE '%Ha%'
SELECT role_code FROM Employees GROUP BY role_code ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM Employees where role_code = "ED"
SELECT employee_name,gender_MFU FROM Employees where role_code = "ED"
SELECT role_code FROM Employees GROUP BY role_code ORDER BY count ( * ) DESC LIMIT 1
SELECT sum ( T2.balance ) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid where T1.name = "Wang"
SELECT sum ( T2.balance ) , T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid GROUP BY T1.name
SELECT distinct Nationality FROM HOST WHERE Age > 45
SELECT distinct Nationality FROM HOST WHERE Age < 35
SELECT Nationality FROM HOST WHERE Age > 45 INTERSECT SELECT Nationality FROM HOST WHERE Age < 35
SELECT Nationality FROM HOST WHERE Age > 45 INTERSECT SELECT Nationality FROM HOST WHERE Age < 35
SELECT * FROM employees WHERE commission_pct ! = "null"
SELECT count ( * ) FROM employees WHERE commission_pct ! = "null"
SELECT department_id , AVG ( salary ) FROM employees WHERE commission_pct ! = "null" GROUP BY department_id
SELECT department_id , AVG ( salary ) FROM employees WHERE commission_pct != "null" GROUP BY department_id
SELECT count ( * ) from staff
SELECT last_name from staff where first_name = "Janessa"
SELECT date_of_birth FROM Staff WHERE first_name = "Janessa" AND last_name = "Sawayn"
SELECT date_of_birth FROM Staff WHERE first_name = "Janessa" AND last_name = "Sawayn";
SELECT Author FROM submission
SELECT distinct T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID
SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID GROUP BY T2.Author HAVING COUNT ( DISTINCT T1.workshop_id ) > 1
SELECT T2.Author FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID GROUP BY T2.Author HAVING COUNT ( DISTINCT T1.workshop_id ) > 1
SELECT count ( * ) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id WHERE t1.product_name = "sesame"
SELECT characteristic_id FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id WHERE t1.product_name = "sesame"
SELECT typical_selling_price from products where product_name = "sesame"
SELECT characteristic_id from product_characteristics group by characteristic_id order by count ( * ) desc limit 1
SELECT product_category_code from Products group by product_category_code order by count ( * ) limit 1
SELECT count ( * ) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id WHERE t1.product_name = "sesame"
SELECT county FROM APPELLATIONS WHERE appelation = 'Alexander Valley'
SELECT max ( T2.Price ) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.Area = "Central Coast" AND T2.year < 2005
SELECT county FROM APPELLATIONS WHERE appelation = 'Amador County'
SELECT max ( T2.Price ) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.Area = "Central Coast" AND T2.year < 2005
SELECT Length FROM roller_coaster WHERE Park = "Kemah Boardwalk"
SELECT Status FROM roller_coaster WHERE Park = "Happy Valley"
SELECT Country_ID FROM roller_coaster WHERE Name = "Hades 360"
SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1
SELECT Speed FROM roller_coaster ORDER BY LENGTH DESC LIMIT 1
SELECT headquarters FROM company WHERE main_industry = 'Banking' GROUP BY headquarters HAVING count ( * )  > = 2
SELECT company from company where main_industry = "Banking"
SELECT company,headquarters from company where main_industry = "Banking"
SELECT headquarters FROM company WHERE main_industry = 'Banking' GROUP BY headquarters HAVING count ( * ) >= 2
SELECT count ( * ) FROM orders
SELECT count ( * ) FROM Customers
SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id = t2.policy_id JOIN customers AS t3 ON t2.customer_id = t3.customer_id WHERE t1.amount_piad =  ( SELECT min ( amount_piad ) FROM claim_headers ) 
SELECT t1.amount_claimed FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id = t2.policy_id JOIN customers AS t3 ON t2.customer_id = t3.customer_id WHERE t1.amount_piad =  ( SELECT min ( amount_piad ) FROM claim_headers ) 
SELECT t3.Customer_Details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id = t2.policy_id JOIN customers AS t3 ON t2.customer_id = t3.customer_id WHERE t1.amount_piad =  ( SELECT max ( amount_piad ) FROM claim_headers ) 
SELECT t1.amount_claimed FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id = t2.policy_id JOIN customers AS t3 ON t2.customer_id = t3.customer_id WHERE t1.amount_piad =  ( SELECT max ( amount_piad ) FROM claim_headers ) 
SELECT t3.customer_details FROM claim_headers AS t1 JOIN policies AS t2 ON t1.policy_id = t2.policy_id JOIN customers AS t3 ON t2.customer_id = t3.customer_id WHERE t1.amount_piad = ( SELECT min ( amount_piad ) FROM claim_headers ) 
SELECT DISTINCT Name FROM WINE WHERE Price > ( SELECT min ( Price ) FROM wine WHERE Winery = "John Anthony" ) and Price>300
SELECT DISTINCT Name FROM WINE WHERE Price > ( SELECT min ( Price ) FROM wine WHERE Winery = "John Anthony" ) 
SELECT count ( * ) from cinema
SELECT avg ( capacity ) from cinema
SELECT count ( * ) from cinema where capacity > ( select avg ( capacity ) from cinema ) 
SELECT name, location from cinema where capacity > ( select avg ( capacity ) from cinema ) 
SELECT name , LOCATION FROM cinema WHERE capacity > ( SELECT avg ( capacity ) FROM cinema ) 
SELECT count ( master_customer_id ) FROM Customer_Master_Index
SELECT master_customer_id FROM Customer_Master_Index where cmi_details ! = ( 'Schmidt, Kertzmann and Lubowitz' ) 
SELECT t1.master_customer_id,cmi_cross_ref_id FROM Customer_Master_Index as t1 join CMI_Cross_References as t2 on t1.master_customer_id = t2.master_customer_id where t1.cmi_details not in ( 'Schmidt, Kertzmann and Lubowitz' ) 
SELECT t1.master_customer_id,cmi_cross_ref_id,source_system_code FROM Customer_Master_Index as t1 join CMI_Cross_References as t2 on t1.master_customer_id = t2.master_customer_id where t1.cmi_details ! = ( 'Schmidt, Kertzmann and Lubowitz' ) 
SELECT T1.council_tax_id FROM Rent_Arrears AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id JOIN Customer_Master_Index AS T3 ON T3.master_customer_id = T2.master_customer_id WHERE T3.cmi_details ! = 'Schmidt , Kertzmann and Lubowitz'
SELECT T1.council_tax_id FROM Rent_Arrears AS T1 JOIN CMI_Cross_References AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id JOIN Customer_Master_Index AS T3 ON T3.master_customer_id = T2.master_customer_id WHERE T3.cmi_details != 'Schmidt , Kertzmann and Lubowitz'
SELECT product FROM product WHERE max_page_size = "A4"
SELECT product FROM product WHERE pages_per_minute_color < 5
SELECT product FROM product WHERE max_page_size = "A4" AND pages_per_minute_color < 5
SELECT product,interface FROM product WHERE max_page_size = "A4" AND pages_per_minute_color < 5
SELECT product,dimensions FROM product WHERE max_page_size = "A4" AND pages_per_minute_color < 5
SELECT product FROM product WHERE pages_per_minute_color > 5
SELECT product FROM product WHERE max_page_size = "A4" AND pages_per_minute_color < 5
select * from Lots
SELECT lot_id FROM Lots EXCEPT SELECT T1.lot_id FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id = T2.lot_id
SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id = T2.lot_id
SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id = T2.lot_id
select Delegate from election where Committee = 'Appropriations'
select T1.County_name from county AS T1 JOIN election AS T2 where T1.County_Id = District and T2.Committee = 'Appropriations'
select District from election where Committee = 'Appropriations'
select T1.Population from county AS T1 JOIN election AS T2 where T1.County_Id = District and T2.Committee = 'Appropriations'
SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T2.Committee = "Appropriations"
SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count ( * ) DESC LIMIT 1
select T1.first_name, T1.last_name from customers as T1 join addresses as T2 on T2.address_id = T1.customer_address_id where T2.city = ( SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count ( * ) DESC LIMIT 1;
SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid WHERE T2.distance > 5000
SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid WHERE T2.distance > 5000 GROUP BY T1.aid ORDER BY count ( * )  > = 5
SELECT t1.eid FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid ORDER BY t2.distance desc limit 1
SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid WHERE T2.distance > 5000 GROUP BY T1.aid ORDER BY count ( * ) >= 5
select cName from Tryout where pPos = 'striker'
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'striker'
SELECT T1.enr FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'striker'
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'striker'
select count ( distinct market_id ) from phone_market
select count ( distinct name ) from phone
select T1.name from phone as T1 join phone_market as T2 on T1.phone_id = T2.phone_id group by T1.phone_id order by count ( * ) desc limit 1
SELECT count ( Name ) FROM phone WHERE Phone_id NOT IN ( SELECT Phone_ID FROM phone_market ) 
SELECT Name FROM phone WHERE Phone_id NOT IN ( SELECT Phone_ID FROM phone_market ) 
SELECT Name FROM phone WHERE Phone_id NOT IN ( SELECT Phone_ID FROM phone_market ) 
select count ( * ) from Manufacturers
select Name from Manufacturers
SELECT founder FROM manufacturers WHERE Founder LIKE 'S%'
SELECT Headquarter FROM manufacturers
SELECT founder FROM manufacturers WHERE name LIKE 'S%'
SELECT donator_name FROM endowment
SELECT count ( distinct donator_name ) FROM endowment
SELECT donator_name FROM endowment EXCEPT SELECT donator_name FROM endowment WHERE amount < 9
SELECT balance from savings where custid = 1
SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid = T2.custid
SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid = T2.custid ORDER BY T1.balance + T2.balance
SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid = T2.custid ORDER BY T1.balance + T2.balance
SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = "Hangzhou ( Zhejiang ) " AND T3.competition = "1994 FIFA World Cup qualification"
SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = "Nanjing ( Jiangsu ) " AND T3.competition = "1994 FIFA World Cup qualification"
SELECT GDP FROM city WHERE city = "Shanghai"
SELECT T3.venue FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city JOIN MATCH AS T3 ON T2.match_id = T3.match_id WHERE T1.city = "Nanjing ( Jiangsu ) " AND T3.competition = "1994 FIFA World Cup qualification"
SELECT name FROM building
SELECT T1.name , count ( * ) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id
SELECT Name FROM building ORDER BY Height_feet DESC LIMIT 1
SELECT T1.name , count ( * ) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id
SELECT * from course
SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code
SELECT T2.emp_lname , T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code
SELECT T2.emp_fname , T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code
SELECT T1.supplier_name FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id = T2.supplier_id JOIN addresses AS T3 ON T2.address_id = T3.address_id ORDER BY T3.address_details
SELECT T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id = T2.supplier_id JOIN addresses AS T3 ON T2.address_id = T3.address_id ORDER BY T3.address_details
SELECT T3.address_details FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id = T2.supplier_id JOIN addresses AS T3 ON T2.address_id = T3.address_id where T1.supplier_name = 'Tesco'
SELECT T3.address_details FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id = T2.supplier_id JOIN addresses AS T3 ON T2.address_id = T3.address_id where T1.supplier_name = 'Lidl'
SELECT T1.supplier_name , T1.supplier_phone FROM Suppliers AS T1 JOIN supplier_addresses AS T2 ON T1.supplier_id = T2.supplier_id JOIN addresses AS T3 ON T2.address_id = T3.address_id ORDER BY T3.address_details
select active_from_date from customer_contact_channels
select active_to_date from customer_contact_channels
select * from customer_contact_channels order by active_to_date limit 1
SELECT channel_code , contact_number FROM customer_contact_channels WHERE active_to_date - active_from_date = ( SELECT active_to_date - active_from_date FROM customer_contact_channels ORDER BY ( active_to_date - active_from_date ) DESC LIMIT 1 ) 
SELECT dock_count FROM station WHERE name = "San Jose Diridon Caltrain Station"
SELECT bike_id FROM trip WHERE zip_code = 94041
SELECT sum ( dock_count ) FROM station WHERE city = "San Jose"
SELECT T1.name , T1.long , avg ( T2.duration ) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id GROUP BY T1.name
SELECT T1.name , T1.long , avg ( T2.duration ) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id GROUP BY T2.start_station_id
SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR = 1989
select Book_Title from book_club where Publisher = 'Alyson'
select Book_Title,Year,Category from book_club where Publisher = 'Alyson'
SELECT publisher FROM book_club EXCEPT SELECT publisher FROM book_club WHERE YEAR = 1989
SELECT count ( * ) from club
SELECT clubId, count ( StuId ) from Member_of_club group by clubId
SELECT T1.clubId from Member_of_club as T1 join Student as T2 on T1.stuid = T2.stuid where T2.lname = 'Davis' and T2.fname = 'Steven'
SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.fname = "Davis" AND t3.lname = "Steven"
SELECT dimensions FROM product WHERE product = "Plustek MobileOffice D28 Corporate"
SELECT pages_per_minute_color FROM product WHERE product = "Xerox Travel Scanner 100"
SELECT max_page_size FROM product WHERE product = "Plustek MobileOffice D28 Corporate"
SELECT dpi FROM product WHERE product = "Fujitsu fi-6130 A4 Series Scanner"
SELECT product,pages_per_minute_color FROM product order by pages_per_minute_color desc limit 1
SELECT product FROM product WHERE product != ( SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT T1.id , T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING count ( * )  > = 2
SELECT COUNT ( DISTINCT T2.enzyme_id ) FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id WHERE name = "Aripiprazole"
SELECT COUNT ( DISTINCT T2.enzyme_id ) FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id WHERE name = "Asenapine"
SELECT T1.id , T1.Name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id GROUP BY T1.id HAVING count ( * ) >= 2
SELECT count ( t2.f1 ) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = "Mary"
SELECT count ( t2.f1 ) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = "Susan"
SELECT t2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = "Susan"
SELECT t2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = "Susan" or T1.name = "Mary"
SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = "Mary" OR T1.name = "Susan"
SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid = T2.prepnurse GROUP BY T1.employeeid ORDER BY count ( * ) DESC LIMIT 1
SELECT EmployeeID FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid = T2.prepnurse GROUP BY T1.employeeid ORDER BY count ( * ) DESC LIMIT 1
select name from nurse order by name
SELECT T1.name FROM nurse AS T1 JOIN appointment AS T2 ON T1.employeeid = T2.prepnurse GROUP BY T1.employeeid ORDER BY count ( * ) DESC LIMIT 1
SELECT color_description FROM ref_colors
SELECT color_code, product_name FROM products
SELECT typical_selling_price, product_name FROM products
SELECT t1.product_name , t1.typical_buying_price , t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t2.color_description = "yellow"
SELECT distinct fault_log_entry_id FROM Fault_Log
SELECT fault_log_entry_id, count ( * ) FROM Fault_Log_Parts GROUP BY fault_log_entry_id
SELECT count ( * ) , *, T1.fault_description , T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id where t1.fault_log_entry_id = 1 GROUP BY T1.fault_log_entry_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.fault_log_entry_id , T1.fault_description , T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.guest_first_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T1.booking_status_code = "Confirmed"
SELECT T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T1.booking_status_code = "Confirmed"
SELECT T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T1.booking_status_code = "Provisional"
SELECT T2.guest_first_name , T2.guest_last_name FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T1.booking_status_code = "Confirmed"
SELECT COUNT ( * ) FROM ( SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music' ) 
SELECT composer FROM tracks WHERE name = "For Those About To Rock ( We Salute You ) "
SELECT milliseconds FROM tracks WHERE name = "For Those About To Rock ( We Salute You ) "
SELECT composer FROM tracks WHERE name = "Fast As a Shark"
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music'
SELECT count ( distinct player_id ) from player
SELECT birth_year from player where player_id = 'aardsda01'
SELECT T1.name_first , T1.name_last , T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.name_first , T1.name_last , T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY count ( * ) DESC LIMIT 1;
select count ( * ) from book_club where Category = 'Gay SF/F' and year>'1989'
SELECT category FROM book_club WHERE YEAR > 1989 GROUP BY category HAVING count ( * ) >= 2
SELECT T1.customer_id, T2.customer_first_name, T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.card_type_code = "Credit"
SELECT T2.customer_first_name, T2.customer_last_name, count ( * ) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.card_type_code = "Credit" group by T1.customer_id
SELECT count ( * ) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = "Blanche" AND T2.customer_last_name = "Huels" AND T1.card_type_code = "Credit"
SELECT count ( * ) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = "Blanche" AND T2.customer_last_name = "Huels" AND T1.card_type_code = "Credit"
SELECT team_id FROM team ORDER BY rank ASC LIMIT 1
SELECT max ( T1.wins ) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'
SELECT year FROM postseason WHERE wins = losses
SELECT max ( T1.wins ) FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings';
SELECT gtype FROM Video_games where gameid = 1
SELECT gtype FROM Video_games where gameid = 1
SELECT gname FROM video_games where gtype = "Role-playing game"
SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count ( * ) DESC LIMIT 1
SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) from screen_mode
SELECT count ( * ) from phone
SELECT Company_name from phone WHERE Hardware_Model_name = "XPERIA T, XPERIA J"
SELECT T2.Hardware_Model_name , T2.Company_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE T1.Type = "Graphics";
select count ( distinct Swimmer_ID ) from record
SELECT count ( * ) FROM swimmer WHERE id NOT IN ( SELECT swimmer_id FROM record ) 
SELECT name FROM swimmer WHERE id NOT IN ( SELECT swimmer_id FROM record ) 
SELECT name FROM swimmer WHERE id NOT IN ( SELECT swimmer_id FROM record ) 
SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH ) 
SELECT winning_pilot FROM match group by winning_pilot order by count ( * ) desc limit 1
SELECT winning_aircraft FROM match group by winning_aircraft order by count ( * ) desc limit 1
SELECT Aircraft FROM aircraft WHERE Aircraft_ID NOT IN ( SELECT Winning_Aircraft FROM MATCH ) 
SELECT T3.course_name , count ( * ) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id
SELECT T2.student_id FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id where T3.course_name = 'statistics'
SELECT T1.student_details FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id where T3.course_name = 'statistics'
SELECT T3.course_name , count ( * ) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id JOIN courses AS T3 ON T2.course_id = T3.course_id GROUP BY T2.course_id
SELECT ship_id FROM ship WHERE name = "HM Cutter Avenger"
SELECT Flag FROM ship WHERE name = "HMS Manxman"
SELECT Built_year FROM ship WHERE name = "HMS Gorgon"
SELECT TYPE FROM ship WHERE flag = 'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag = 'Malta'
SELECT TYPE FROM ship WHERE flag = 'Panama' INTERSECT SELECT TYPE FROM ship WHERE flag = 'Malta'
SELECT count ( DISTINCT Party ) FROM party
SELECT Party FROM party WHERE Governor = "Peter Vallone"
SELECT count ( * ) FROM election
SELECT Party FROM party WHERE Governor = "Carl McCall"
SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.Committee = "Appropriations" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.Committee = "Economic Matters"
SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.Committee = "Appropriations" INTERSECT SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T1.Committee = "Economic Matters"
SELECT artist_name FROM artist WHERE country = "Bangladesh"
SELECT DISTINCT artist_name FROM artist WHERE country = "Bangladesh" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating > 7
select artist_name, gender from artist where artist_name in ( SELECT DISTINCT artist_name FROM artist WHERE country = "Bangladesh" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating > 7 ) 
select preferred_genre from artist where artist_name in ( SELECT DISTINCT artist_name FROM artist WHERE country = "Bangladesh" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating > 7 ) 
select song_name from song where artist_name in ( SELECT DISTINCT artist_name FROM artist WHERE country = "Bangladesh" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating > 7 ) 
SELECT DISTINCT artist_name FROM artist WHERE country = "Bangladesh" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating > 7
SELECT count ( * ) from authors
SELECT country from Inst where name = "University of Oxford"
SELECT title from Papers where paperID = 200
SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid JOIN inst AS t4 ON t2.instid = t4.instid WHERE t4.country = "Japan" AND t2.authorder = 1 AND t1.lname = "Ohori"
SELECT count ( * ) FROM circuits WHERE country = "France"
SELECT circuitId FROM circuits WHERE country = "France"
SELECT circuitId, location FROM circuits WHERE country = "France"
SELECT circuitid , LOCATION FROM circuits WHERE country = "France" OR country = "Belgium"
SELECT t2.id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id GROUP BY t1.station_id HAVING max ( t1.precipitation ) > 50
SELECT t2.id , t2.network_name, t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id GROUP BY t1.station_id HAVING max ( t1.precipitation ) > 50
SELECT t2.id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id GROUP BY t1.station_id HAVING max ( t1.precipitation ) < 10
SELECT min ( precipitation ) FROM weekly_weather
SELECT t2.id FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id where t1.precipitation = 10
SELECT t2.id,t2.network_name FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id where t1.precipitation = 10
SELECT t1.high_temperature,t1.wind_speed_mph FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id where t1.day_of_week = 'Friday' and T2.network_name = 'Amersham'
SELECT t2.id , t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id GROUP BY t1.station_id HAVING max ( t1.precipitation ) > 50
select apt_id from Apartments where bedroom_count > 4
select T2.facility_code from Apartments as T1 JOIN Apartment_Facilities as T2 ON T1.apt_id = T2.apt_id WHERE T1.bedroom_count > 4
select building_id,apt_type_code,apt_number from Apartments where bedroom_count > 4
SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4
SELECT name FROM races
SELECT name FROM races WHERE TIME > "12:00:00"
SELECT name FROM races WHERE TIME < "09:00:00"
SELECT name FROM races WHERE TIME > "12:00:00" OR TIME < "09:00:00"
SELECT course_id,title FROM course
SELECT T1.title,T2.prereq_id FROM course as T1 join prereq as T2 where T1.course_id = T2.course_id
SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq
SELECT course_id FROM course EXCEPT SELECT course_id FROM prereq
SELECT count ( * ) FROM management WHERE temporary_acting = 'Yes'
SELECT T1.name FROM management AS T2 JOIN head AS T1 ON T1.head_id = T2.head_id WHERE T2.temporary_acting = 'Yes'
SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id = T2.head_id WHERE T2.temporary_acting = 'Yes'
SELECT DISTINCT T1.age FROM management AS T2 JOIN head AS T1 ON T1.head_id = T2.head_id WHERE T2.temporary_acting = 'Yes'
SELECT ( T1.customer_id ) FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count ( * )  > = 3
SELECT T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count ( * )  > = 3
SELECT T1.customer_id , T1.customer_details FROM Customers AS T1 JOIN Customer_Events AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count ( * ) >= 3
SELECT count ( * ) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id
SELECT T2.customer_first_name , T2.customer_last_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.customer_first_name , T2.customer_last_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) ASC LIMIT 1
SELECT T2.customer_first_name , T2.customer_last_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) ASC LIMIT 1
SELECT Capacity FROM cinema WHERE Location = "County Wicklow"
SELECT AVG ( Capacity ) FROM cinema
SELECT LOCATION FROM cinema WHERE capacity > 300 GROUP BY LOCATION HAVING count ( * ) > 1
SELECT LOCATION FROM cinema WHERE capacity > 300 GROUP BY LOCATION HAVING count ( * ) > 1
SELECT count ( * ) FROM papers
SELECT paperID FROM papers
SELECT count ( title ) FROM papers
SELECT title FROM papers
SELECT title FROM papers WHERE title LIKE "%Database%"
SELECT pPos FROM Tryout
SELECT cName from College
SELECT avg ( enr ) from College
SELECT state from College
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid'
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie' INTERSECT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid'
SELECT School FROM university WHERE affiliation ! = 'Public'
SELECT School,Founded FROM university WHERE affiliation ! = 'Public'
SELECT School FROM university
SELECT School,Affiliation FROM university
SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1
SELECT Name FROM representative
SELECT Name FROM representative WHERE Representative_ID NOT IN ( SELECT Representative_ID FROM election ) 
SELECT Name, party FROM representative WHERE Representative_ID NOT IN ( SELECT Representative_ID FROM election ) 
SELECT Name FROM representative WHERE Representative_ID NOT IN ( SELECT Representative_ID FROM election ) 
SELECT document_description FROM Document_Types WHERE document_type_code = "APP"
SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'
SELECT count ( * ) FROM Staff
SELECT count ( DISTINCT T2.staff_id ) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T1.lesson_status_code = "Cancelled"
SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T1.lesson_status_code = "Cancelled" GROUP BY T2.first_name
SELECT first_name FROM Staff EXCEPT SELECT T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id
SELECT Country FROM manager WHERE Age > 50
SELECT Country FROM manager WHERE Age < 46
SELECT count ( * ) FROM manager WHERE Country = 'Scotland'
SELECT count ( * ) , Country FROM manager WHERE Country ! = 'Scotland' group by Country
SELECT count ( * ) FROM manager WHERE Country = 'United States' and Level = 5
SELECT Name FROM manager WHERE Country = 'United States' and Level = 5
SELECT Country FROM manager WHERE Age > 50 OR Age < 46
SELECT payment_method FROM customers WHERE customer_id = 1
SELECT customer_address FROM customers WHERE customer_name = "Wendell"
SELECT customer_name , customer_phone FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM mailshot_customers ) 
SELECT avg ( T2.stu_gpa ) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T1.class_code = T3.class_code
SELECT avg ( T2.stu_gpa ) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T1.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211'
SELECT T1.enroll_grade FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T1.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211'
SELECT avg ( T2.stu_gpa ) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T1.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211'
SELECT count ( * ) FROM employee
SELECT count ( * ) FROM employee WHERE Sex = "M"
SELECT count ( * ) FROM employee WHERE salary < 50000
SELECT count ( * ) FROM employee WHERE salary < 50000 and Sex = "M"
SELECT count ( * ) , sex FROM employee WHERE salary < 50000 GROUP BY sex
SELECT campus FROM campuses WHERE YEAR > = 1935 AND YEAR < = 1939
SELECT campus FROM campuses WHERE YEAR > 1939
SELECT count ( * ) FROM campuses
SELECT campus FROM campuses WHERE YEAR >= 1935 AND YEAR <= 1939
SELECT zip_code FROM weather GROUP BY zip_code HAVING avg ( mean_humidity ) < 70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING count ( * )  > = 200
SELECT end_station_name FROM trip GROUP BY zip_code HAVING count ( * )  > = 100 order by count ( * ) asc limit 1
SELECT ( mean_humidity ) from weather where zip_code = 94107
SELECT zip_code FROM weather GROUP BY zip_code HAVING avg ( mean_humidity ) < 70 INTERSECT SELECT zip_code FROM trip GROUP BY zip_code HAVING count ( * ) >= 100
SELECT name FROM airport
SELECT COUNT ( DISTINCT name ) FROM airport
SELECT country FROM Airport WHERE name = "Akureyri Airport"
SELECT City from airport where name = "Schiphol Airport"
SELECT country FROM airport GROUP BY country HAVING count ( * ) > 2
SELECT monthly_rental FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY AVG ( monthly_rental ) DESC LIMIT 1
SELECT T2.address_id FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY AVG ( monthly_rental ) DESC LIMIT 1
SELECT T1.student_id , T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY AVG ( monthly_rental ) DESC LIMIT 1
SELECT T1.student_id , T2.first_name FROM Student_Addresses AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY AVG ( monthly_rental ) DESC LIMIT 1
SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'Firefox'
SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'Fasterfox'
SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'CACHEbox'
SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'Fasterfox'
SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'Fasterfox'
SELECT count ( * ) ,T1.engineer_id FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id = T2.engineer_id GROUP BY T1.engineer_id
SELECT T1.engineer_id , T1.first_name , T1.last_name ,count ( * ) FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id = T2.engineer_id GROUP BY T1.engineer_id ORDER BY count ( * ) limit 1
SELECT T1.engineer_id , T1.first_name , T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 ON T1.engineer_id = T2.engineer_id GROUP BY T1.engineer_id ORDER BY count ( * ) ASC LIMIT 1
select name from club
select name from club where Club_ID = '3'
select Region from club where name = 'BK Slide'
SELECT name FROM CLub WHERE Club_ID NOT IN ( SELECT Club_ID FROM player ) 
SELECT name FROM CLub WHERE Club_ID NOT IN ( SELECT Club_ID FROM player ) 
SELECT COUNT ( * ) FROM journalist
SELECT COUNT ( * ) FROM journalist WHERE years_working > 5
SELECT name FROM journalist ORDER BY Years_working DESC LIMIT 1
SELECT T3.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name HAVING COUNT ( * ) > 1
SELECT count ( * ) FROM Apartments
SELECT count ( * ) FROM Apartment_Facilities
SELECT * FROM Apartment_Facilities
SELECT count ( * ) FROM Apartments WHERE apt_id IN ( SELECT apt_id FROM Apartment_Facilities ) 
SELECT count ( * ) FROM Apartments WHERE apt_id NOT IN ( SELECT apt_id FROM Apartment_Facilities ) 
SELECT count ( * ) FROM Apartments WHERE apt_id NOT IN ( SELECT apt_id FROM Apartment_Facilities ) 
select count ( Location ) from shop where Open_Year = '2008'
select count ( Location ) from shop where Open_Year>'2012'
select Location from shop where Open_Year>'2012'
SELECT LOCATION FROM shop WHERE Open_Year > 2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year < 2008
SELECT School, Location FROM university WHERE enrollment > 15000
SELECT Primary_conference FROM university WHERE School in ( SELECT School FROM university WHERE enrollment > 15000 ) 
SELECT sum ( enrollment ) , min ( enrollment ) FROM university
SELECT country FROM competition GROUP BY country ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT year FROM competition GROUP BY year ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT competition_type FROM competition GROUP BY competition_type ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Competition_type FROM competition GROUP BY Competition_type ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT t1.fname , t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t3.title = "Nameless , Painless"
SELECT t1.fname , t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t3.title = "Nameless , Painless"
select organisation_type from Organisation_Types
select count ( grant_id ) from Grants where organisation_id = 10
SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id = T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id = T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type = T4.organisation_type WHERE T2.grant_amount > 5000 AND T4.organisation_type_description = 'Research'
SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = "Pass"
SELECT T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = "Pass"
SELECT count ( T1.student_id ) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = "Pass"
SELECT T1.date_of_enrolment FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = "Pass"
SELECT count ( * ) FROM city
SELECT Name FROM city ORDER BY Hispanic DESC LIMIT 1
SELECT Name FROM city ORDER BY Black DESC LIMIT 1
SELECT Name FROM city ORDER BY white DESC LIMIT 1
SELECT Name FROM city ORDER BY White DESC LIMIT 5
SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT ( * ) > 1
SELECT name FROM musical GROUP BY Nominee HAVING COUNT ( * ) > 1
SELECT year FROM musical GROUP BY Nominee HAVING COUNT ( * ) > 1
SELECT distinct nominee FROM musical where year = 1986 and nominee ! = "Bob Fosse"
SELECT name FROM musical where year = 1986 and nominee = "Cleavant Derricks"
SELECT name, category FROM musical where year = 1986 and nominee = "Cleavant Derricks"
SELECT Nominee FROM musical GROUP BY Nominee HAVING COUNT ( * ) > 2
SELECT count ( * ) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T2.director = T3.name
SELECT DISTINCT T3.name FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T2.director = T3.name
SELECT DISTINCT T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T2.director = T3.name
SELECT DISTINCT T3.name , T2.title , T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T2.director = T3.name
SELECT avg ( level_of_membership ) FROM member
SELECT count ( * ) FROM member WHERE membership_card = "Black"
SELECT avg ( time_of_purchase ) FROM member WHERE membership_card = "White"
SELECT name FROM member WHERE membership_card = "White"
SELECT address FROM member EXCEPT SELECT address FROM member WHERE Membership_card = 'Black'
SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name ORDER BY count ( * ) ASC LIMIT 1
SELECT T1.part_name, count ( * ) FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id where T1.part_name = "middle"
SELECT fault_short_name from Part_Faults WHERE part_id in ( SELECT T2.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name ORDER BY count ( * ) ASC LIMIT 1 ) 
SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name ORDER BY count ( * ) ASC LIMIT 1
SELECT count ( * ) FROM airport
SELECT count ( * ) FROM operate_company
SELECT T3.id , count ( * ) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id JOIN airport AS T3 ON T2.airport_id = T3.id GROUP BY T3.id
SELECT count ( * ) from airport where country = "United States"
SELECT count ( distinct T1.id ) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id JOIN airport AS T3 ON T2.airport_id = T3.id where T3.country = "United States"
SELECT T3.id , count ( * ) FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id JOIN airport AS T3 ON T2.airport_id = T3.id GROUP BY T3.id
SELECT count ( DISTINCT Policy_Type_Code ) FROM Customer_Policies
SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code
SELECT count ( * ) FROM Customer_Policies WHERE Policy_type_code = "Life"
SELECT count ( * ) , Policy_type_code FROM Customer_Policies GROUP BY Policy_type_code having policy_type_code = "Life" or policy_type_code = "Car"
SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count ( * ) DESC LIMIT 1
SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count ( * ) LIMIT 1
SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count ( * ) DESC LIMIT 1
SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = "Janessa"
SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = "Janessa"
SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = "Camylle"
SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = "Kaitlin"
SELECT last_name from staff where first_name = 'Kaitlin'
SELECT last_name from staff where first_name = 'Janessa'
SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = "Janessa" AND T2.last_name = "Sawayn"
SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = "Janessa" AND T2.last_name = "Sawayn";
SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID WHERE T2.Order_Quantity = 1
SELECT Order_Date FROM Customer_Orders where Order_ID = 1
SELECT Customer_ID FROM Customer_Orders where Order_ID = 1
SELECT Planned_Delivery_Date FROM Customer_Orders where Customer_ID = 516
SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID WHERE T2.Order_Quantity = 1
SELECT branch_id FROM membership_register_branch
SELECT membership_amount FROM branch where Name = 'Popert'
SELECT city FROM branch where name = 'Alexandre'
SELECT name , city FROM branch WHERE branch_id NOT IN ( SELECT branch_id FROM membership_register_branch ) 
SELECT name from playlists
SELECT count ( * ) FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = "Movies"
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = "Movies"
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = "Movies";
select teacher_id from detention where detention_id = 1
select datetime_detention_end from detention where detention_id = 1
SELECT T1.middle_name FROM Teachers AS T1 WHERE T1.teacher_id = 1
SELECT T1.teacher_id , T2.last_name FROM Detention AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id WHERE T1.detention_type_code = "AFTER" GROUP BY T1.teacher_id ORDER BY count ( * ) DESC LIMIT 1
SELECT name FROM event where year = 2018
SELECT name FROM event where year > = 2014
SELECT name FROM event ORDER BY YEAR DESC LIMIT 1
SELECT name FROM event ORDER BY YEAR DESC LIMIT 1
SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = "Spain"
SELECT distinct T2.country FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T1.name = 'European Grand Prix'
SELECT T1.year FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = "Spain" order by T1.year desc limit 1
SELECT DISTINCT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = "Spain" AND T1.year > 2000
SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed > = "2009-01-01" AND T2.date_order_placed < = "2010-01-01"
SELECT count ( T1.customer_name ) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed < ( SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'George' order by T2.date_order_placed LIMIT 1 ) 
SELECT T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = 'George'
SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.date_order_placed >= "2009-01-01" AND T2.date_order_placed <= "2010-01-01"
SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count ( * ) DESC LIMIT 1
SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count ( * ) DESC LIMIT 1
SELECT avg ( total_amount_purchased ) , avg ( total_value_purchased ) FROM Product_Suppliers WHERE supplier_id =  ( SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT avg ( total_amount_purchased ) , avg ( total_value_purchased ) FROM Product_Suppliers WHERE supplier_id = ( SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count ( * ) LIMIT 1 ) 
SELECT distinct supplier_id FROM Product_Suppliers WHERE supplier_id = ( SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count ( * ) LIMIT 1 ) 
SELECT sum ( total_value_purchased ) from Product_Suppliers where supplier_id = 3
SELECT date_supplied_to from Product_Suppliers where supplier_id = 3
SELECT avg ( total_amount_purchased ) , avg ( total_value_purchased ) FROM Product_Suppliers WHERE supplier_id = ( SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT T1.Investor FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Name = "Leonardo Binchi"
SELECT sum ( T1.Money_Requested ) FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Name = "Francesco Postiglione" or T2.Name = "Leonardo Binchi" or T2.Name = "Fabrizio Buonocore"
SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Name = "Fabrizio Buonocore"
SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor! = "Rachel Elnaugh"
SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor != "Rachel Elnaugh"
SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg ( total_amount_purchased ) > 50000 OR avg ( total_amount_purchased ) < 30000
SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg ( total_amount_purchased ) < 30000
select product_id, avg ( total_amount_purchased ) from Product_Suppliers group by product_id
select date_supplied_to from Product_Suppliers order by date_supplied_to desc limit 1
SELECT supplier_id FROM Product_Suppliers GROUP BY supplier_id HAVING avg ( total_amount_purchased ) > 50000 OR avg ( total_amount_purchased ) < 30000
select city from city order by city asc
SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Feb > T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Feb > T2.Jun UNION SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city
SELECT name from journalist
SELECT T3.Name , T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID
SELECT T3.Name , T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID ORDER BY T2.Event_Attendance ASC
SELECT T3.Name , T1.Work_Type FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID
SELECT name,years_working from journalist
SELECT T3.Name , T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID ORDER BY T2.Event_Attendance ASC
SELECT COUNT ( Author_or_Editor ) from book_club
SELECT COUNT ( * ) from culture_company
SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id = T2.book_club_id WHERE T2.publisher = 'Alyson'
SELECT T1.company_name FROM culture_company AS T1 JOIN book_club AS T2 ON T1.book_club_id = T2.book_club_id WHERE T2.publisher = 'Alyson'
SELECT city FROM park GROUP BY city HAVING count ( * ) BETWEEN 2 AND 4
SELECT count ( * ) FROM park where city = "Atlanta"
SELECT city FROM park GROUP BY city HAVING count ( * ) = 4
SELECT city FROM park GROUP BY city HAVING count ( * ) = 3
SELECT city FROM park GROUP BY city HAVING count ( * ) = 2
SELECT city FROM park GROUP BY city HAVING count ( * ) BETWEEN 2 AND 4;
SELECT count ( * ) FROM employee
SELECT EMP_DOB FROM employee WHERE EMP_NUM = 101
SELECT count ( * ) FROM CLASS
SELECT emp_fname FROM employee WHERE emp_jobcode = 'PROF' EXCEPT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num
SELECT SCHOOL_CODE from DEPARTMENT where EMP_NUM = 114
SELECT SCHOOL_CODE from DEPARTMENT where DEPT_NAME = 'Fine Arts'
SELECT DEPT_ADDRESS from DEPARTMENT where DEPT_NAME = 'Accounting'
SELECT PROF_EXTENSION from PROFESSOR where DEPT_CODE = 'HIST'
SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY count ( * ) LIMIT 1
SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = "cumin"
SELECT t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = "cumin"
select product_id from Products where product_name = 'cumin'
select product_category_code from Products where product_id = '1'
select typical_selling_price from Products where product_id = '1'
SELECT t3.characteristic_name , t3.characteristic_data_type FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = "cumin"
SELECT * FROM student WHERE stu_gpa < 3
SELECT * FROM student WHERE stu_gpa > 3
SELECT * FROM student WHERE stu_gpa > 3 ORDER BY stu_dob DESC LIMIT 1
SELECT stu_fname , stu_lname , stu_gpa FROM student WHERE stu_gpa > 3 ORDER BY stu_dob DESC LIMIT 1
SELECT stu_fname , stu_lname , stu_gpa FROM student WHERE stu_gpa > 3 ORDER BY stu_dob DESC LIMIT 1
SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code JOIN Projects AS T3 ON T2.project_id = T3.project_id WHERE T3.project_details = 'sint'
SELECT T2.project_id, T3.project_details FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code JOIN Projects AS T3 ON T2.project_id = T3.project_id WHERE T2.outcome_code = 'Patent'
SELECT T1.outcome_description FROM Research_outcomes AS T1 JOIN Project_outcomes AS T2 ON T1.outcome_code = T2.outcome_code JOIN Projects AS T3 ON T2.project_id = T3.project_id WHERE T3.project_details = 'sint'
SELECT avg ( t3.age ) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = "Tennis Club"
SELECT t3.Fname, t3.Lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = "Tennis Club"
SELECT t3.city_code FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = "Tennis Club"
SELECT t2.Position FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = "Tennis Club"
SELECT avg ( t3.age ) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = "Tennis Club"
SELECT pName FROM player
SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes'
SELECT T1.pName ,T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes'
SELECT T1.pName , T1.HS FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes'
select Location from festival_detail where Festival_Name = 'Flower Awards'
select Festival_Name from festival_detail order by Num_of_Audience limit 1
select Name from artwork where Artwork_ID = 2
SELECT DISTINCT T2.Type FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID WHERE T3.Year = 2007
SELECT DISTINCT paperID FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid WHERE t1.lname = "Gibbons"
SELECT DISTINCT t1.fname , t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = "Northeastern University"
SELECT authID FROM Authors where fname = "Ralf"
SELECT DISTINCT t1.fname , t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = "Google"
SELECT DISTINCT t1.fname , t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = "Google"
select Name from Department
select Head from Department where Name = 'General Medicine'
select Name from Department where Head>4
select Name from Department order by Head desc limit 1
SELECT name FROM department GROUP BY departmentID ORDER BY count ( departmentID ) DESC LIMIT 1;
SELECT AlbumID, ArtistId FROM ALBUM where Title = 'Balls to the Wall'
SELECT distinct T2.Composer FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId where t1.title = 'For Those About To Rock We Salute You'
SELECT distinct T2.Composer FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId where t1.title = 'Balls to the Wall'
SELECT T1.Title , T2.AlbumID , COUNT ( * ) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId GROUP BY T2.AlbumID
SELECT T1.Title , T2.AlbumID , COUNT ( * ) FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId GROUP BY T2.AlbumID
SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = "Cancelled"
SELECT customer_name FROM customers where customer_id = 15
SELECT t1.customer_name , t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = "Delivered"
SELECT t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = "Delivered"
SELECT t1.customer_name , t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = "Delivered"
SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T2.src_apid ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.city FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T2.src_apid ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.name , T1.city , T2.src_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T2.src_apid ORDER BY count ( * ) DESC LIMIT 1
SELECT avg ( RAM_MiB ) FROM chip_model WHERE model_name NOT IN ( SELECT chip_model FROM phone ) 
SELECT count ( * ) FROM chip_model WHERE model_name NOT IN ( SELECT chip_model FROM phone ) 
SELECT Model_name,RAM_MiB FROM chip_model WHERE model_name NOT IN ( SELECT chip_model FROM phone ) 
SELECT count ( * ) FROM chip_model WHERE model_name IN ( SELECT chip_model FROM phone ) AND RAM_MiB > = 64
SELECT avg ( RAM_MiB ) FROM chip_model WHERE model_name NOT IN ( SELECT chip_model FROM phone ) 
SELECT count ( * ) FROM Customers
SELECT count ( * ) FROM Accounts
SELECT customer_first_name FROM Customers
SELECT customer_address FROM Customers WHERE customer_first_name = "Aniyah"
SELECT count ( * ) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = "Art" AND T2.customer_last_name = "Turcotte"
SELECT DISTINCT Hometown FROM people
SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID WHERE T1.Total_Points > 57.5
SELECT name FROM people WHERE Hometown = "Santo Domingo" or Hometown = "Bonao"
SELECT DISTINCT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID WHERE T1.Total_Points > 57.5
SELECT building FROM Faculty
select * from Faculty
SELECT building FROM Faculty WHERE rank = "Professor" GROUP BY building HAVING count ( * )  > = 10
SELECT building FROM Faculty WHERE rank = "Professor" GROUP BY building HAVING count ( * ) >= 10
SELECT founder FROM manufacturers WHERE name = 'Sony'
SELECT Headquarter FROM manufacturers WHERE name = 'Sony'
SELECT Revenue FROM manufacturers WHERE name = 'Sony'
SELECT founder FROM manufacturers WHERE name LIKE 'S%'
SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Rock'
SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Rock'
SELECT distinct T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Metal'
SELECT count ( distinct T1.Title ) FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Metal'
SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Reggae' INTERSECT SELECT T1.Title FROM Album AS T1 JOIN Track AS T2 ON T1.AlbumId = T2.AlbumId JOIN Genre AS T3 ON T2.GenreID = T3.GenreID WHERE T3.Name = 'Rock'
SELECT campus FROM campuses WHERE county = "Los Angeles" AND YEAR > 1950
SELECT campus FROM campuses WHERE county = "Los Angeles" AND YEAR < 1950
SELECT year FROM campuses WHERE county = "Los Angeles" AND YEAR < 1950
SELECT campus FROM campuses WHERE county = "Los Angeles" AND YEAR > 1950
SELECT name FROM circuits WHERE country = "Spain"
SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T1.year > 2017
SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = "Spain" AND T1.year > 2017
SELECT T1.name FROM races AS T1 JOIN circuits AS T2 ON T1.circuitid = T2.circuitid WHERE T2.country = "Spain" AND T1.year > 2017
SELECT staff_id FROM staff_department_assignments where job_title_code = "Department Manager"
SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count ( * ) LIMIT 1
SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count ( * ) LIMIT 1
SELECT T1.artist_id, T2.volume_issue FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID
SELECT * FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top > 2
SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top > 2
SELECT T1.Famous_Title FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T2.Weeks_on_Top > 2
SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.Name HAVING COUNT ( * )  > = 2
SELECT T1.Age FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.Name HAVING COUNT ( * )  > = 2
SELECT T2.work_type FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID where T1.name = "Kamila Porczyk"
SELECT T1.name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID order by T1.age asc limit 1
SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.Name HAVING COUNT ( * ) >= 2
SELECT distinct ( Country ) FROM member
SELECT Country FROM member GROUP BY Country order by COUNT ( * ) desc limit 1
SELECT Country FROM member GROUP BY Country HAVING COUNT ( * ) > 2
SELECT Country FROM member GROUP BY Country HAVING COUNT ( * ) > 2
SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id
SELECT count ( T2.student_id ) FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id WHERE T1.state_province_county = "Texas"
SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id WHERE T1.state_province_county = "Texas"
SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id WHERE T1.state_province_county = "Texas"
SELECT employee_id , salary FROM employees
SELECT employee_id , salary FROM employees WHERE salary > ( SELECT AVG ( salary ) FROM employees ) 
SELECT employee_id , first_name , last_name , salary FROM employees WHERE salary > ( SELECT AVG ( salary ) FROM employees ) 
SELECT employee_id , first_name , last_name , salary FROM employees WHERE salary > ( SELECT AVG ( salary ) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%' ) 
SELECT employee_id , first_name , last_name , salary FROM employees WHERE salary > ( SELECT AVG ( salary ) FROM employees ) AND department_id IN ( SELECT department_id FROM employees WHERE first_name LIKE '%J%' ) 
SELECT customer_id , customer_first_name FROM Customers EXCEPT SELECT T1.customer_id , T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE card_type_code = "Credit"
SELECT customer_id , customer_first_name ,customer_last_name FROM Customers EXCEPT SELECT T1.customer_id , T2.customer_first_name,T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE card_type_code = "Debit"
SELECT customer_id , card_number FROM Customers_cards
SELECT customer_id , customer_first_name FROM Customers EXCEPT SELECT T1.customer_id , T2.customer_first_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE card_type_code = "Credit"
SELECT title FROM film WHERE Director = "Walter Hill"
SELECT studio FROM film WHERE Director = "Walter Hill"
SELECT studio FROM film WHERE Director ! = "Walter Hill"
SELECT Studio FROM film EXCEPT SELECT Studio FROM film WHERE Director = "Walter Hill"
SELECT * FROM Rooms WHERE bedtype = 'King'
SELECT distinct decor FROM Rooms WHERE bedtype = 'King'
SELECT roomName, decor FROM Rooms WHERE bedtype = 'King'
SELECT roomName, decor, basePrice FROM Rooms WHERE bedtype = 'King'
SELECT roomName, decor, basePrice FROM Rooms WHERE bedtype = 'King' order by basePrice
SELECT roomName , decor FROM Rooms WHERE bedtype = 'King' ORDER BY basePrice;
SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id WHERE T1.principal_activities = 'Cargo'
SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id WHERE T1.principal_activities = 'Catering services'
SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id WHERE T1.principal_activities = 'Cargo' INTERSECT SELECT T2.pilot FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id WHERE T1.principal_activities = 'Catering services'
SELECT count ( * ) from student
select count ( * ) from ( SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in ) 
SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in
SELECT StuID FROM Student EXCEPT SELECT StuID FROM Participates_in
SELECT first_name FROM customer WHERE customer_id IN ( SELECT customer_id FROM rental WHERE rental_date < '2005-08-23 02:06:01' ) 
SELECT first_name FROM customer WHERE customer_id IN ( SELECT customer_id FROM rental WHERE rental_date < '2005-08-23 02:06:01' ) AND active = 1
SELECT first_name FROM customer WHERE customer_id NOT IN ( SELECT customer_id FROM rental WHERE rental_date > '2005-08-23 02:06:01' ) 
SELECT TYPE , count ( * ) FROM institution GROUP BY TYPE
SELECT TYPE , count ( * ) , sum ( enrollment ) FROM institution GROUP BY TYPE
SELECT TYPE , count ( * ) , sum ( enrollment ) FROM institution GROUP BY TYPE
SELECT avg ( salary ) , max ( salary ) FROM Employee
SELECT name FROM Employee order by salary desc limit 1
SELECT eid , salary FROM Employee where name = "George Wright"
SELECT name , eid FROM Employee order by salary limit 1
SELECT avg ( salary ) , max ( salary ) FROM Employee
SELECT DISTINCT artist_name FROM song WHERE languages = "english"
SELECT DISTINCT artist_name FROM song WHERE languages = "english" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating = 10
SELECT DISTINCT artist_name FROM song WHERE languages = "english" EXCEPT SELECT DISTINCT artist_name FROM song WHERE rating > 8
SELECT count ( * ) from camera_lens
SELECT name ,id FROM camera_lens WHERE name LIKE "%Digital%"
SELECT name FROM camera_lens WHERE name LIKE "%Digital%"
SELECT name, friend from personFriend
SELECT T2.friend, T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN ( SELECT name FROM Person WHERE age > 40 ) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN ( SELECT name FROM Person WHERE age < 30 ) 
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN ( SELECT name FROM Person WHERE age > 40 ) union SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN ( SELECT name FROM Person WHERE age < 30 ) 
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN ( SELECT name FROM Person WHERE age > 40 ) INTERSECT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN ( SELECT name FROM Person WHERE age < 30 ) 
SELECT LOCATION FROM bridge WHERE name = 'Kolob Arch' OR name = 'Rainbow Bridge'
SELECT length_meters FROM bridge WHERE name = 'Kolob Arch'
SELECT name FROM bridge WHERE length_feet = ( select max ( length_feet ) from bridge ) 
SELECT location FROM bridge WHERE name = "Xian Ren Qiao ( Fairy Bridge ) "
SELECT LOCATION FROM bridge WHERE name = 'Kolob Arch' OR name = 'Rainbow Bridge'
SELECT T3.year FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = t2.campus JOIN degrees AS T3 ON T1.id = t3.campus AND t2.year = t3.year ORDER BY t3.degrees DESC LIMIT 1
SELECT t1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = t2.campus JOIN degrees AS T3 ON T1.id = t3.campus AND t2.year = t3.year WHERE t3.year = 2003 ORDER BY t3.degrees DESC LIMIT 1
SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = t2.campus JOIN degrees AS T3 ON T1.id = t3.campus AND t2.year = t3.year WHERE t2.year = 2002 AND t1.campus = "California State University-Channel Islands"
SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = t2.campus JOIN degrees AS T3 ON T1.id = t3.campus AND t2.year = t3.year WHERE t2.year = 2002 AND t1.campus = "California State University-Chico"
SELECT DISTINCT T1.location FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = t2.campus JOIN degrees AS T3 ON T1.id = t3.campus AND t2.year = t3.year WHERE t1.year = 1965 AND t1.campus = "California State University-Bakersfield"
SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = t2.campus JOIN degrees AS T3 ON T1.id = t3.campus AND t2.year = t3.year WHERE t2.year = 2002 ORDER BY t3.degrees DESC LIMIT 1
SELECT Title FROM film
SELECT count ( * ) FROM film WHERE title LIKE "%Dummy%"
SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id where T1.course_id = '2'
select date_of_registration from students where student_id = '1'
select T1.login_name, T1.password from students AS T1 JOIN Student_Course_Enrolment AS T2 ON T2.student_id = T1.student_id WHERE registration_id = 2
SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT ( * ) >= 2
SELECT count ( * ) FROM ( SELECT * FROM Sportsinfo GROUP BY StuID having count ( * ) > 1 ) 
SELECT T2.Fname , T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID having count ( * ) >1
SELECT T2.Fname , T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID GROUP BY T1.StuID ORDER BY count ( * ) DESC LIMIT 1
SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = "bus" OR How_to_Get_There = "walk"
SELECT Name , Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = "bus" OR How_to_Get_There = "walk"
SELECT Name FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = "shuttle"
SELECT Name,opening_hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = "shuttle"
SELECT Name,Location_ID FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = "shuttle"
SELECT Name , Opening_Hours FROM TOURIST_ATTRACTIONS WHERE How_to_Get_There = "bus" OR How_to_Get_There = "walk"
select count ( * ) from ( SELECT * FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count ( * ) DESC LIMIT 3 ) 
SELECT T2.Fname, T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count ( * ) DESC LIMIT 3
SELECT T2.Fname , T2.Lname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count ( * ) DESC LIMIT 3
SELECT count ( * ) FROM STUDENT
SELECT city_code FROM STUDENT WHERE StuID = 1001
SELECT age FROM STUDENT WHERE StuID = 1003
SELECT Major FROM STUDENT GROUP BY Major HAVING COUNT ( * ) < 3
SELECT Fname, Lname, FacID from Faculty
SELECT T1.Fname, T1.Lname, T1.FacID, T3.activity_name from Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T3.actid
SELECT T1.Fname, T1.Lname, T1.FacID, T3.activity_name from Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T3.actid WHERE T3.activity_name ! = 'Canoeing' OR T3.activity_name ! = 'Kayaking'
SELECT lname FROM faculty WHERE rank = 'Professor' EXCEPT SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' OR T3.activity_name = 'Kayaking'
SELECT T1.role_description FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code = T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.staff_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code = T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.staff_id ORDER BY count ( * ) DESC LIMIT 1
SELECT project_id from Project_staff where staff_id = '5137097.0'
SELECT date_from, date_to from Project_staff where project_id = '7'
SELECT outcome_code from Project_Outcomes where project_id = '7'
SELECT T1.role_description , T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code = T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.staff_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.name, T2.birth_date FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id = T2.people_id
SELECT T2.name, T2.birth_date FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id = T2.people_id WHERE T2.Birth_Date LIKE "%January%"
SELECT birth_place FROM people WHERE name = "Jack Campbell"
SELECT T1.total FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id = T2.people_id WHERE T2.Birth_Date LIKE "%January%";
SELECT min ( age ) FROM people
SELECT max ( age ) FROM people
SELECT avg ( age ) FROM people
SELECT min ( age ) , max ( age ) , avg ( age ) FROM people
SELECT min ( age ) , max ( age ) , avg ( age ) FROM people
SELECT name from airports where city = 'Madang'
SELECT count ( * ) from airports where country = 'Papua New Guinea'
SELECT count ( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.country = 'Italy'
SELECT elevation from airports where name = 'Mount Hagen Kagamuga Airport'
SELECT count ( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.country = 'Italy'
SELECT name_first , name_last FROM player where player_id = "gomezle01"
SELECT name_first , name_last FROM player where player_id = "ferreri01"
SELECT name_first , name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id = T2.player_id WHERE YEAR = 1998 and name_first ! = "Rick" or name_last ! = "Ferrell" INTERSECT SELECT name_first , name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id = T2.player_id WHERE YEAR = 1998 and name_first ! = "Lefty" or name_last ! = "Gomez" INTERSECT SELECT name_first , name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id = T2.player_id WHERE YEAR = 1998 and T1.player_id ! = "gehrilo01"
SELECT name_first , name_last FROM player where player_id = "gehrilo01"
SELECT name_first , name_last FROM player AS T1 JOIN all_star AS T2 ON T1.player_id = T2.player_id WHERE YEAR = 1998
SELECT GenreId FROM Genre WHERE Name = "Latin" OR Name = "Pop"
SELECT AVG ( Milliseconds ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = "Latin" OR T1.Name = "Pop"
SELECT AVG ( UnitPrice ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = "Latin" OR T1.Name = "Pop"
SELECT AVG ( Milliseconds ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = "Latin" OR T1.Name = "Pop"
SELECT COUNT ( * ) FROM Person WHERE gender = "female"
SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Alice'
SELECT age FROM Person WHERE name = "Bob"
SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Bob'
SELECT avg ( salary ) FROM instructor WHERE dept_name = 'Physics'
Select count ( * ) from instructor where dept_name = 'Physics' and salary < ( SELECT avg ( salary ) FROM instructor WHERE dept_name = 'Physics' ) 
Select name, salary from instructor where dept_name = 'Physics' and salary < ( SELECT avg ( salary ) FROM instructor WHERE dept_name = 'Physics' ) 
SELECT name , salary FROM instructor WHERE salary < ( SELECT avg ( salary ) FROM instructor WHERE dept_name = 'Physics' ) 
SELECT count ( distinct login_name ) from students
SELECT count ( distinct login_name ) from Course_Authors_and_Tutors
SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students
SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students
SELECT * FROM Player_Attributes WHERE overall_rating > 80
SELECT count ( * ) FROM Player_Attributes WHERE overall_rating > 80 and preferred_foot = 'right'
SELECT count ( * ) FROM Player_Attributes WHERE overall_rating > 80 and preferred_foot = 'left'
SELECT count ( * ) FROM Player_Attributes WHERE overall_rating > 80 and preferred_foot = 'right'
SELECT preferred_foot , count ( * ) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot
SELECT preferred_foot , count ( * ) FROM Player_Attributes WHERE overall_rating > 80 GROUP BY preferred_foot
SELECT count ( distinct origin ) FROM train
SELECT time FROM train order by time desc limit 1
SELECT count ( train_number ) FROM train
SELECT count ( interval ) FROM train
SELECT origin FROM train GROUP BY origin HAVING count ( * ) > 1
SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Surgery' OR T3.name = 'Psychiatry'
select name,SSN from physician where employeeid = 2
select name,SSN,employeeid from physician where position = "Staff Internist"
select departmentid from department order by head desc limit 1
select departmentid,name from department order by head limit 1
SELECT T1.name FROM physician AS T1 JOIN affiliated_with AS T2 ON T1.EmployeeID = T2.physician JOIN department AS T3 ON T2.department = T3.DepartmentID WHERE T3.name = 'Surgery' OR T3.name = 'Psychiatry'
SELECT country FROM airlines WHERE active = 'Y' GROUP BY country ORDER BY count ( * ) DESC LIMIT 1
SELECT alid FROM airlines WHERE name = 'Aloha Airlines'
SELECT callsign from airlines where alid = 5
SELECT country FROM airlines WHERE active = 'Y' GROUP BY country ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T1.Population < 100000
SELECT County_name FROM county WHERE Population < 100000
SELECT COUNT ( County_name ) FROM county WHERE Population > 100000
SELECT County_name FROM county WHERE Population < 100000 AND Population > 50000
SELECT T2.Committee FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T1.Population < 100000
SELECT T2.Committee FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T1.Population < 100000 AND T1.Population > 50000
SELECT T2.Delegate FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T1.Population < 100000
SELECT artist_name FROM files WHERE f_id = '2'
SELECT f_id FROM files WHERE formats = "mp4" UNION SELECT f_id FROM song WHERE resolution > 720
select artist_name from song where song_name = 'Tumi robe nirobe'
SELECT f_id FROM files WHERE formats = "mp4" UNION SELECT f_id FROM song WHERE resolution > 720
SELECT city FROM airports GROUP BY city HAVING count ( * )  = 2
SELECT name FROM airports where country = 'Papua New Guinea'
SELECT elevation FROM airports where name = 'Madang Airport'
SELECT elevation FROM airports where name = 'Goroka Airport'
SELECT city FROM airports GROUP BY city HAVING count ( * ) = 2
SELECT sum ( T1.games ) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 1990 AND 2000
SELECT t2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br GROUP BY T1.team_ID ORDER BY sum ( T2.w ) DESC LIMIT 1
SELECT sum ( T1.games ) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 1990 AND 2000;
SELECT YEAR FROM SECTION GROUP BY semester , YEAR ORDER BY count ( * ) DESC LIMIT 1
SELECT semester FROM SECTION where year = 2002 GROUP BY semester ORDER BY count ( * ) DESC LIMIT 1
SELECT building FROM SECTION where semester = 'Fall' and YEAR = 2002
SELECT semester , YEAR FROM SECTION GROUP BY semester , YEAR ORDER BY count ( * ) DESC LIMIT 1
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id WHERE t2.rank = 'Lieutenant'
SELECT t1.Ship_ID FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id WHERE t2.rank = 'Lieutenant'
SELECT t2.age FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id WHERE t2.rank = 'Lieutenant'
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id WHERE t2.rank = 'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id WHERE t2.rank = 'Lieutenant'
SELECT count ( * ) FROM Ref_colors
SELECT product_name FROM products
SELECT T2.color_description FROM Products AS T1 JOIN Ref_Colors AS T2 on T1.color_code = T2.color_code WHERE product_id = "2"
SELECT COUNT ( * ) FROM Products WHERE product_category_code = "Herbs"
SELECT count ( * ) FROM Ref_colors WHERE color_code NOT IN ( SELECT color_code FROM products ) 
SELECT age from member where name = 'Ashby, Lazale'
SELECT Time_of_purchase from member where name = 'Ashby, Lazale'
SELECT Level_of_membership from member where name = 'Breton, Robert'
SELECT membership_card FROM member WHERE address = 'Hartford' INTERSECT SELECT membership_card FROM member WHERE address = 'Waterbury'
SELECT advisor FROM Student
SELECT advisor FROM Student GROUP BY advisor HAVING count ( * ) < 2
SELECT advisor FROM Student GROUP BY advisor HAVING count ( * )  > = 2
SELECT advisor FROM Student GROUP BY advisor HAVING count ( * ) >= 2
SELECT year FROM festival_detail group by year order by count ( * ) desc limit 1
SELECT count ( * ) FROM festival_detail group by year having year = 2008
SELECT num_of_audience FROM festival_detail where year = 2008
SELECT Num_of_Audience FROM festival_detail WHERE YEAR = 2008 OR YEAR = 2010
SELECT count ( friend ) from PersonFriend where name = 'Zach'
SELECT name,friend,year from PersonFriend where name = 'Zach'
SELECT t1.name,friend,year,age from PersonFriend as t1 join Person as t2 on t1.friend = t2.namewhere t1.name = 'Zach'
SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Zach' AND T2.year =  ( SELECT max ( YEAR ) FROM PersonFriend WHERE name = 'Zach' ) 
SELECT job FROM Person WHERE name = 'Dan'
SELECT age FROM Person WHERE name = 'Dan'
SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Zach' AND T2.year = ( SELECT max ( YEAR ) FROM PersonFriend WHERE name = 'Zach' ) 
SELECT cName FROM College WHERE enr > 10000
SELECT * FROM College WHERE enr > 10000 AND state = "LA"
SELECT enr FROM College WHERE enr > 10000 AND state = "LA"
SELECT cName , enr FROM College WHERE enr > 10000 AND state = "LA"
SELECT T1.product_name , sum ( T2.order_quantity ) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id
SELECT T1.product_name , sum ( T2.order_quantity ) ,T1.product_type_code FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id
SELECT avg ( product_price ) from products
select product_name from products where product_price < ( SELECT avg ( product_price ) from products ) 
select product_name from products where product_price> ( SELECT avg ( product_price ) from products ) 
SELECT T1.product_name , sum ( T2.order_quantity ) FROM products AS T1 JOIN order_items AS T2 ON T1.product_id = T2.product_id GROUP BY T1.product_id
select * from routes
SELECT * FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'
SELECT count ( * ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'
SELECT * FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name ! = 'American Airlines'
SELECT count ( * ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name ! = 'American Airlines'
SELECT count ( * ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'
SELECT * FROM customers where customer_id in ( select customer_id from Orders ) 
SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
select name,id from companies where id = ( SELECT company_id from office_locations group by company_id order by count ( * ) desc limit 1 ) 
SELECT T2.id FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T1.building_id ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT name FROM buildings where id = "3"
SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T1.building_id ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1
SELECT Character FROM actor where Name = 'Tom Oliver'
SELECT Name FROM actor
SELECT Duration FROM actor ORDER BY Age DESC LIMIT 1
SELECT Name FROM city
SELECT Name FROM city
SELECT Population FROM county_public_safety WHERE Name = "Abbotsford"
SELECT Crime_rate FROM county_public_safety WHERE Name = "Campbell River"
SELECT name FROM city WHERE county_ID = ( SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1 ) 
SELECT Name FROM people
SELECT Name FROM people ORDER BY Age DESC LIMIT 1
SELECT avg ( Age ) FROM people
SELECT Party FROM people GROUP BY Party ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Party FROM people GROUP BY Party ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 3
SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1
SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 3
SELECT votes from player WHERE Player_name LIKE "Jim%"
SELECT occupation from player WHERE Player_name LIKE "Jim%"
SELECT player_name from player WHERE votes > 10000
SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1
SELECT T1.surname , T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count ( * )  = 11 INTERSECT SELECT T1.surname , T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count ( * ) > 5
SELECT T1.surname , T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count ( * )  = 11
SELECT T2.raceID FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid where T1.surname = "Nakajima"
SELECT count ( * ) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid where T1.surname = "Nakajima" and T2.rank = 1
SELECT T1.surname , T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count ( * ) = 11 INTERSECT SELECT T1.surname , T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count ( * ) > 5
SELECT first_name FROM employees
SELECT last_name FROM employees
SELECT count ( * ) FROM employees where last_name like 'J%'
SELECT first_name FROM employees where last_name like 'J%'
SELECT count ( * ) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = "Steve" AND T1.last_name = "Johnson"
SELECT count ( * ) FROM employees AS T1 JOIN customers AS T2 ON T2.support_rep_id = T1.id WHERE T1.first_name = "Steve" AND T1.last_name = "Johnson";
SELECT * FROM Addresses where address_id = 3
SELECT monthly_rental from Student_Addresses where address_id = 3
SELECT monthly_rental from Student_Addresses where address_id = 1
SELECT T2.monthly_rental FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id WHERE T1.state_province_county = "Texas"
SELECT count ( * ) from tracks
SELECT count ( id ) from playlists
SELECT avg ( unit_price ) from tracks
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' INTERSECT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music'
SELECT Name FROM procedures order by cost desc limit 1
SELECT Name FROM procedures order by cost asc limit 1
SELECT MAX ( cost ) , MIN ( cost ) , AVG ( cost ) FROM procedures
SELECT MAX ( cost ) , MIN ( cost ) , AVG ( cost ) FROM procedures
SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id = t2.organization_id JOIN individuals AS t3 ON t2.individual_id = t3.individual_id WHERE t1.organization_name = "Labour Party" ORDER BY t2.date_contact_to DESC LIMIT 1
SELECT t2.date_contact_from, t2.date_contact_to FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id = t2.organization_id JOIN individuals AS t3 ON t2.individual_id = t3.individual_id WHERE t1.organization_name = "Labour Party" ORDER BY t2.date_contact_to DESC LIMIT 1
SELECT t3.individual_last_name FROM organizations AS t1 JOIN organization_contact_individuals AS t2 ON t1.organization_id = t2.organization_id JOIN individuals AS t3 ON t2.individual_id = t3.individual_id WHERE t1.organization_name = "Labour Party" ORDER BY t2.date_contact_to DESC LIMIT 1
SELECT name FROM user_profiles WHERE UID IN ( SELECT UID FROM tweets ) 
SELECT avg ( followers ) FROM user_profiles WHERE UID IN ( SELECT UID FROM tweets ) 
SELECT avg ( followers ) FROM user_profiles WHERE UID IN ( SELECT UID FROM tweets ) 
SELECT COUNT ( * ) FROM airlines
SELECT count ( * ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.name ORDER BY count ( * ) ASC LIMIT 1
SELECT count ( * ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.name ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.name ORDER BY count ( * ) DESC LIMIT 1
SELECT country FROM airlines WHERE name = "Ryanair"
SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.name ORDER BY count ( * ) DESC LIMIT 1
SELECT Name FROM PHOTOS where photo_id = 280
SELECT Description FROM PHOTOS where name = 'game2'
SELECT Tourist_Attraction_ID FROM PHOTOS where Name = 'game2'
SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = "game2"
SELECT T1.Name , T1.Description FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T2.Name = "film festival"
SELECT COUNT ( * ) FROM web_client_accelerator
SELECT connection FROM web_client_accelerator WHERE name = "CACHEbox"
SELECT operating_system FROM web_client_accelerator
SELECT name FROM web_client_accelerator
SELECT T1.id , T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id GROUP BY T1.id HAVING count ( * ) >= 2
SELECT catalog_name FROM catalogs
select catalog_publisher,count ( * ) from Catalogs group by catalog_publisher order by count ( * ) desc
SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count ( * ) DESC LIMIT 1
SELECT name FROM Companies WHERE Headquarters = "USA"
SELECT Industry FROM Companies WHERE name = "General Electric"
SELECT Profits_billion FROM Companies WHERE name = "General Electric"
SELECT name FROM Companies ORDER BY Assets_billion DESC LIMIT 1
SELECT Market_Value_billion FROM Companies WHERE name = "BNP Paribas"
SELECT Headquarters FROM Companies GROUP BY Headquarters HAVING COUNT ( * ) > 2
SELECT T2.Name FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T2.Name
SELECT T2.Party FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T2.Name
SELECT count ( * ) FROM debate_people WHERE If_Affirmative_Win = 'T'
SELECT T2.Name , COUNT ( * ) FROM debate_people AS T1 JOIN people AS T2 ON T1.Affirmative = T2.People_ID GROUP BY T2.Name
SELECT staff_details FROM Research_Staff where staff_id = 1
SELECT organisation_type FROM Organisations where organisation_id = 1
SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.organisation_type FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_type ORDER BY count ( * ) DESC LIMIT 1
SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id WHERE T1.country = 'United States'
SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id WHERE T1.name = 'Billund Airport'
SELECT T2.pilot, T2.velocity FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id WHERE T1.name = 'Ted Stevens Airport'
SELECT DISTINCT T2.pilot FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id WHERE T1.country = 'United States' OR T1.name = 'Billund Airport'
SELECT oppose_rate FROM candidate ORDER BY oppose_rate LIMIT 1
SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1
SELECT poll_source FROM candidate ORDER BY oppose_rate LIMIT 1
SELECT Candidate_ID FROM candidate ORDER BY oppose_rate LIMIT 1
SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t1.fname = "Matthias" AND t1.lname = "Blume"
SELECT COUNT ( t1.authID ) FROM authorship as t1 join authors as t2 on t1.authID = t2.authID where t2.fname = "Matthias" AND t2.lname = "Blume"
SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t1.fname = "Matthias" AND t1.lname = "Blume"
SELECT t1.claim_header_id FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id = t2.claim_id WHERE t2.document_type_code = "Document"
SELECT t1.claim_header_id FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id = t2.claim_id WHERE t2.document_type_code = "Document" ORDER BY created_date LIMIT 1
SELECT t1.amount_claimed FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id = t2.claim_id WHERE t2.created_date =  ( SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1 ) 
SELECT sum ( t1.amount_claimed ) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id = t2.claim_id WHERE t2.created_date =  ( SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1 ) 
SELECT sum ( t1.amount_claimed ) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id = t2.claim_id WHERE t2.created_date = ( SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1 ) 
SELECT name FROM manufacturers WHERE revenue < ( SELECT min ( revenue ) FROM manufacturers WHERE headquarter = 'Austin' ) 
SELECT Revenue FROM manufacturers WHERE revenue < ( SELECT min ( revenue ) FROM manufacturers WHERE headquarter = 'Austin' ) 
SELECT name,Revenue FROM manufacturers WHERE revenue < ( SELECT min ( revenue ) FROM manufacturers WHERE headquarter = 'Austin' ) 
SELECT name FROM manufacturers WHERE revenue > ( SELECT min ( revenue ) FROM manufacturers WHERE headquarter = 'Austin' ) 
SELECT name,revenue FROM manufacturers WHERE revenue > ( SELECT min ( revenue ) FROM manufacturers WHERE headquarter = 'Austin' ) 
SELECT name FROM manufacturers WHERE revenue < ( SELECT min ( revenue ) FROM manufacturers WHERE headquarter = 'Austin' ) 
SELECT distinct Nominee FROM musical WHERE Award = "Tony Award"
SELECT distinct Nominee FROM musical WHERE Award = "Drama Desk Award"
SELECT Nominee FROM musical WHERE Award = "Tony Award" INTERSECT SELECT Nominee FROM musical WHERE Award = "Drama Desk Award"
SELECT Nominee FROM musical WHERE Award = "Tony Award" INTERSECT SELECT Nominee FROM musical WHERE Award = "Drama Desk Award"
SELECT count ( * ) FROM Faculty WHERE Rank = "Professor"
SELECT count ( distinct building ) FROM Faculty
SELECT count ( * ) FROM Faculty WHERE Rank = "Professor" AND building = "NEB"
SELECT count ( * ) FROM Faculty WHERE Rank = "Professor" AND building = "NEB"
SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id HAVING count ( * ) > 30
select count ( * ) from film_actor where actor_id = '9'
select first_name,last_name from actor where actor_id = '9'
select first_name, last_name from actor where first_name = 'JOE' and last_name ! = 'SWANK'
SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id HAVING count ( * ) > 30
SELECT Name FROM ship WHERE Nationality = "United States"
SELECT Name FROM ship WHERE Nationality = "United Kingdom"
SELECT type FROM ship WHERE name = "Corbridge"
SELECT tonnage FROM ship WHERE name = "Corbridge"
SELECT name FROM ship WHERE tonnage = "3146"
SELECT name FROM ship order by tonnage desc limit 1
SELECT count ( distinct type ) FROM ship
SELECT Name FROM ship WHERE Nationality = "United States" OR Nationality = "United Kingdom"
SELECT skill_id, skill_code FROM skills where skill_id = 1 or skill_id = 2 or skill_id = 3
SELECT count ( distinct part_fault_id ) from skills_required_to_fix
SELECT skill_description from skills where skill_id = 3
SELECT T1.skill_id , T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id = T2.skill_id GROUP BY T1.skill_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.skill_id , T1.skill_description FROM Skills AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.skill_id = T2.skill_id GROUP BY T1.skill_id ORDER BY count ( * ) DESC LIMIT 1
SELECT COUNT ( * ) FROM player
SELECT Player FROM player
SELECT Age FROM player WHERE Player = "Timothy Beckham"
SELECT Position FROM player WHERE Player = "Pedro Álvarez"
SELECT LOCATION FROM school WHERE School_ID NOT IN ( SELECT School_ID FROM Player ) 
SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rank ) DESC LIMIT 1
SELECT i_id FROM item where title = "cup"
SELECT T1.title , T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rank ) DESC LIMIT 1
SELECT T1.title , T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rank ) DESC LIMIT 1
SELECT name FROM instructor WHERE dept_name = "Statistics"
SELECT avg ( salary ) FROM instructor WHERE dept_name = "Statistics"
SELECT name FROM instructor where dept_name = "Statistics" order by salary desc limit 1
SELECT salary FROM instructor where dept_name = "Statistics" order by salary desc limit 1
SELECT name FROM instructor WHERE name LIKE '%dar%'
SELECT count ( * ) FROM candidate
SELECT max ( support_rate ) FROM candidate
SELECT min ( consider_rate ) FROM candidate
SELECT min ( Oppose_rate ) FROM candidate
SELECT avg ( Unsure_rate ) FROM candidate
SELECT max ( support_rate ) , min ( consider_rate ) , min ( oppose_rate ) FROM candidate
SELECT dormid FROM dorm ORDER BY student_capacity DESC LIMIT 1
SELECT COUNT ( T1.stuid ) FROM lives_in AS T1 JOIN dorm AS T2 ON T1.dormid = T2.dormid WHERE T2.student_capacity =  ( SELECT max ( student_capacity ) FROM dorm ) 
SELECT avg ( T1.age ) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.student_capacity =  ( SELECT max ( student_capacity ) FROM dorm ) 
SELECT avg ( T1.age ) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.student_capacity = ( SELECT max ( student_capacity ) FROM dorm ) 
SELECT distinct ( team_id ) FROM team where name = "Boston Red Stockings"
SELECT T1.player_id FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'
SELECT sum ( T1.salary ) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year = 2010
SELECT sum ( T1.salary ) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year = 2010
SELECT name FROM architect WHERE gender = 'male' ORDER BY name
SELECT name FROM architect WHERE gender = 'male' ORDER BY name
SELECT name FROM architect WHERE gender = 'male'
SELECT name , nationality , id FROM architect WHERE gender = 'male' ORDER BY name
SELECT name , nationality , id FROM architect WHERE gender = 'male' ORDER BY name
SELECT first_name FROM employees
SELECT first_name, salary FROM employees
SELECT first_name, salary FROM employees WHERE first_name NOT LIKE '%M%'
SELECT first_name, salary FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY salary DESC
SELECT phone_number FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY salary DESC LIMIT 1
SELECT email FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY salary DESC LIMIT 1
SELECT first_name , last_name , hire_date , salary , department_id FROM employees WHERE first_name NOT LIKE '%M%'
SELECT T1.id , T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id GROUP BY T1.id HAVING count ( * )  > = 2
SELECT count ( distinct browser_id ) from accelerator_compatible_browser
SELECT operating_system from Web_client_accelerator where name = "CProxy"
SELECT name from Web_client_accelerator where operating_system = "Appliance ( Linux ) "
SELECT T1.id , T1.Name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id GROUP BY T1.id HAVING count ( * ) >= 2
Select * from customers
SELECT * FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id
SELECT * FROM customers EXCEPT SELECT * FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id
select start_date from policies
SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id
SELECT regional_population FROM city ORDER BY Regional_Population DESC LIMIT 1
SELECT city FROM city ORDER BY Regional_Population DESC LIMIT 1
SELECT GDP FROM city where city = "Shanghai"
SELECT gdp FROM city ORDER BY Regional_Population DESC LIMIT 1
SELECT Starting_year FROM player_coach
SELECT Coach_name FROM coach WHERE Gender = "M"
SELECT Residence FROM player
SELECT T3.Player_name , T3.gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID WHERE T1.Starting_year > 2011
SELECT T3.Player_name , T3.gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID WHERE T1.Starting_year > 2011
SELECT distinct department_id FROM staff_department_assignments
SELECT department_id,count ( staff_id ) FROM staff_department_assignments GROUP BY department_id ORDER BY count ( * ) 
SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count ( * ) LIMIT 1
SELECT department_id FROM staff_department_assignments GROUP BY department_id ORDER BY count ( * ) LIMIT 1
SELECT flag FROM ship GROUP BY flag ORDER BY count ( * ) LIMIT 1
SELECT count ( flag ) FROM ship
SELECT count ( distinct Built_Year ) FROM ship
SELECT count ( distinct Name ) FROM ship
SELECT count ( distinct Type ) FROM ship
SELECT flag FROM ship GROUP BY flag ORDER BY count ( * ) DESC LIMIT 1
SELECT * FROM staff
SELECT T1.first_name , T1.last_name , T1.staff_id FROM staff AS T1 JOIN payment AS T2 ON T1.staff_id = T2.staff_id GROUP BY T1.staff_id ORDER BY count ( * ) ASC LIMIT 1
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING count ( * ) > 1
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING count ( * )  = 1
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING count ( * )  = 0
select loan_ID from loan where loan_type = 'Mortgages'
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id where loan_type = 'Mortgages'
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING count ( * ) > 1
SELECT building_address FROM Apartment_Buildings
SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T2.bedroom_count > 1
SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T2.bathroom_count > 2
SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T2.bathroom_count > 2
SELECT T1.name_first , T1.name_last , T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.name_first , T1.name_last , T2.player_id FROM player AS T1 JOIN manager_award AS T2 ON T1.player_id = T2.player_id GROUP BY T2.player_id ORDER BY count ( * ) DESC LIMIT 1;
SELECT name FROM station ORDER BY lat LIMIT 1
SELECT lat FROM station ORDER BY lat LIMIT 1
SELECT city FROM station WHERE name = "San Jose Diridon Caltrain Station"
SELECT name , lat , city FROM station ORDER BY lat LIMIT 1
SELECT sum ( injured ) FROM perpetrator WHERE country = "China" OR country = "Japan"
SELECT Killed FROM perpetrator WHERE country = "South Korea"
SELECT location FROM perpetrator WHERE Perpetrator_ID = "3"
SELECT Country , COUNT ( * ) FROM perpetrator GROUP BY Country ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT count ( Headquarter ) from Manufacturers
SELECT max ( Price ) from Products
SELECT avg ( T1.Price ) , T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name HAVING avg ( T1.price ) >= 150
SELECT T1.order_id ,T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id
SELECT T1.order_id ,T2.product_id,T1.date_order_placed FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed > = "1975-01-01" AND T1.date_order_placed < = "1976-01-01"
SELECT DISTINCT T2.product_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id WHERE T1.date_order_placed >= "1975-01-01" AND T1.date_order_placed <= "1976-01-01"
SELECT * FROM department AS T1 JOIN physician AS T2 ON T1.head = T2.EmployeeID GROUP BY departmentID ORDER BY count ( departmentID ) LIMIT 1
SELECT T2.name FROM department AS T1 JOIN physician AS T2 ON T1.head = T2.EmployeeID where T1.name = 'General Medicine'
select position from physician where name = "Percival Cox"
SELECT T2.name , T2.position FROM department AS T1 JOIN physician AS T2 ON T1.head = T2.EmployeeID GROUP BY departmentID ORDER BY count ( departmentID ) LIMIT 1;
SELECT COUNT ( * ) FROM ( SELECT * FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.order_id HAVING count ( * ) > 2 ) 
SELECT T2.order_id , T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.order_id HAVING count ( * ) > 2
SELECT t2.customer_id FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.order_id HAVING count ( * ) > 2
SELECT T2.order_id , T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.order_id HAVING count ( * ) > 2
SELECT COUNT ( * ) FROM Participants
SELECT Participant_Type_Code FROM Participants WHERE Participant_Details = "Karlee Batz"
SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count ( * ) DESC LIMIT 1
SELECT participant_id FROM participants WHERE Participant_Details = "Lupe Deckow"
SELECT participant_type_code FROM participants GROUP BY participant_type_code ORDER BY count ( * ) DESC LIMIT 1
SELECT dept_name FROM course GROUP BY dept_name ORDER BY count ( * ) DESC LIMIT 3
SELECT dept_name FROM course GROUP BY dept_name ORDER BY count ( * ) LIMIT 3
SELECT dept_name FROM course GROUP BY dept_name ORDER BY count ( * ) DESC LIMIT 3
SELECT count ( * ) FROM student WHERE sex = 'F' AND Major = 600
SELECT count ( * ) FROM student WHERE sex = 'F'
SELECT count ( * ) FROM student WHERE sex = 'F' AND age < 25
SELECT Age FROM student WHERE sex = 'F' AND age < 25
SELECT count ( * ) FROM student WHERE sex = 'F' AND age < 25
SELECT FName,LName FROM student WHERE sex = 'F' AND age < 25
SELECT count ( * ) FROM student WHERE sex = 'F' AND age < 25
SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5
SELECT email,followers FROM user_profiles where name = "Iron Man"
SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1
SELECT followers FROM user_profiles where name = "Tyler Swift"
SELECT email,partitionid FROM user_profiles where name = "Tyler Swift"
SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 5
SELECT count ( Claim_Stage_ID ) from Claims_Processing_Stages
SELECT count ( distinct Staff_ID ) from Claims_Processing
SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id = t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID WHERE T3.Number_of_hosts > 20
SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID order by T3.Number_of_hosts asc limit 1
SELECT T3.location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID order by T2.age desc limit 1
SELECT T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID WHERE T3.Number_of_hosts > 20
SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor = "Simon Woodroffe" OR T1.Investor = "Peter Jones"
SELECT Money_Requested from entrepreneur where Investor = 'Simon Woodroffe' or Investor = 'Peter Jones'
SELECT Entrepreneur_ID from entrepreneur order by Money_Requested desc limit 1
SELECT Entrepreneur_ID,Investor,Company from entrepreneur order by Money_Requested desc limit 1
SELECT T2.Date_of_Birth FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Investor = "Simon Woodroffe" OR T1.Investor = "Peter Jones"
SELECT gradepoint,lettergrade FROM GRADECONVERSION
SELECT max ( gradepoint ) FROM GRADECONVERSION
SELECT LETTERGRADE, max ( gradepoint ) FROM GRADECONVERSION GROUP BY LETTERGRADE
SELECT min ( gradepoint ) , lettergrade FROM GRADECONVERSION group by lettergrade
SELECT min ( gradepoint ) FROM GRADECONVERSION
SELECT max ( gradepoint ) , min ( gradepoint ) FROM GRADECONVERSION
SELECT max ( gradepoint ) , min ( gradepoint ) FROM GRADECONVERSION
SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211'
SELECT COUNT ( DISTINCT CLASS_SECTION ) FROM CLASS
SELECT CLASS_TIME FROM CLASS WHERE CRS_CODE = "ACCT-211"
SELECT T3.stu_fname FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN student AS T3 ON T2.stu_num = T3.stu_num WHERE T1.crs_code = 'ACCT-211'
select Name,Revenue from Manufacturers where Headquarter = 'Austin'
select Name from Manufacturers where Revenue<100
select Name,Revenue from Manufacturers where Revenue<100
SELECT name FROM manufacturers WHERE revenue < ( SELECT min ( revenue ) FROM manufacturers WHERE headquarter = 'Austin' ) 
SELECT sum ( hoursperweek ) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Fname = "David" AND T2.Lname = "Shieber"
SELECT sum ( GamesPlayed ) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Fname = "David" AND T2.Lname = "Shieber"
SELECT Fname, Lname from student where stuid = ( select stuid from sportsinfo group by stuid order by sum ( hoursperweek ) desc limit 1 ) 
select sum ( Gamesplayed ) from sportsinfo group by stuid order by sum ( hoursperweek ) desc limit 1
SELECT sum ( hoursperweek ) , sum ( gamesplayed ) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.Fname = "David" AND T2.Lname = "Shieber"
SELECT founded FROM university WHERE school = 'University of Delaware'
SELECT founded FROM university WHERE school = 'Lebanon Valley College'
SELECT Affiliation FROM university WHERE school = 'University of Rhode Island'
SELECT school FROM university WHERE founded > 1850 OR affiliation = 'Public'
SELECT Draft_Class from match_season WHERE season = 1996.0
SELECT Draft_Pick_Number from match_season WHERE season = "1998.0" AND country = "6"
SELECT player from match_season WHERE season = "1996.0" AND team = "1"
SELECT College FROM match_season WHERE POSITION = "Midfielder" INTERSECT SELECT College FROM match_season WHERE POSITION = "Defender"
SELECT College FROM match_season WHERE POSITION = "Midfielder" INTERSECT SELECT College FROM match_season WHERE POSITION = "Defender"
SELECT Residence FROM player
SELECT Residence FROM player where gender = "M" intersect SELECT Residence FROM player where gender = "F"
SELECT count ( * ) FROM player where gender = "M" and residence = "Winnipeg"
SELECT count ( * ) FROM player where gender = "F" and residence = "Winnipeg"
SELECT count ( distinct residence ) FROM player
select count ( * ) from ( SELECT * FROM player GROUP BY Residence HAVING COUNT ( * ) > 1 ) 
SELECT residence FROM player GROUP BY Residence HAVING COUNT ( * ) > 1
SELECT Residence FROM player GROUP BY Residence HAVING COUNT ( * ) >= 2
SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3
SELECT Poll_Source, Support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3
SELECT Poll_Source FROM candidate ORDER BY Date DESC LIMIT 1
SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3
SELECT count ( distinct T1.Name ) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID
select count ( * ) from ( SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name HAVING COUNT ( * ) > 1 ) 
SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name HAVING COUNT ( * ) > 1
SELECT T1.Name,count ( * ) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name HAVING COUNT ( * ) > 1
SELECT T2.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID where T1.Name = 'Austria' or T1.Name = 'Finland'
SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name HAVING COUNT ( * ) > 1
SELECT attendance FROM home_game where team_id = 'CH1'
SELECT T2.team_id FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id WHERE T1.year = 2014 GROUP BY T1.team_id ORDER BY avg ( T1.attendance ) DESC LIMIT 1
SELECT team_id FROM home_game where attendance = 3000
SELECT T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg ( T1.attendance ) DESC LIMIT 1
SELECT T2.team_id , T2.rank FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id WHERE T1.year = 2014 GROUP BY T1.team_id ORDER BY avg ( T1.attendance ) DESC LIMIT 1;
select max ( monthly_rental ) from student_addresses
select address_id from student_addresses order by monthly_rental desc limit 1
SELECT T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id ORDER BY monthly_rental DESC LIMIT 1
SELECT T2.address_id , T1.city FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id GROUP BY T2.address_id ORDER BY AVG ( monthly_rental ) DESC LIMIT 1
SELECT name from airports where city = 'Mount Hagen'
SELECT count ( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid JOIN airlines AS T3 ON T1.alid = T3.alid WHERE T2.country = 'Italy' AND T3.name = 'American Airlines'
SELECT count ( * ) from airlines where active = 'Y'
SELECT elevation from airports where name = 'Madang Airport'
SELECT count ( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid JOIN airlines AS T3 ON T1.alid = T3.alid WHERE T2.country = 'Italy' AND T3.name = 'American Airlines'
SELECT T1.dorm_name FROM dorm AS T1 JOIN lives_in AS T4 ON T4.dormid = T1.dormid JOIN student AS T5 ON T5.stuid = T4.stuid WHERE T5.lname = 'Smith'
SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid JOIN lives_in AS T4 ON T4.dormid = T1.dormid JOIN student AS T5 ON T5.stuid = T4.stuid WHERE T5.lname = 'Smith'
SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid JOIN lives_in AS T4 ON T4.dormid = T1.dormid JOIN student AS T5 ON T5.stuid = T4.stuid WHERE T5.lname = 'Jones'
SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid JOIN lives_in AS T4 ON T4.dormid = T1.dormid JOIN student AS T5 ON T5.stuid = T4.stuid WHERE T5.age = ( select max ( age ) from student ) 
SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid JOIN lives_in AS T4 ON T4.dormid = T1.dormid JOIN student AS T5 ON T5.stuid = T4.stuid WHERE T1.dormid = ( select T1.dormid from dorm as T1 join lives_in as T4 on T1.dormid = T4.dormid join student as T5 on T4.stuid = T5.stuid where T5.sex = "F" group by T1.dormid order by count ( * ) desc limit 1 ) 
SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid jOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid where T1.student_capacity = ( select min ( student_capacity ) from dorm ) 
SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid JOIN lives_in AS T4 ON T4.dormid = T1.dormid JOIN student AS T5 ON T5.stuid = T4.stuid WHERE T5.lname = 'Smith'
SELECT student_id FROM student_course_registrations
SELECT student_id FROM student_course_registrations UNION SELECT student_id FROM student_course_attendance
SELECT founder from manufacturers where name = "Sony"
SELECT name from manufacturers where headquarter = "Austin"
SELECT revenue from manufacturers where name = "Hewlett-Packard"
SELECT count ( * ) FROM manufacturers WHERE headquarter = 'Tokyo' OR headquarter = 'Beijing'
SELECT count ( * ) FROM manufacturers WHERE headquarter = 'Tokyo' OR headquarter = 'Beijing'
SELECT COUNT ( * ) FROM ( SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_id HAVING count ( * ) > 2 ) 
SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_id HAVING count ( * ) > 2
SELECT T1.part_name , T1.part_id FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_id HAVING count ( * ) > 2
select count ( course_id ) from course
select count ( * ) from ( SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count ( * ) > 1 ) 
SELECT T1.title FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count ( * ) > 1
SELECT T1.dept_name,T1.course_id FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count ( * ) > 1
SELECT T1.credits,T1.course_id FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count ( * ) > 1
SELECT T1.title , T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count ( * ) > 1
SELECT count ( * ) FROM Student WHERE city_code = "HKG" OR city_code = "CHI"
SELECT count ( * ) FROM Student WHERE city_code = "HKG" OR city_code = "CHI"
SELECT count ( * ) FROM Customers
SELECT customer_name FROM Customers
SELECT customer_number FROM Customers WHERE customer_name = "Kayley"
SELECT T2.order_status_code FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = "Sterling"
SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT * FROM procedures WHERE cost > 1000
SELECT * FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = "John Wen"
SELECT name FROM procedures WHERE cost > 1000 INTERSECT SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = "John Wen"
SELECT T2.CertificationExpires FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = "John Wen"
SELECT name FROM procedures WHERE cost > 1000 UNION SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = "John Wen"
select count ( * ) from stadium
SELECT T1.id , count ( * ) FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id GROUP BY T1.id
SELECT T1.id , sum ( Total_Attendance ) FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id GROUP BY T1.id
SELECT T1.id , count ( * ) FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id GROUP BY T1.id
SELECT fault_status from Engineer_Visits where engineer_visit_id = 1
SELECT fault_status from Engineer_Visits where engineer_id = 8
SELECT other_visit_details from Engineer_Visits where engineer_id = 8
SELECT T1.staff_name , count ( * ) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id GROUP BY T1.staff_name
SELECT COUNT ( * ) FROM customer
SELECT first_name FROM customer
SELECT T2.address , T1.email FROM customer AS T1 JOIN address AS T2 ON T2.address_id = T1.address_id WHERE T1.first_name = 'LINDA'
SELECT T2.invoice_date FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id ORDER BY total LIMIT 10
SELECT T1.first_name, T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id ORDER BY total LIMIT 10
SELECT T1.first_name , T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id ORDER BY total LIMIT 10;
SELECT count ( city ) FROM city WHERE regional_population > 8000000
SELECT count ( city ) FROM city WHERE regional_population < 5000000
SELECT city FROM city WHERE regional_population < 5000000
SELECT city FROM city WHERE regional_population > 10000000 UNION SELECT city FROM city WHERE regional_population < 5000000
select apt_type_code from Apartments order by room_count limit 1
select building_id from Apartments where apt_number = 'Suite 645'
SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg ( room_count ) DESC LIMIT 3
SELECT Allergy FROM Allergy_Type
SELECT Allergy FROM Allergy_Type
SELECT distinct AllergyType FROM Allergy_Type
SELECT count ( * ) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy WHERE T2.allergytype = "food"
SELECT count ( * ) FROM Has_allergy AS T1 JOIN Allergy_type AS T2 ON T1.allergy = T2.allergy WHERE T2.allergytype = "food"
SELECT name FROM buildings ORDER BY Height DESC LIMIT 1
SELECT Stories FROM buildings where name = "Torre Reforma"
SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1
SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1
SELECT count ( * ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = Class_Senator_Vote WHERE T1.city_code = "NYC"
SELECT count ( * ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = Class_Senator_Vote WHERE T2.Election_Cycle = "Spring"
SELECT distinct T1.Fname, T1.Lname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = Class_Senator_Vote WHERE T2.Election_Cycle = "Spring"
SELECT count ( * ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = Class_Senator_Vote WHERE T1.city_code = "NYC" AND T2.Election_Cycle = "Spring"
select count ( stuid ) from student where major = 600
select stuid from student where major = 600
SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.major = "600" GROUP BY t1.clubname
SELECT t1.clubname,count ( * ) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.major = "600" GROUP BY t1.clubname ORDER BY count ( * ) 
SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.major = "600" GROUP BY t1.clubname ORDER BY count ( * ) DESC LIMIT 1
SELECT building_id FROM Apartments where apt_number = "Suite 645"
SELECT bathroom_count, bedroom_count FROM Apartments where apt_number = "Suite 645"
SELECT room_count FROM Apartments where building_id = 624
SELECT min ( bathroom_count ) , max ( bathroom_count ) , min ( bedroom_count ) , max ( bedroom_count ) FROM Apartments
SELECT building_id FROM Apartments where apt_number = "Apt. 908"
SELECT min ( bathroom_count ) , max ( bathroom_count ) FROM Apartments
SELECT DISTINCT T1.name , T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand = "X"
SELECT DISTINCT T2.date FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand = "X"
SELECT dose FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand = "X"
SELECT DISTINCT T1.name , T1.position FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician JOIN medication AS T3 ON T3.code = T2.medication WHERE T3.Brand = "X"
SELECT Name FROM technician
SELECT T3.Name , T2.Team FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID
SELECT T3.Name , T2.Machine_series FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID
select Vehicle_Flight_number from flight order by Velocity limit 1
select distinct Principal_activities from operate_company where name = 'Air Hong Kong'
SELECT DISTINCT T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id WHERE T2.velocity < 200
select type from operate_company where name = 'Air China'
SELECT DISTINCT T1.type FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id WHERE T2.velocity < 200
SELECT T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count ( * ) DESC LIMIT 3
SELECT T1.birth_city , T1.birth_state , T1.birth_country FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count ( * ) DESC LIMIT 3
SELECT T1.birth_year, T1.birth_month, T1.birth_day FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count ( * ) DESC LIMIT 3
SELECT T1.name_first , T1.name_last , T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count ( * ) DESC LIMIT 3;
select color_code from Ref_Colors where color_description = 'white'
select product_id,product_category_code from Products where color_code = '2'
select unit_of_measure from Ref_Product_Categories where product_category_code = 'Herbs' or product_category_code = 'Spices'
select product_name from Products where product_id = '2'
SELECT t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code JOIN ref_colors AS t3 ON t1.color_code = t3.color_code WHERE t3.color_description = "white" AND t2.unit_of_measure != "Handful"
SELECT count ( * ) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = "Confirmed"
SELECT t2.apt_type_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = "Confirmed"
SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = "Confirmed"
SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = "Confirmed"
SELECT count ( * ) , sex FROM Student GROUP BY sex
SELECT count ( * ) , sex FROM student WHERE age > ( SELECT avg ( age ) FROM student ) GROUP BY sex
SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id = t2.campus WHERE t1.campus = "San Francisco State University"
SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id = t2.campus WHERE t1.campus = "San Francisco State University" AND t2.year = 2001
SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id = t2.campus WHERE t1.campus = "San Francisco State University" AND t2.year = 2001
SELECT dept_code, dept_name FROM department
SELECT t2.crs_code FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE t1.dept_code = "CIS"
SELECT count ( * ) FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE t1.dept_code = "CIS"
SELECT count ( * ) FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE dept_name = "Computer Info. Systems"
SELECT stuid FROM Student WHERE Fname = "Linda" AND Lname = "Smith"
SELECT age FROM Student WHERE Fname = "Linda" AND Lname = "Smith"
SELECT city_code FROM Student WHERE Fname = "Linda" AND Lname = "Smith"
SELECT city_code FROM Student WHERE Fname = "Linda" AND Lname = "Smith";
SELECT name FROM airports WHERE city = "Goroka"
SELECT name FROM airports WHERE elevation = 5282
SELECT iata FROM airports WHERE name = "Madang Airport"
SELECT city , count ( * ) FROM airports GROUP BY city HAVING count ( * ) > 1
SELECT COUNT ( * ) FROM Employees
SELECT role_code FROM Employees GROUP BY role_code ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) from employees where role_code = "ED"
SELECT role_code FROM Employees GROUP BY role_code ORDER BY count ( * ) DESC LIMIT 1
SELECT Name , birth_date FROM people EXCEPT SELECT T1.Name , T1.birth_date FROM people AS T1 JOIN body_builder AS T2 ON T1.people_id = T2.people_id
SELECT Name , birth_place FROM people EXCEPT SELECT T1.Name , T1.birth_place FROM people AS T1 JOIN body_builder AS T2 ON T1.people_id = T2.people_id
SELECT Name , birth_place FROM people EXCEPT SELECT T1.Name , T1.birth_place FROM people AS T1 JOIN body_builder AS T2 ON T1.people_id = T2.people_id
SELECT Author FROM submission
SELECT author from submission where college = 'Florida' or college = 'Temple'
SELECT Author FROM submission WHERE College = "Florida" OR College = "Temple"
SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id where T1.state_province_county = "Georgia" GROUP BY T1.city ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.first_name, T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id where T1.city = "Port Melyssa"
SELECT T2.date_of_birth FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id where T1.city = "Port Melyssa"
SELECT T1.city , count ( * ) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.city ORDER BY count ( * ) DESC LIMIT 1;
SELECT count ( * ) FROM student
SELECT city_code, count ( * ) FROM student group by city_code
SELECT city_code, count ( * ) FROM student group by city_code having count ( * ) >1
SELECT count ( * ) , city_code FROM student GROUP BY city_code HAVING count ( * ) > 1
SELECT name, salary FROM instructor
SELECT name, salary FROM instructor WHERE dept_name = "Biology"
SELECT count ( * ) FROM instructor WHERE salary > ( SELECT salary FROM instructor WHERE name = "Valtchev" ) 
SELECT name FROM instructor WHERE salary > ( SELECT salary FROM instructor WHERE name = "Valtchev" ) 
SELECT name FROM instructor WHERE salary > ( SELECT max ( salary ) FROM instructor WHERE dept_name = 'Biology' ) 
SELECT distinct T1.city FROM city AS T1 JOIN hosting_city as T2 on T1.city_id = T2.host_city
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar < T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar < T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Zach' AND T2.year =  ( SELECT max ( YEAR ) FROM PersonFriend WHERE name = 'Zach' ) 
SELECT age FROM Person where name = "Dan"
SELECT city from Person where name = 'Zach'
SELECT age from Person where name = 'Zach'
SELECT job from Person where name = 'Zach'
SELECT T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Zach' AND T2.year = ( SELECT max ( YEAR ) FROM PersonFriend WHERE name = 'Zach' ) 
SELECT sum ( T1.lesson_time ) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = "Rylan" AND T2.last_name = "Goodwin"
SELECT T1.lesson_status_code FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = "Rylan" AND T2.last_name = "Goodwin"
SELECT customer_id FROM customers WHERE first_name = "Rylan" AND last_name = "Goodwin"
SELECT sum ( T1.lesson_time ) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = "Rylan" AND T2.last_name = "Goodwin";
SELECT count ( DISTINCT apt_type_code ) FROM Apartments
SELECT distinct apt_type_code FROM Apartments
SELECT count ( * ) , apt_type_code FROM Apartments GROUP BY apt_type_code
SELECT apt_type_code, count ( * ) FROM Apartments GROUP BY apt_type_code
SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count ( * ) DESC LIMIT 1
SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) from Services
SELECT service_id from Services where service_type_code = "Check"
SELECT count ( * ) from Organizations
SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id = T2.organization_id WHERE T2.organization_details = 'Denesik and Sons Party'
SELECT cName, enr FROM college
SELECT cname FROM college WHERE enr = ( SELECT max ( enr ) FROM college ) 
SELECT cname FROM college WHERE enr < ( SELECT max ( enr ) FROM college ) 
SELECT cname, state FROM college WHERE enr < ( SELECT max ( enr ) FROM college ) 
SELECT DISTINCT state FROM college WHERE enr < ( SELECT max ( enr ) FROM college ) 
SELECT T1.title,T1.id,count ( T1.id ) FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id
select title,artist_id from albums
SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count ( T1.id ) > 10
SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count ( T1.id ) > 10;
SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid WHERE T1.country = 'China' GROUP BY T1.name ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid WHERE T1.country = 'China' GROUP BY T1.name ORDER BY count ( * ) DESC LIMIT 1
select distinct airline from routes where src_apid = ( SELECT T1.apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid WHERE T1.country = 'China' GROUP BY T1.name ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid WHERE T1.country = 'China' GROUP BY T1.name ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM files
SELECT artist_name FROM files where duration = "5:23"
SELECT f_id FROM files where duration = "5:23"
SELECT f_id FROM files ORDER BY duration DESC LIMIT 1
SELECT document_code FROM documents WHERE document_type_code = 'Book'
SELECT document_name FROM documents ORDER BY access_count DESC LIMIT 1
SELECT document_name , access_count FROM documents ORDER BY access_count DESC LIMIT 1
SELECT document_name , access_count FROM documents ORDER BY access_count DESC LIMIT 1
SELECT T2.name , count ( * ) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id
SELECT T2.name , T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id
select count ( * ) from ( SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id ) 
SELECT T2.name , count ( * ) FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year > 2015 GROUP BY T2.branch_id
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie'
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie'
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'striker'
SELECT T1.cName FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'striker'
SELECT decision from Tryout WHERE pPos = 'striker'
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie'
SELECT avg ( balance ) FROM savings
SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T1.name IN ( SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T2.balance > ( SELECT avg ( balance ) FROM savings ) ) 
SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T1.name IN ( SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T2.balance > ( SELECT avg ( balance ) FROM savings ) ) 
SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T1.name IN ( SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T2.balance > ( SELECT avg ( balance ) FROM savings ) ) 
SELECT count ( distinct country ) FROM customers
select count ( * ) from customers where last_name = "Almeida"
SELECT country FROM customers WHERE first_name = "Roberto" AND last_name = "Almeida"
SELECT country FROM customers WHERE first_name = "Roberto" AND last_name = "Almeida";
SELECT count ( distinct StuID ) FROM Has_allergy
SELECT count ( distinct allergy ) FROM Has_allergy
SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count ( * ) > = 2
SELECT StuID FROM Has_allergy GROUP BY StuID HAVING count ( * ) >= 2
SELECT Membership_card FROM member where Name = 'Breton, Robert'
SELECT age FROM member where Name = 'Breton, Robert'
SELECT address FROM member WHERE age < 30 INTERSECT SELECT address FROM member WHERE age > 40
SELECT salary, name from employee
SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.name , T1.salary FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid GROUP BY T1.eid ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id = T2.id WHERE T2.course_id IN ( SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id = T4.course_id WHERE T3.title = 'International Finance' ) 
SELECT title from course where course_id = 787
SELECT dept_name from course where course_id = 787
SELECT T1.name FROM student AS T1 JOIN takes AS T2 ON T1.id = T2.id WHERE T2.course_id IN ( SELECT T4.prereq_id FROM course AS T3 JOIN prereq AS T4 ON T3.course_id = T4.course_id WHERE T3.title = 'International Finance' ) 
SELECT grade from enrolled_in where cid = "550.681"
SELECT hours from course where cname = "COMPUTER LITERACY"
SELECT days from course where cname = "INTRODUCTION TO COMPUTER SCIENCE"
SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID GROUP BY T2.CID HAVING COUNT ( * ) >= 5
SELECT count ( * ) FROM Player WHERE yCard = "yes"
SELECT avg ( HS ) FROM Player
SELECT pName FROM Player ORDER BY HS ASC LIMIT 1
SELECT pID FROM Player WHERE pName = "Andrew"
SELECT pID FROM Player WHERE pName = "Blake"
SELECT count ( * ) FROM Player
SELECT pName FROM Player
SELECT T1.cName FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID WHERE T2.pName LIKE 'D%'
SELECT room_number FROM classroom WHERE capacity > ( SELECT avg ( capacity ) FROM classroom ) 
SELECT max ( capacity ) , min ( capacity ) , building FROM classroom GROUP BY building
SELECT building FROM classroom order by capacity desc limit 1
SELECT building FROM classroom order by capacity limit 1
SELECT max ( capacity ) , avg ( capacity ) , building FROM classroom GROUP BY building
SELECT distinct city FROM branch
SELECT city , count ( * ) FROM branch GROUP BY city
SELECT count ( * ) FROM branch WHERE open_year < 2010
SELECT city , count ( * ) FROM branch WHERE open_year < 2010 GROUP BY city
SELECT city , count ( * ) FROM branch WHERE open_year < 2010 GROUP BY city
SELECT salary FROM employees WHERE employee_id = 163
SELECT first_name, last_name FROM employees WHERE employee_id = 163
SELECT first_name , last_name FROM employees WHERE salary > ( SELECT salary FROM employees WHERE employee_id = 163 ) 
SELECT department_id FROM employees WHERE employee_id = 163
SELECT count ( * ) from employees where department_id = ( select department_id from employees where employee_id = 163 ) 
SELECT distinct manager_id from employees where department_id = ( select department_id from employees where employee_id = 163 ) 
SELECT first_name , last_name FROM employees WHERE salary > ( SELECT salary FROM employees WHERE employee_id = 163 ) 
SELECT open_date FROM church where name = "Pure Church of Christ"
SELECT organized_by FROM church where name = "Pure Church of Christ"
SELECT church_id FROM church where name = "Pure Church of Christ"
SELECT name FROM church where organized_by = "Ezra Booth"
SELECT open_date FROM church GROUP BY open_date HAVING count ( * )  > = 2
SELECT open_date FROM church GROUP BY open_date HAVING count ( * ) >= 2
SELECT project_id FROM Documents GROUP BY project_id ORDER BY count ( * ) ASC LIMIT 1
SELECT project_id FROM Documents GROUP BY project_id ORDER BY count ( * ) DESC LIMIT 1
SELECT Document_Date FROM Documents where Document_ID = 105
SELECT project_id FROM Documents GROUP BY project_id ORDER BY count ( * ) ASC LIMIT 1
SELECT product_name,color_code,product_id from Products
SELECT t1.product_name , t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code
SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t1.product_name = "catnip"
SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t1.product_name = "catnip"
SELECT school FROM school WHERE school_id NOT IN ( SELECT school_id FROM school_bus ) 
SELECT TYPE FROM school WHERE school_id NOT IN ( SELECT school_id FROM school_bus ) 
SELECT school FROM school WHERE location like "%Hawaii%" and school_id IN ( SELECT school_id FROM school_bus ) 
SELECT school FROM school WHERE location like "%Indonesia" and school_id IN ( SELECT school_id FROM school_bus ) 
SELECT count ( * ) FROM school WHERE location like "%Hawaii" and type = "Private"
SELECT school , TYPE FROM school WHERE school_id NOT IN ( SELECT school_id FROM school_bus ) 
SELECT customer_id FROM Payments GROUP BY customer_id ORDER BY sum ( amount_paid ) DESC LIMIT 1
SELECT sum ( amount_paid ) FROM Payments WHERE customer_id = 12
SELECT payment_type_code FROM Payments WHERE customer_id = 12
SELECT customer_id , sum ( amount_paid ) FROM Payments GROUP BY customer_id ORDER BY sum ( amount_paid ) DESC LIMIT 1
SELECT count ( distinct thing_id ) from Timed_Status_of_Things WHERE Status_of_Thing_Code = "Close"
SELECT count ( distinct thing_id ) from Timed_Status_of_Things WHERE Status_of_Thing_Code = "Close" AND Date_and_Date < '2017-06-19 02:59:21'
SELECT DISTINCT T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' and T1.Date_and_Date < '2017-06-19 02:59:21'
SELECT DISTINCT thing_id from things WHERE Type_of_Thing_Code = "Electronics" or Type_of_Thing_Code = "Commen"
SELECT DISTINCT T2.thing_id , T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21'
SELECT COUNT ( * ) FROM university WHERE affiliation ! = 'Public'
SELECT school, enrollment FROM university WHERE affiliation ! = 'Public'
SELECT founded FROM university WHERE affiliation ! = 'Public'
SELECT founded FROM university WHERE affiliation != 'Public' ORDER BY founded DESC LIMIT 1
SELECT sent_date FROM documents WHERE document_id = 2
SELECT organisation_id FROM grants WHERE grant_id = 3
SELECT grant_end_date FROM grants WHERE grant_id = 3
SELECT T1.sent_date FROM documents AS T1 JOIN Grants AS T2 ON T1.grant_id = T2.grant_id JOIN Organisations AS T3 ON T2.organisation_id = T3.organisation_id JOIN organisation_Types AS T4 ON T3.organisation_type = T4.organisation_type WHERE T2.grant_amount > 5000 AND T4.organisation_type_description = 'Research'
SELECT Annual_entry_exit FROM station where station_id = "1"
SELECT Total_Passengers FROM station where station_id = "1" or station_id = "2"
SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id WHERE T3.Name = "Ananthapuri Express" INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id WHERE T3.Name = "Guruvayur Express"
SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id WHERE T3.Name = "Ananthapuri Express" INTERSECT SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id WHERE T3.Name = "Guruvayur Express"
SELECT College FROM match_season GROUP BY College HAVING count ( * )  = 2
SELECT Player FROM match_season where College = 'UCLA'
SELECT Player,Position FROM match_season where College = 'UCLA'
SELECT count ( * ) FROM match_season where College = 'UNLV'
SELECT season FROM match_season where College = 'UNLV'
SELECT College FROM match_season GROUP BY College HAVING count ( * ) >= 2
SELECT * FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Store_Name = "FJA Filming"
SELECT T1.State_County FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Store_Name = "FJA Filming"
SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Store_Name = "FJA Filming"
SELECT Store_Phone FROM Stores WHERE Store_Name = "FJA Filming"
SELECT T1.City_Town FROM Addresses AS T1 JOIN Stores AS T2 ON T1.Address_ID = T2.Address_ID WHERE T2.Store_Name = "FJA Filming"
SELECT T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2
SELECT T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE t2.apt_number = "Apt. 585"
SELECT T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE t2.building_id = "225"
SELECT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2
SELECT T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2
SELECT name from enzyme where location = "Cytosol"
SELECT T3.name FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id = T2.id JOIN enzyme AS T3 ON T1.enzyme_id = T3.id WHERE T2.name = 'Aripiprazole' and T3.location = "Cytosol"
SELECT T3.name FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id = T2.id JOIN enzyme AS T3 ON T1.enzyme_id = T3.id WHERE T2.name = 'Aripiprazole' and T3.location ! = "Cytosol"
SELECT distinct ( T1.interaction_type ) FROM medicine_enzyme_interaction AS T1 JOIN enzyme AS T2 ON T1.enzyme_id = T2.id WHERE T2.name = 'ALA synthase'
SELECT T1.interaction_type FROM medicine_enzyme_interaction AS T1 JOIN medicine AS T2 ON T1.medicine_id = T2.id JOIN enzyme AS T3 ON T1.enzyme_id = T3.id WHERE T3.name = 'ALA synthase' AND T2.name = 'Aripiprazole'
SELECT count ( * ) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance > 100
SELECT count ( * ) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T2.ticket_price < 10
SELECT T1.date FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance > 100
SELECT theme FROM exhibition order by Year desc limit 1
SELECT Ticket_Price FROM exhibition order by Year desc limit 1
SELECT count ( * ) FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance > 100 OR T2.ticket_price < 10
SELECT count ( * ) FROM SHOPS
SELECT Shop_Details FROM SHOPS
SELECT T1.Shop_ID FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = "bus"
SELECT T1.Shop_ID FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = "walk"
SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = "walk"
SELECT T1.Shop_Details FROM SHOPS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Shop_ID = T2.Tourist_Attraction_ID WHERE T2.How_to_Get_There = "walk"
SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid HAVING sum ( hours_played ) > = 1000
SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid HAVING sum ( hours_played ) < 1000
SELECT T2.GType, AVG ( T1.Hours_Played ) FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T2.GType
SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid HAVING sum ( hours_played ) >= 1000
SELECT Name FROM branch
SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id WHERE T3.Hometown = 'Louisville, Kentucky'
SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id WHERE T3.Hometown = 'Louisville , Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id WHERE T3.Hometown = 'Hiram , Georgia'
SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id WHERE T3.Hometown = 'Louisville , Kentucky' INTERSECT SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id JOIN member AS T3 ON T1.member_id = T3.member_id WHERE T3.Hometown = 'Hiram , Georgia'
SELECT basePrice FROM Rooms
SELECT basePrice FROM Rooms ORDER BY basePrice DESC LIMIT 3
SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3
SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;
SELECT Driver_ID, If_full_time FROM school_bus
SELECT Driver_ID, Years_Working, If_full_time FROM school_bus
SELECT t1.name FROM driver AS t1 JOIN school_bus AS t2 ON t1.driver_id = t2.driver_id ORDER BY years_working DESC LIMIT 1
SELECT t1.name FROM driver AS t1 JOIN school_bus AS t2 ON t1.driver_id = t2.driver_id ORDER BY years_working DESC LIMIT 1
SELECT Title FROM film WHERE Film_ID NOT IN ( SELECT Film_ID FROM film_market_estimation ) 
SELECT Title FROM film WHERE Film_ID NOT IN ( SELECT Film_ID FROM film_market_estimation ) 
SELECT Name FROM mountain
SELECT count ( Name ) FROM mountain WHERE Height > 5000
SELECT name FROM mountain WHERE Height > 5000
SELECT Name FROM mountain WHERE Height > 5000 and Prominence > 1000 order by height desc limit 1
SELECT Name FROM mountain WHERE Height > 5000 OR Prominence > 1000
SELECT Country FROM mountain WHERE Height < 5200
SELECT Country FROM mountain WHERE Height > 5600
SELECT Country FROM mountain WHERE Height > 5600 INTERSECT SELECT Country FROM mountain WHERE Height < 5200
SELECT Country FROM mountain WHERE Height > 5600 INTERSECT SELECT Country FROM mountain WHERE Height < 5200
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Alice'
SELECT job from person where name = "Zach"
SELECT age from person where name = "Zach"
SELECT year from personfriend where friend = "Alice" and name = "Zach"
SELECT T1.name , T1.age , T1.job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Alice' AND T2.year = ( SELECT max ( YEAR ) FROM PersonFriend WHERE friend = 'Alice' ) 
SELECT LastName,FirstName from list
SELECT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.lastname = "MOYER"
SELECT T1.firstname , T1.lastname,Grade FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.lastname = "MOYER"
SELECT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = "OTHA" AND T2.lastname = "MOYER"
SELECT count ( distinct account_id ) FROM Financial_transactions where transaction_amount > 600
SELECT account_id FROM Financial_transactions GROUP BY account_id ORDER BY count ( * ) DESC LIMIT 1
SELECT COUNT ( customer_id ) FROM Customers
SELECT phone_number FROM customers where first_name = "Clara"
SELECT T2.zip_postcode FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T1.first_name = "Carole" AND T1.last_name = "Bernhard"
SELECT count ( * ) FROM Companies WHERE Industry = "Banking"
SELECT count ( * ) FROM Companies WHERE Industry ! = "Banking"
SELECT sum ( sales_billion ) FROM Companies WHERE Industry ! = "Banking"
SELECT max ( sales_billion ) FROM Companies WHERE Industry ! = "Banking"
SELECT min ( sales_billion ) FROM Companies WHERE Industry ! = "Banking"
SELECT max ( Sales_billion ) , min ( Sales_billion ) FROM Companies WHERE Industry != "Banking"
SELECT city_code from Student where fname = "Smith"
SELECT age from Student where lname = "Kim"
SELECT stuid from Student where city_code = "WAS"
SELECT Major , count ( * ) FROM Student GROUP BY Major ORDER BY count ( Major ) ASC LIMIT 1
SELECT Major , count ( * ) FROM Student GROUP BY Major ORDER BY count ( Major ) ASC LIMIT 1;
SELECT DISTINCT ( T1.student_capacity ) FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = "Smith Hall"
SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid GROUP BY T2.dormid ORDER BY count ( * ) LIMIT 1
SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid GROUP BY T2.dormid ORDER BY count ( * ) DESC LIMIT 1
SELECT dorm_name FROM dorm WHERE student_capacity = 355
SELECT T1.dorm_name , T1.student_capacity FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid GROUP BY T2.dormid ORDER BY count ( * ) LIMIT 1
SELECT distinct product_name from Products
SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count ( * ) LIMIT 1
SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count ( * ) DESC LIMIT 1
SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id GROUP BY t3.characteristic_name ORDER BY count ( * ) DESC LIMIT 1
SELECT Country FROM member GROUP BY Country ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT name FROM member WHERE Country = "United States"
SELECT DISTINCT Country FROM member EXCEPT SELECT Country FROM member WHERE Country = "United States"
SELECT name FROM member WHERE Country = "Canada"
SELECT Country FROM member GROUP BY Country ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1
SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1
SELECT hire_date FROM employees WHERE department_id =  ( SELECT department_id FROM employees WHERE first_name = "Clara" ) 
SELECT avg ( SALARY ) FROM employees WHERE department_id =  ( SELECT department_id FROM employees WHERE first_name = "Clara" ) 
SELECT first_name , last_name , hire_date FROM employees WHERE department_id = ( SELECT department_id FROM employees WHERE first_name = "Clara" ) 
SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math' ORDER BY T3.tot_cred
select name from student where dept_name = 'Math'
select ID from instructor where dept_name = 'Marketing'
SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math' ORDER BY T3.tot_cred
SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY count ( * ) DESC LIMIT 3
SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = "bangla" GROUP BY T2.artist_name ORDER BY count ( * ) DESC LIMIT 3
SELECT T1.preferred_genre FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = "bangla" GROUP BY T2.artist_name ORDER BY count ( * ) DESC LIMIT 3
SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = "bangla" AND T1.preferred_genre = "folk"
SELECT artist_name FROM artist WHERE preferred_genre = "folk"
SELECT artist_name FROM artist WHERE preferred_genre = "tagore"
SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = "bangla" GROUP BY T2.artist_name ORDER BY count ( * ) DESC LIMIT 3
SELECT T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = "Sales Person"
SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = "Sales Person" EXCEPT SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = "Clerical Staff"
SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = "Sales Person"
SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = "Clerical Staff"
SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = "Sales Person" EXCEPT SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = "Clerical Staff"
SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = "Sales Person" EXCEPT SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = "Clerical Staff"
select customer_name,customer_address from Customers
SELECT T1.customer_name , T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = "New" INTERSECT SELECT T1.customer_name , T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = "Pending"
SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id = T3.id WHERE T3.name = 'Amisulpride'
SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id = T3.id WHERE T3.name = 'Amisulpride' AND T2.interaction_type = 'inhibitor'
SELECT distinct ( T1.name ) FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id = T3.id WHERE T2.interaction_type = 'inhibitor'
SELECT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id JOIN medicine AS T3 ON T2.medicine_id = T3.id WHERE T3.name = 'Amisulpride' AND T2.interaction_type = 'inhibitor'
SELECT organisation_id from grants where grant_amount = 4094.542
SELECT grant_start_date from grants where grant_amount = 4094.542
SELECT grant_end_date from grants where grant_amount = 4094.542
SELECT grant_amount from grants where organisation_id = 14
SELECT T2.organisation_id , T2.organisation_details FROM Grants AS T1 JOIN Organisations AS T2 ON T1.organisation_id = T2.organisation_id GROUP BY T2.organisation_id HAVING sum ( T1.grant_amount ) > 6000
SELECT uid, name FROM user_profiles
SELECT name, followers FROM user_profiles
SELECT max ( followers ) FROM user_profiles
SELECT sum ( followers ) FROM user_profiles
SELECT max ( followers ) , sum ( followers ) FROM user_profiles
SELECT COUNT ( * ) FROM Elimination
SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID ORDER BY T2.Days_held DESC LIMIT 1
SELECT T1.Time FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID ORDER BY T2.Days_held DESC LIMIT 1
SELECT course_id FROM courses WHERE course_name = "English"
SELECT count ( distinct student_id ) from student_course_attendance
SELECT count ( * ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.course_id = 302
SELECT count ( * ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "English"
SELECT DNO from Department where DNO not in ( select DNO from Minor_in ) 
SELECT DName from Department where DNO not in ( select DNO from Minor_in ) 
SELECT DName from Department where DNO not in ( select DNO from Minor_in ) order by DName
SELECT DName FROM DEPARTMENT EXCEPT SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MINOR_IN AS T2 ON T1.DNO = T2.DNO
SELECT title FROM Movie
SELECT title, year FROM Movie
SELECT title FROM Movie
SELECT title FROM Movie WHERE YEAR = ( SELECT max ( YEAR ) FROM Movie ) 
SELECT count ( document_name ) FROM documents
select count ( * ) from ( SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code JOIN document_sections_images AS t3 ON t2.section_id = t3.section_id ) 
SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code JOIN document_sections_images AS t3 ON t2.section_id = t3.section_id
SELECT document_name FROM documents EXCEPT SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code JOIN document_sections_images AS t3 ON t2.section_id = t3.section_id
SELECT Market_Rate FROM furniture WHERE name = "Chabudai"
SELECT T2.Price_in_Dollar FROM furniture as T1 JOIN furniture_manufacte as T2 ON T1.Furniture_ID = T2.Furniture_ID WHERE T1.name = "Chabudai"
SELECT T2.Manufacturer_ID FROM furniture as T1 JOIN furniture_manufacte as T2 ON T1.Furniture_ID = T2.Furniture_ID WHERE T1.name = "Chabudai"
SELECT Market_Rate , name FROM furniture WHERE Furniture_ID NOT IN ( SELECT Furniture_ID FROM furniture_manufacte ) 
select * from Participants_in_Events
SELECT count ( * ) FROM EVENTS WHERE event_id NOT IN ( SELECT event_id FROM Participants_in_Events ) 
SELECT count ( * ) FROM EVENTS WHERE event_id NOT IN ( SELECT event_id FROM Participants_in_Events ) 
SELECT * FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Regular'
SELECT * FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Regular' INTERSECT SELECT * FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Initial Application'
SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Initial Application'
SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Regular' INTERSECT SELECT T1.grant_start_date FROM Grants AS T1 JOIN Documents AS T2 ON T1.grant_id = T2.grant_id JOIN Document_Types AS T3 ON T2.document_type_code = T3.document_type_code WHERE T3.document_description = 'Initial Application'
SELECT department_id, name, creation FROM department
select Department_ID, Name, Creation from department where creation = ( SELECT creation FROM department GROUP BY creation ORDER BY count ( * ) DESC LIMIT 1 ) 
select sum ( Budget_in_Billions ) from department where creation = ( SELECT creation FROM department GROUP BY creation ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT creation FROM department GROUP BY creation ORDER BY count ( * ) DESC LIMIT 1
SELECT MAX ( Price ) FROM schedule
SELECT AVG ( Price ) FROM schedule
SELECT AVG ( Rank_in_series ) FROM film
SELECT T2.title , max ( T1.price ) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id
SELECT count ( * ) FROM Person
SELECT age FROM Person where name = 'Bob'
SELECT city FROM Person where name = 'Alice'
SELECT name FROM Person WHERE gender = 'male' ORDER BY age
SELECT Country FROM artist where Name = 'Vijay Singh'
SELECT name FROM artist ORDER BY year_join DESC LIMIT 1
SELECT Year_Join FROM artist where Name = 'Vijay Singh'
SELECT name FROM artist ORDER BY year_join DESC LIMIT 1
SELECT count ( course_id ) FROM Student_Course_Registrations WHERE student_id = 121
SELECT count ( * ) FROM Student_Course_Attendance WHERE student_id = 121
SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121
SELECT course_id FROM student_course_registrations WHERE student_id = 121 UNION SELECT course_id FROM student_course_attendance WHERE student_id = 121
SELECT DISTINCT Name FROM WINE WHERE Price > ( SELECT min ( Price ) FROM wine WHERE Winery = "John Anthony" ) 
SELECT Price FROM WINE WHERE Price > ( SELECT min ( Price ) FROM wine WHERE Winery = "John Anthony" ) 
SELECT Score FROM WINE WHERE Price > ( SELECT min ( Price ) FROM wine WHERE Winery = "John Anthony" ) 
SELECT DISTINCT Name FROM WINE WHERE Price > ( SELECT min ( Price ) FROM wine WHERE Winery = "John Anthony" ) 
select name from aircraft
SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T1.name = "John Williams"
SELECT t3.aid FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T1.name = "John Williams"
SELECT T3.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T1.name = "John Williams"
SELECT name , CLASS FROM ship WHERE ship_id NOT IN ( SELECT ship_id FROM captain ) 
select name from captain where class ! = 'NULL'
SELECT Ship_ID FROM ship WHERE name = "HMS Gorgon"
select count ( distinct Class ) from Ship
select T1.Rank from captain as T1 join Ship as T2 on T1.Ship_ID = T2.Ship_ID where T2.Name = "HMS Gorgon"
SELECT name , CLASS FROM ship WHERE ship_id NOT IN ( SELECT ship_id FROM captain ) 
SELECT Country FROM manager WHERE Age > 50 OR Age < 46
SELECT name FROM manager order by age limit 1
SELECT count ( * ) FROM manager where country = 'United States'
SELECT Country FROM manager WHERE Age > 50 OR Age < 46
SELECT T1.name , T2.institution FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id
SELECT Founded, Location FROM institution WHERE Institution = "Ave Maria University"
SELECT Enrollment FROM institution WHERE Institution = "Dakota State University"
SELECT T1.name , count ( * ) FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id GROUP BY T1.building_id
SELECT Shop_ID from shop order by Num_of_staff desc limit 1
SELECT t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id = t2.shop_id WHERE MONTH = 'May'
SELECT t1.address , t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id = t2.shop_id WHERE MONTH = 'May'
SELECT t1.address , t1.shop_id FROM shop AS t1 JOIN happy_hour AS t2 ON t1.shop_id = t2.shop_id WHERE MONTH = 'May'
SELECT document_description FROM Document_Types WHERE document_description LIKE 'Initial%'
SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'
SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'
SELECT document_type_code FROM Document_Types WHERE document_description LIKE 'Initial%'
SELECT DISTINCT T1.Leader_Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID
select college_id from college where college_location = 'Ottawa'
select T2.Name, T1.College_Location from college AS T1 JOIN member AS T2 ON T2.College_ID = T1.College_ID WHERE Member_ID = 1
SELECT DISTINCT T1.Leader_Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID WHERE T2.Country = "Canada"
SELECT Product_Type_Code FROM Products
SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT t1.name FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1
SELECT t1.Manufacturer_ID FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1
SELECT t1.manufacturer_id , t1.num_of_shops FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1
SELECT t1.manufacturer_id , t1.num_of_shops FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1
SELECT name FROM race
SELECT date FROM race where name = "Mexico City 250"
SELECT class FROM race
SELECT CLASS FROM race GROUP BY CLASS HAVING count ( * ) >= 2
SELECT count ( * ) FROM train WHERE name LIKE "%Express%"
SELECT destination FROM train WHERE name = 'Ananthapuri Express'
SELECT train_number FROM train WHERE name = 'Ananthapuri Express'
SELECT count ( * ) FROM train WHERE name LIKE "%Express%"
SELECT T2.Issue_Date FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume = T2.Volume_ID WHERE T1.Music_Festival = "34th England Academy Prize"
SELECT T1.Music_Festival FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume = T2.Volume_ID WHERE T2.Song = " Everybody Have Fun Tonight "
SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume = T2.Volume_ID WHERE T1.Result = "Nominated"
SELECT T2.Song FROM music_festival AS T1 JOIN volume AS T2 ON T1.Volume = T2.Volume_ID WHERE T1.Result = "Nominated"
SELECT DISTINCT interaction_type from medicine_enzyme_interaction
SELECT DISTINCT T1.name , T1.location , T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id = T1.id WHERE T2.interaction_type = 'inhibitor'
SELECT DISTINCT T1.name , T1.location , T1.product, T1.chromosome FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id = T1.id WHERE T2.interaction_type = 'inhibitor'
SELECT DISTINCT T1.name , T1.location , T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id = T1.id WHERE T2.interaction_type = 'inhibitor'
SELECT T1.product_name FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code = T2.color_code WHERE product_category_code = "Herbs"
SELECT T1.product_name , T2.color_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code = T2.color_code WHERE product_category_code = "Herbs"
SELECT product_id from products
SELECT T1.product_name , T2.color_description , T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code = T2.color_code WHERE product_category_code = "Herbs"
SELECT count ( * ) from claim_headers
SELECT max ( amount_claimed ) from claim_headers
SELECT min ( amount_piad ) from claim_headers
SELECT date_of_settlement from claim_headers where claim_type_code = "Overtime Meal Subsidy"
SELECT sum ( t1.amount_claimed ) FROM claim_headers AS t1 JOIN claims_documents AS t2 ON t1.claim_header_id = t2.claim_id WHERE t2.created_date = ( SELECT created_date FROM claims_documents ORDER BY created_date LIMIT 1 ) 
SELECT count ( * ) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Position = "Right Wing"
SELECT count ( * ) FROM player
SELECT * FROM player
SELECT count ( DISTINCT Position ) FROM player
SELECT T1.name FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.Position = "Right Wing"
SELECT publisher FROM book_club WHERE YEAR = 1989
SELECT publisher FROM book_club WHERE YEAR = 1990
SELECT publisher FROM book_club WHERE YEAR = 1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR = 1990
SELECT publisher FROM book_club WHERE YEAR = 1989 INTERSECT SELECT publisher FROM book_club WHERE YEAR = 1990
SELECT count ( * ) FROM Student
SELECT DISTINCT dormid FROM Has_amenity
SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid WHERE T4.amenity_name = 'TV Lounge'
SELECT count ( * ) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.dormid NOT IN ( SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid WHERE T4.amenity_name = 'TV Lounge' ) 
SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.dormid NOT IN ( SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid WHERE T4.amenity_name = 'TV Lounge' ) 
SELECT T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.dormid NOT IN ( SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid WHERE T4.amenity_name = 'TV Lounge' ) 
SELECT T1.fname , T1.age FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.dormid NOT IN ( SELECT T3.dormid FROM has_amenity AS T3 JOIN dorm_amenity AS T4 ON T3.amenid = T4.amenid WHERE T4.amenity_name = 'TV Lounge' ) 
SELECT Name FROM ship WHERE Ship_ID NOT IN ( SELECT Ship_ID FROM mission ) 
SELECT Ship_ID FROM mission WHERE Fate like '%Decommissioned%'
Select Name from ship where Ship_ID in ( SELECT Ship_ID FROM mission WHERE Fate like '%Decommissioned%' ) 
SELECT Name FROM ship WHERE Ship_ID NOT IN ( SELECT Ship_ID FROM mission ) 
SELECT rid FROM routes WHERE dst_apid IN ( SELECT apid FROM airports WHERE country = 'United States' ) AND src_apid IN ( SELECT apid FROM airports WHERE country = 'United States' ) 
SELECT rid FROM routes WHERE dst_apid IN ( SELECT apid FROM airports WHERE country = 'United States' ) AND src_apid IN ( SELECT apid FROM airports WHERE country = 'United States' ) 
SELECT count ( DISTINCT T2.Location_Code ) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.service_details = 'Unsatisfied'
SELECT count ( DISTINCT thing_id ) FROM Things where Type_of_Thing_Code = "Electronics"
select service_details from things where thing_id = 2
select service_type_code from things where thing_id = 2
select location_code, date_and_time from Timed_Locations_of_Things where thing_id = 10
SELECT count ( DISTINCT T2.Location_Code ) FROM Things AS T1 JOIN Timed_Locations_of_Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.service_details = 'Unsatisfied'
select avg ( Num_of_shaff_in_charge ) from happy_hour
select count ( distinct month ) from happy_hour
SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING count ( * ) > 2
SELECT MONTH FROM happy_hour GROUP BY MONTH HAVING count ( * ) > 2
SELECT count ( * ) FROM Visitors
SELECT count ( distinct Tourist_Attraction_ID ) FROM Visits
select count ( * ) from ( SELECT * FROM Visits as T1 join Visitors as T2 on T1.tourist_id = T2.tourist_id group by T1.tourist_id having count ( * ) >1 ) 
SELECT count ( * ) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits ) 
SELECT count ( * ) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits ) 
SELECT DISTINCT count ( * ) FROM station
SELECT DISTINCT name FROM station
select city from station where name = "San Jose Civic Center"
SELECT DISTINCT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available = 7
SELECT count ( * ) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN department AS T4 ON T3.dept_code = T4.dept_code WHERE T4.dept_name = 'Accounting'
SELECT school_code from department where dept_name = "Accounting"
SELECT EMP_num from department where dept_name = "Accounting"
SELECT count ( * ) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN department AS T4 ON T3.dept_code = T4.dept_code WHERE T4.dept_name = 'Accounting'
SELECT shipment_date FROM shipments
SELECT shipment_date FROM shipments order by shipment_date desc limit 1
SELECT shipment_id FROM shipments WHERE shipment_date = ( SELECT max ( shipment_date ) FROM shipments ) 
SELECT order_id FROM shipments WHERE shipment_date = ( SELECT max ( shipment_date ) FROM shipments ) 
SELECT Hometown FROM people
SELECT Hometown FROM people WHERE Age > 23 INTERSECT SELECT Hometown FROM people WHERE Age < 20
SELECT count ( * ) FROM people WHERE Hometown = "Santo Domingo"
SELECT Hometown FROM people WHERE Age > 23 INTERSECT SELECT Hometown FROM people WHERE Age < 20
SELECT Claim_ID FROM Claims
SELECT Amount_Claimed FROM Claims
SELECT T1.Claim_id , count ( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id
SELECT T1.event_details FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID = T2.Service_ID WHERE T2.Service_Type_Code = 'Marriage'
SELECT count ( * ) FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID = T2.Service_ID WHERE T2.Service_Type_Code = 'Marriage' and Event_Details = 'Success'
SELECT T1.event_details FROM EVENTS AS T1 JOIN Services AS T2 ON T1.Service_ID = T2.Service_ID WHERE T2.Service_Type_Code = 'Marriage'
SELECT first_name , last_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id WHERE T3.city = 'London'
SELECT first_name , last_name , salary FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id WHERE T3.city = 'London'
SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id WHERE T2.document_name = "King Book"
SELECT T2.Document_Date FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id WHERE T2.document_name = "King Book"
SELECT count ( T2.Document_Date ) FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id WHERE T2.Document_Type_Code = "CV"
SELECT count ( T2.Document_Date ) FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id WHERE T2.Document_Type_Code = "BK"
SELECT T2.Document_Date FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id WHERE T2.Document_Type_Code = "BK"
SELECT T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id WHERE T2.document_name = "King Book"
SELECT count ( * ) FROM trip
SELECT start_station_name FROM trip
SELECT start_date FROM trip where start_station_name = "Howard at 2nd"
SELECT start_station_name , end_station_name FROM trip ORDER BY id LIMIT 3
SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = "Balls to the Wall"
SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = "Fast As a Shark"
SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = "For Those About To Rock ( We Salute You ) "
SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T2.name = "Balls to the Wall";
SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = "8"
SELECT t2.attribute_id FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = "8"
SELECT t2.attribute_value FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = "8"
SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.catalog_level_number = "8"
SELECT DISTINCT customer_name, channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id
SELECT DISTINCT customer_name FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id where channel_code = "Email"
SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id where customer_name = "Tillman Ernser"
SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = "Tillman Ernser"
SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = "voluptatem" AND T1.date_problem_reported > "1995"
SELECT T1.problem_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = "voluptatem" AND T1.date_problem_reported > "1995"
SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id join district as t3 on t3.district_id = t2.district_id where t3.district_name = "Attock District"
SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id WHERE district_id = ( SELECT district_id FROM district ORDER BY city_population ASC LIMIT 1 ) 
SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id WHERE district_id = ( SELECT district_id FROM district ORDER BY city_population desC LIMIT 1 ) 
sELECT city_area FROM district ORDER BY city_population desC LIMIT 1
SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id WHERE district_id = ( SELECT district_id FROM district ORDER BY city_population DESC LIMIT 1 ) 
SELECT count ( * ) from department
SELECT T1.emp_fname from employee as T1 join professor as T2 on T1.emp_num = T2.emp_num where T2.dept_code = 'HIST'
SELECT T2.prof_office from employee as T1 join professor as T2 on T1.emp_num = T2.emp_num where T2.dept_code = 'HIST'
SELECT T1.emp_fname, T2.prof_office from employee as T1 join professor as T2 on T1.emp_num = T2.emp_num where T2.dept_code = 'HIST' and T2.PROF_HIGH_DEGREE = 'Ph.D.'
SELECT T1.emp_fname , T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T3.dept_code = T2.dept_code WHERE T3.dept_name = 'History' AND T2.prof_high_degree = 'Ph.D.'
SELECT name FROM artist WHERE artist_id NOT IN ( SELECT artist_id FROM exhibition ) 
SELECT country FROM artist WHERE artist_id NOT IN ( SELECT artist_id FROM exhibition ) 
SELECT age FROM artist WHERE artist_id NOT IN ( SELECT artist_id FROM exhibition ) 
SELECT name FROM artist ORDER BY AGE DESC LIMIT 1
SELECT name FROM artist WHERE artist_id IN ( SELECT artist_id FROM exhibition ) AND name = "Jeff Sluman"
SELECT name FROM artist WHERE artist_id NOT IN ( SELECT artist_id FROM exhibition ) 
SELECT T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000
select transaction_id from Transactions where transaction_type_code = 'SALE'
select transaction_id from Transactions where transaction_type_code = 'PUR'
SELECT T2.investor_id FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000
SELECT T1.sales_details , T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000
SELECT count ( * ) FROM FACULTY WHERE Building = "Barton"
SELECT * FROM FACULTY WHERE Building = "Barton"
SELECT lname FROM FACULTY WHERE Building = "Barton"
SELECT rank, count ( * ) FROM FACULTY WHERE Building = "Barton" group by rank
SELECT Lname FROM FACULTY WHERE Building = "Barton" ORDER BY Lname
SELECT Lname FROM FACULTY WHERE Building = "Barton" ORDER BY Lname
SELECT * FROM customers WHERE first_name = "Eduardo" AND last_name = "Martins"
SELECT company FROM customers WHERE first_name = "Eduardo" AND last_name = "Martins"
SELECT city FROM customers WHERE company = "Woodstock Discos"
SELECT phone FROM customers WHERE first_name = "Eduardo" AND last_name = "Martins"
SELECT company FROM customers WHERE first_name = "Eduardo" AND last_name = "Martins";
SELECT StuID, LName, Fname FROM Student
SELECT stuID ,sportname FROM SportsInfo
SELECT StuID,LName,Fname FROM Student where stuID not in ( SELECT StuID FROM Sportsinfo ) 
SELECT StuID FROM Student EXCEPT SELECT StuID FROM Sportsinfo
SELECT COUNT ( * ) FROM ( SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count ( * ) < = 2 ) 
SELECT COUNT ( * ) FROM Customers
SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count ( * ) < = 2
SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count ( * ) <= 2
SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN ( SELECT Railway_ID FROM train ) 
SELECT ObjectNumber FROM railway WHERE Railway_ID IN ( SELECT Railway_ID FROM train ) 
SELECT railway FROM railway WHERE Railway_ID IN ( SELECT Railway_ID FROM train ) 
SELECT railway FROM railway WHERE Railway_ID not IN ( SELECT Railway_ID FROM train ) 
SELECT built FROM railway WHERE Railway_ID not IN ( SELECT Railway_ID FROM train ) 
SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN ( SELECT Railway_ID FROM train ) 
SELECT headquarters FROM company WHERE main_industry = 'Banking'
SELECT headquarters FROM company WHERE main_industry = 'Oil and gas'
SELECT headquarters FROM company WHERE main_industry = 'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry = 'Oil and gas'
SELECT headquarters FROM company WHERE main_industry = 'Banking' INTERSECT SELECT headquarters FROM company WHERE main_industry = 'Oil and gas'
SELECT DEPARTMENT_ID FROM departments where department_name = 'Finance'
SELECT count ( * ) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'Finance'
SELECT T1.first_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'Finance'
SELECT T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'Finance'
SELECT T1.EMPLOYEE_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'Finance'
SELECT T1.first_name , T1.job_id FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id WHERE T2.department_name = 'Finance'
SELECT Date_Claim_Made FROM Claims
SELECT Date_Claim_Settled FROM Claims where Date_Claim_Made = '2018-06-14'
SELECT T1.claim_id , T1.date_claim_made , T1.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id GROUP BY T1.claim_id HAVING count ( * ) = 1
SELECT count ( * ) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication = T2.Code WHERE T2.name = 'Procrastin-X' ) 
SELECT name FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication = T2.Code WHERE T2.name = 'Procrastin-X' ) 
SELECT address FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication = T2.Code WHERE T2.name = 'Procrastin-X' ) 
SELECT count ( * ) FROM patient WHERE SSN NOT IN ( SELECT T1.patient FROM Prescribes AS T1 JOIN Medication AS T2 ON T1.Medication = T2.Code WHERE T2.name = 'Procrastin-X' ) 
SELECT sum ( hours_played ) FROM Plays_games AS T1 JOIN Video_games where GType = "Role-playing game"
SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid ORDER BY sum ( hours_played ) DESC LIMIT 1
SELECT stuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid where t2.GName = "Works of Widenius" order by hours_played desc limit 1
SELECT count ( distinct t1.StuID ) FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid where t2.GName = "Works of Widenius"
SELECT GType FROM Video_games where GName = "Works of Widenius"
SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid ORDER BY sum ( hours_played ) DESC LIMIT 1
select * from customer where credit_score < 100
select t2.loan_type from customer as t1 join loan as t2 on t1.cust_id = t2.cust_id where t1.cust_name = "Mary" intersect select t4.loan_type from customer as t3 join loan as t4 on t3.cust_id = t4.cust_id where t3.cust_name = "Jack"
SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id = T2.branch_id JOIN customer AS T3 ON T1.cust_id = T3.cust_id WHERE T3.credit_score < 100 GROUP BY T2.bname ORDER BY sum ( T1.amount ) DESC LIMIT 1
SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id = T2.branch_id JOIN customer AS T3 ON T1.cust_id = T3.cust_id WHERE T3.credit_score < 100 GROUP BY T2.bname ORDER BY sum ( T1.amount ) DESC LIMIT 1
SELECT customer_name FROM Customers WHERE customer_id = 9
SELECT payment_method FROM Customers WHERE customer_name = "Tillman Ernser"
SELECT contact_number FROM Customer_Contact_Channels WHERE customer_id = 3
SELECT max ( t2.active_to_date ) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = "Tillman Ernser"
SELECT max ( t2.active_to_date ) FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = "Tillman Ernser"
SELECT count ( * ) FROM tweets
SELECT email FROM user_profiles WHERE name = "Mary"
SELECT followers FROM user_profiles WHERE name = "Iron Man"
SELECT avg ( followers ) FROM user_profiles WHERE UID IN ( SELECT UID FROM tweets ) 
SELECT enr FROM college ORDER BY enr DESC LIMIT 3
SELECT state FROM college ORDER BY enr DESC LIMIT 3
SELECT cName FROM college ORDER BY enr DESC LIMIT 3
SELECT cName FROM college ORDER BY enr DESC LIMIT 3
Select count ( distinct course_id ) from student_course_registrations
SELECT T2.student_details FROM student_course_registrations AS T1 JOIN students AS T2 ON T1.student_id = T2.student_id ORDER BY T1.registration_date DESC LIMIT 1
SELECT t1.name FROM train AS t1 JOIN route AS t2 ON t1.id = t2.train_id GROUP BY t2.train_id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM train AS t1 JOIN route AS t2 ON t1.id = t2.train_id GROUP BY t2.train_id ORDER BY count ( * ) DESC LIMIT 1
SELECT t2.station_id FROM train AS t1 JOIN route AS t2 ON t1.id = t2.train_id GROUP BY t2.train_id ORDER BY count ( * ) DESC LIMIT 3
SELECT t1.name FROM train AS t1 JOIN route AS t2 ON t1.id = t2.train_id GROUP BY t2.train_id ORDER BY count ( * ) DESC LIMIT 1
SELECT TIME FROM train WHERE destination = 'Chennai'
SELECT count ( * ) FROM train WHERE destination = 'Chennai'
SELECT train_number FROM train WHERE destination = 'Chennai'
SELECT TIME , train_number FROM train WHERE destination = 'Chennai' ORDER BY TIME
SELECT count ( * ) from railway
SELECT Train_Num from train where Name = "Sewagram Exp"
SELECT location from railway where Railway = "MR"
SELECT T2.Railway_ID , T1.Location FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID GROUP BY T2.Railway_ID HAVING COUNT ( * ) > 1
SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY t2.swimmer_id HAVING count ( * ) > 1
SELECT t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY t2.swimmer_id HAVING count ( * ) > 1
SELECT t1.name, t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' except SELECT t1.name, t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY t2.swimmer_id HAVING count ( * ) > 1
SELECT t1.name , t1.nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' GROUP BY t2.swimmer_id HAVING count ( * ) > 1
SELECT fname FROM student WHERE age BETWEEN 20 AND 25
SELECT fname FROM student WHERE city_code = 'PHL' AND age BETWEEN 20 AND 25
SELECT fname FROM student WHERE city_code = 'PHL' AND age BETWEEN 20 AND 25
SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT ( * )  > = 2
SELECT name FROM company where Headquarters = "China"
SELECT industry FROM company where name = "PetroChina"
SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT ( * ) >= 2
SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_number = "Suite 634"
SELECT T2.bathroom_count FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_number = "Suite 634"
SELECT T2.apt_type_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_number = "Suite 634"
SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_number = "Suite 634"
SELECT count ( Poll_Source ) from candidate
SELECT count ( people_id ) from people
SELECT count ( * ) from people where sex = 'F'
SELECT t2.Unsure_rate FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id where t1.sex = 'F'
SELECT t2.Unsure_rate FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id where t1.sex = 'M'
SELECT t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id GROUP BY t1.sex ORDER BY avg ( t2.unsure_rate ) DESC LIMIT 1
SELECT EMP_NUM FROM EMPLOYEE WHERE EMP_FNAME = "James"
SELECT EMP_DOB FROM EMPLOYEE WHERE EMP_FNAME = "James"
SELECT EMP_HIREDATE FROM EMPLOYEE WHERE EMP_FNAME = "James"
SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num WHERE crs_code = 'CIS-220' INTERSECT SELECT T1.emp_fname FROM employee AS T1 JOIN CLASS AS T2 ON T1.emp_num = T2.prof_num WHERE crs_code = 'QM-261'
SELECT avg ( height ) , avg ( weight ) FROM people WHERE sex = 'M'
SELECT count ( * ) FROM people where sex = 'M'
SELECT * FROM people order by height desc limit 1
SELECT count ( * ) FROM people WHERE sex = 'F'
SELECT avg ( height ) , avg ( weight ) FROM people WHERE sex = 'M'
SELECT Room FROM Faculty where Rank = "Instructor"
SELECT T2.Fname FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count ( * ) LIMIT 1
SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count ( * ) DESC LIMIT 1
select order_id from Order_items order by order_quantity limit 1
select T1.payment_method from customers as T1 join customer_orders as T2 on T1.customer_id = T2.customer_id where T2.order_id = 11
SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity ) LIMIT 1
SELECT count ( * ) FROM products
SELECT count ( DISTINCT order_id ) FROM order_items
SELECT count ( * ) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items ) 
SELECT count ( * ) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items ) 
SELECT customer_status_code FROM Customers WHERE first_name = "Marina" OR last_name = "Kohler"
SELECT phone_number FROM Customers WHERE first_name = "Marina" OR last_name = "Kohler"
SELECT email_address FROM Customers WHERE first_name = "Marina" OR last_name = "Kohler"
SELECT customer_status_code , cell_mobile_phone_number , email_address FROM Customers WHERE first_name = "Marina" OR last_name = "Kohler"
select forename,surname from drivers
select count ( * ) from ( SELECT ( T1.driverid ) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count ( * ) > 5 ) 
SELECT T1.forename , T1.surname , T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count ( * ) > 8 UNION SELECT T1.forename , T1.surname , T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count ( * ) > 5
SELECT state FROM customers GROUP BY state ORDER BY count ( * ) LIMIT 1
SELECT count ( customer_id ) FROM customers where customer_type_code = "Good Credit Rating"
SELECT state FROM customers where customer_type_code = "Good Credit Rating"
SELECT customer_id FROM customers where customer_type_code = "Good Credit Rating"
SELECT state FROM customers GROUP BY state ORDER BY count ( * ) LIMIT 1
SELECT max ( floors ) FROM building
SELECT name FROM building where building_id = '1'
SELECT name FROM building where floors = 12
SELECT avg ( floors ) , min ( floors ) FROM building
SELECT avg ( floors ) , max ( floors ) , min ( floors ) FROM building
SELECT Birth_Place FROM people GROUP BY Birth_Place ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Birth_Place FROM people GROUP BY Birth_Place ORDER BY COUNT ( * ) LIMIT 1
SELECT Birth_Place FROM people GROUP BY Birth_Place ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Birth_Place FROM people where Name = 'Ty Conklin'
SELECT Birth_Date FROM people where Name = 'Ty Conklin'
SELECT Height FROM people where Name = 'Ty Conklin'
SELECT Weight FROM people where Name = 'Ty Conklin'
SELECT Name FROM people where Weight = 90.0 and Name! = 'Ty Conklin'
SELECT Birth_Place FROM people GROUP BY Birth_Place ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT TYPE FROM ship WHERE Tonnage > 6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage < 4000
SELECT distinct TYPE FROM ship WHERE Tonnage > 3000 and Tonnage<5000
SELECT Nationality FROM ship order by Tonnage desc limit 1
SELECT Nationality FROM ship order by Tonnage limit 1
SELECT max ( Tonnage ) ,min ( Tonnage ) FROM ship WHERE Type = 'Cargo ship'
SELECT max ( Tonnage ) ,min ( Tonnage ) FROM ship WHERE Type = 'Battle ship'
SELECT TYPE FROM ship WHERE Tonnage > 6000 INTERSECT SELECT TYPE FROM ship WHERE Tonnage < 4000
SELECT count ( * ) from country
SELECT languages from country where name = "Finland"
SELECT speed from roller_coaster where name = "Dauling Dragon"
SELECT T1.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name HAVING COUNT ( * ) > 1
SELECT T2.name FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year = 2016 GROUP BY T2.branch_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year = 2016 GROUP BY T2.branch_id ORDER BY count ( * ) DESC LIMIT 1
SELECT name, membership_amount FROM branch where membership_amount = ( select min ( membership_amount ) from branch where open_year like "%2017%" ) 
SELECT name, open_year FROM branch where open_year = ( select min ( open_year ) from branch ) 
SELECT T2.name , T2.open_year FROM membership_register_branch AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T1.register_year = 2016 GROUP BY T2.branch_id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( distinct title ) from film
SELECT title from film
SELECT T1.title, max ( price ) from film as T1 join schedule as T2 on T1.film_id = T2.film_id group by T1.film_id
SELECT T2.title , max ( T1.price ) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id
SELECT * FROM Rooms ORDER BY basePrice ASC LIMIT 1
SELECT * FROM Rooms ORDER BY basePrice desc LIMIT 1
SELECT avg ( basePrice ) FROM Rooms
SELECT roomName FROM Rooms order by maxOccupancy desc limit 1
SELECT roomName , basePrice FROM Rooms ORDER BY basePrice ASC LIMIT 1;
SELECT RESULT , COUNT ( * ) FROM music_festival GROUP BY RESULT ORDER BY COUNT ( * ) DESC
SELECT RESULT , COUNT ( * ) FROM music_festival GROUP BY RESULT ORDER BY COUNT ( * ) DESC
SELECT T1.u_id FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id WHERE T2.rating = 10
SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id where T2.rank = 1
SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id ORDER BY count ( * ) DESC LIMIT 1
SELECT birth_country FROM player
SELECT birth_state FROM player where player_id = "aardsda01"
SELECT birth_city FROM player where player_id = "aardsda01"
SELECT birth_city FROM player where player_id = "aaronto01"
SELECT count ( * ) FROM player WHERE birth_country = 'USA' AND bats = 'R'
SELECT count ( * ) FROM player WHERE birth_country = 'USA' AND bats = 'R' AND death_year < 2019 AND death_country = 'USA'
SELECT count ( * ) FROM player WHERE bats = 'R' AND death_year > 2000
SELECT count ( * ) FROM player WHERE bats = 'R' AND birth_year > 1980
SELECT count ( * ) FROM player WHERE birth_country = 'USA' AND bats = 'R';
SELECT stuid, allergy from has_allergy
SELECT count ( * ) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.allergy = "Milk" OR T1.allergy = "Eggs"
SELECT count ( * ) FROM has_allergy AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.sex = "F" AND T1.allergy = "Milk" OR T1.allergy = "Eggs"
select Member_in_charge_ID, count ( * ) from party_events group by Member_in_charge_ID order by count ( * ) desc limit 1
select Member_Name from member where Member_ID = 4
SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id GROUP BY T2.member_in_charge_id ORDER BY count ( * ) DESC LIMIT 1
SELECT Number_cities FROM market where country = "USA"
SELECT count ( country ) FROM market
SELECT market_id FROM market where country = "China"
SELECT max ( Number_cities ) , min ( Number_cities ) FROM market
SELECT max ( Number_cities ) , min ( Number_cities ) FROM market
SELECT T1.country , T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = "Janessa" AND T2.last_name = "Sawayn"
SELECT T1.country , T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = "Janessa" AND T2.last_name = "Sawayn";
SELECT lastname from list where classroom = 101
SELECT firstname from list where classroom = 102
SELECT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = "MARROTTE" AND T2.lastname = "KIRK"
select count ( * ) from Products
select product_name from Products where color_code = 2
select characteristic_data_type from Characteristics where characteristic_id = 1
SELECT count ( * ) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t3.characteristic_name = "hot"
SELECT count ( * ) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id where Customer_name = "America Jaskolski"
SELECT count ( * ) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id where Customer_name = "Mrs. Hanna Willms"
SELECT count ( Policy_ID ) FROM Customers_Policies
SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id GROUP BY t1.customer_name ORDER BY count ( * ) DESC LIMIT 1
SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id GROUP BY t1.customer_name ORDER BY count ( * ) DESC LIMIT 1
select count ( * ) from club
select clubName from club
select count ( * ) from member_of_club
SELECT count ( * ) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = "Pen and Paper Gaming"
SELECT count ( * ) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = "Pen and Paper Gaming"
SELECT avg ( lifespan ) FROM representative
SELECT Party FROM representative GROUP BY Party HAVING COUNT ( * )  > = 2
SELECT Party FROM representative GROUP BY Party HAVING COUNT ( * )  > = 3
SELECT Party FROM representative GROUP BY Party HAVING COUNT ( * ) >= 3
SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum ( total_amount_purchased ) > 80000
SELECT date_supplied_to FROM Product_Suppliers where supplier_id = 4 order by date_supplied_to desc limit 1
SELECT product_id FROM Order_Items GROUP BY product_id HAVING count ( * ) > 3 UNION SELECT product_id FROM Product_Suppliers GROUP BY product_id HAVING sum ( total_amount_purchased ) > 80000
SELECT distinct College FROM match_season
SELECT Player FROM match_season
SELECT Player FROM match_season WHERE Position = 'Midfielder'
SELECT College FROM match_season WHERE POSITION = "Midfielder" INTERSECT SELECT College FROM match_season WHERE POSITION = "Defender"
SELECT College FROM match_season WHERE POSITION = "Midfielder" INTERSECT SELECT College FROM match_season WHERE POSITION = "Defender"
SELECT last_name FROM customer WHERE customer_id = 1
SELECT inventory_id FROM rental WHERE rental_id = 3
SELECT T1.first_name , T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id = T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1
SELECT T1.first_name , T1.last_name FROM customer AS T1 JOIN rental AS T2 ON T1.customer_id = T2.customer_id ORDER BY T2.rental_date ASC LIMIT 1
SELECT TIME FROM train WHERE destination = 'Chennai'
SELECT name FROM train WHERE destination = 'Chennai'
SELECT origin FROM train WHERE name = "Ananthapuri Express"
SELECT TIME , train_number FROM train WHERE destination = 'Chennai' ORDER BY TIME
SELECT sum ( gamesplayed ) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.age < 20
SELECT sum ( hoursperweek ) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.age < 20
SELECT sportName,count ( * ) from sportsinfo where stuid in ( select stuid from student where age < 20 ) group by sportname order by count ( * ) desc limit 1
SELECT sum ( hoursperweek ) , sum ( gamesplayed ) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T2.age < 20
select actid from Faculty_Participates_in where FacID = 1082
select Rank from Faculty where Fname = "Mark"
SELECT DISTINCT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' OR T3.activity_name = 'Kayaking'
SELECT Appelation FROM WINE WHERE YEAR > 2008
SELECT Appelation FROM WINE WHERE YEAR > 2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area = "Central Coast"
select state from APPELLATIONS where appelation in ( SELECT Appelation FROM WINE WHERE YEAR > 2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area = "Central Coast" ) 
select avg ( price ) from wine
select * from wine where price > ( select avg ( price ) from wine ) 
SELECT Appelation FROM WINE WHERE YEAR > 2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area = "Central Coast"
SELECT * FROM department GROUP BY departmentID ORDER BY count ( * ) LIMIT 1
SELECT head FROM department GROUP BY departmentID ORDER BY count ( departmentID ) LIMIT 1
SELECT head FROM department GROUP BY departmentID ORDER BY count ( departmentID ) LIMIT 1;
SELECT max ( gradepoint ) FROM GRADECONVERSION
SELECT lettergrade, max ( gradepoint ) FROM GRADECONVERSION group by lettergrade
SELECT lettergrade, max ( gradepoint ) , min ( gradepoint ) FROM GRADECONVERSION group by lettergrade
SELECT max ( gradepoint ) , min ( gradepoint ) FROM GRADECONVERSION
SELECT Lifespan FROM representative
SELECT Lifespan FROM representative WHERE State = "New York"
SELECT Lifespan FROM representative WHERE State = "Indiana"
SELECT Lifespan FROM representative WHERE State = "New York" OR State = "Indiana"
SELECT COUNT ( DISTINCT Title ) FROM film
SELECT count ( Title ) FROM film WHERE Film_ID NOT IN ( SELECT Film_ID FROM film_market_estimation ) 
SELECT film_ID FROM film WHERE Film_ID NOT IN ( SELECT Film_ID FROM film_market_estimation ) 
SELECT Title from film WHERE film_ID IN ( SELECT film_ID FROM film WHERE Film_ID NOT IN ( SELECT Film_ID FROM film_market_estimation ) ) 
SELECT Title FROM film WHERE Film_ID NOT IN ( SELECT Film_ID FROM film_market_estimation ) 
SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1
SELECT apt_number FROM Apartments ORDER BY bedroom_count LIMIT 1
SELECT apt_type_code FROM Apartments ORDER BY bathroom_count desc LIMIT 1
SELECT room_count, apt_number FROM Apartments ORDER BY bathroom_count desc LIMIT 1
SELECT apt_number FROM Apartments ORDER BY bedroom_count DESC LIMIT 1
SELECT First_name, last_name FROM employees
SELECT count ( * ) FROM employees WHERE employee_id NOT IN ( SELECT employee_id FROM job_history ) 
SELECT count ( * ) FROM employees WHERE employee_id IN ( SELECT employee_id FROM job_history ) 
SELECT * FROM employees WHERE employee_id NOT IN ( SELECT employee_id FROM job_history ) 
SELECT count ( distinct Scientist ) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300
SELECT count ( distinct Scientist ) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours < 300
SELECT name FROM projects WHERE hours > 300
SELECT t2.Scientist FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.name = 'Aerodynamics and Bridge Design'
SELECT count ( * ) , T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project WHERE T1.hours > 300 GROUP BY T1.name
SELECT count ( Name ) FROM branch
SELECT sum ( membership_amount ) FROM branch
SELECT membership_amount FROM branch order by membership_amount desc limit 1
SELECT min ( membership_amount ) FROM branch
SELECT city FROM branch WHERE open_year = 2001 AND membership_amount > 100
SELECT color_code from products where product_name = 'basil'
SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code GROUP BY t2.color_description ORDER BY count ( * ) ASC LIMIT 1
SELECT product_name FROM products where color_code = 4
SELECT typical_selling_price FROM products where product_name = 'peper'
SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code GROUP BY t2.color_description ORDER BY count ( * ) DESC LIMIT 1
select player_id from salary order by salary desc limit 1
select count ( player_id ) from player where birth_country = 'USA'
select team_id from team order by rank limit 1
SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'
SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'
SELECT name FROM Person WHERE gender = 'male'
SELECT age FROM Person WHERE name = 'Bob'
SELECT name FROM Person WHERE job = 'doctor'
SELECT name FROM Person WHERE gender = 'male' ORDER BY age
SELECT count ( DISTINCT building_id ) FROM apartment_buildings
SELECT count ( * ) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_manager = "Kyle"
SELECT count ( DISTINCT apt_type_code ) FROM Apartments
SELECT T2.apt_type_code FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_manager = "Kyle"
SELECT T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_manager = "Kyle"
SELECT T2.apt_type_code , T2.apt_number FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_manager = "Kyle"
SELECT DISTINCT T1.Fname , T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.VICE_President_VOTE WHERE T1.age = 18
SELECT DISTINCT T1.Fname , T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.President_Vote
SELECT DISTINCT count ( * ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.President_VOTE WHERE T1.sex = "M"
SELECT DISTINCT T1.Fname , T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.VICE_President_VOTE WHERE T1.age = 18
SELECT avg ( product_price ) FROM products
SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg ( product_price ) > ( SELECT avg ( product_price ) FROM products ) 
SELECT avg ( product_price ) FROM products WHERE product_type_code = "Hardware"
SELECT avg ( product_price ) FROM products WHERE product_type_code = "Clothes"
SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg ( product_price ) > ( SELECT avg ( product_price ) FROM products ) 
SELECT T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count ( * ) DESC LIMIT 1
SELECT * FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count ( * ) LIMIT 1
SELECT T2.name , T2.country FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id GROUP BY T1.artist_id ORDER BY count ( * ) DESC LIMIT 1
SELECT player_api_id, player_name FROM Player
SELECT T1.player_api_id, T1.player_name, T1.height, T2.overall_rating FROM Player as T1 JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id
SELECT T1.player_api_id, T1.player_name, T1.height, T2.overall_rating FROM Player as T1 JOIN Player_Attributes AS T2 ON T1.player_fifa_api_id = T2.player_fifa_api_id WHERE T2.overall_rating > 85
SELECT player_api_id FROM Player WHERE height > 180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating > 85
SELECT player_api_id FROM Player WHERE height >= 180 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE overall_rating > 85
SELECT max ( used_kb ) FROM screen_mode
SELECT min ( used_kb ) FROM screen_mode
SELECT avg ( used_kb ) FROM screen_mode
SELECT max ( used_kb ) , min ( used_kb ) , avg ( used_kb ) FROM screen_mode;
SELECT product_category_code FROM products WHERE product_name = "laurel"
SELECT count ( * ) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = "laurel"
SELECT typical_selling_price FROM products where product_name = "laurel"
SELECT count ( * ) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = "laurel"
select email from customer where customerid = '1'
select count ( * ) from employee where city = 'Calgary'
SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT ( * ) > = 10
select title from employee where employeeid = 2
SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT ( * ) >= 10
SELECT investor_id , avg ( share_count ) FROM TRANSACTIONS GROUP BY investor_id
SELECT investor_id , avg ( share_count ) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg ( share_count ) 
Select date_of_transaction from transactions
Select date_of_transaction from transactions where transaction_type_code = "SALE"
Select date_of_transaction from transactions where transaction_type_code = "PUR"
SELECT investor_id , avg ( share_count ) FROM TRANSACTIONS GROUP BY investor_id ORDER BY avg ( share_count ) 
SELECT employee_name FROM Employees where Role_code = "HR"
SELECT role_code FROM Employees order by employee_id desc limit 1
SELECT role_code FROM Employees GROUP BY role_code ORDER BY count ( * ) ASC LIMIT 1
SELECT role_code FROM Employees GROUP BY role_code ORDER BY count ( * ) ASC LIMIT 1
SELECT song_name FROM song ORDER BY releasedate DESC LIMIT 1
SELECT song_name FROM song ORDER BY releasedate LIMIT 1
SELECT artist_name FROM song ORDER BY releasedate LIMIT 1
SELECT song_name , releasedate FROM song ORDER BY releasedate DESC LIMIT 1
SELECT first_name , last_name , department_id FROM employees WHERE salary IN ( SELECT MIN ( salary ) FROM employees GROUP BY department_id ) 
SELECT first_name , last_name , department_id FROM employees WHERE salary IN ( SELECT MAX ( salary ) FROM employees GROUP BY department_id ) 
select FIRST_NAME,LAST_NAME from employees order by salary desc limit 1
select first_name,last_name,salary,manager_id from employees order by salary desc limit 1
SELECT first_name , last_name , department_id FROM employees WHERE salary IN ( SELECT MIN ( salary ) FROM employees GROUP BY department_id ) 
SELECT T3.EMP_FNAME , T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM = T3.EMP_NUM WHERE DEPT_NAME = "Biology"
SELECT count ( * ) from employee
SELECT max ( prof_extension ) from professor
SELECT min ( emp_num ) from Employee
SELECT T3.EMP_FNAME , T3.EMP_LNAME FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code JOIN employee AS T3 ON T1.EMP_NUM = T3.EMP_NUM WHERE DEPT_NAME = "Biology"
SELECT t1.customer_name FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email'
SELECT t1.customer_name, t1.date_became_customer FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email'
SELECT t1.customer_name , t2.active_to_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email'
SELECT DISTINCT t1.payment_method FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = "Devin Mills"
SELECT DISTINCT t1.customer_id FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = "Devin Mills"
SELECT DISTINCT t1.customer_name FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t1.payment_method = ( SELECT DISTINCT t1.payment_method FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = "Devin Mills" ) 
SELECT t1.customer_name , t2.active_from_date FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t2.channel_code = 'Email'
SELECT count ( * ) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T1.year = 2000 AND T2.city = 'Atlanta'
SELECT count ( * ) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T1.year = 2000 AND T2.city = 'Atlanta';
SELECT country from Addresses where zip_postcode = 416
SELECT city from Addresses where state_province_county = "SouthCarolina"
SELECT address_content from Addresses where state_province_county = "Colorado"
SELECT city from Addresses where state_province_county = "NewJersey"
SELECT city from Addresses where country = "USA"
SELECT address_content FROM addresses WHERE city = "East Julianaside" AND state_province_county = "Texas" UNION SELECT address_content FROM addresses WHERE city = "Gleasonmouth" AND state_province_county = "Arizona"
SELECT title , phone , hire_date FROM employees WHERE first_name = "Nancy" AND last_name = "Edwards"
SELECT count ( * ) FROM employees
SELECT first_name FROM employees WHERE title = "General Manager"
SELECT title , phone , hire_date FROM employees WHERE first_name = "Nancy" AND last_name = "Edwards";
SELECT TYPE FROM operate_company GROUP BY TYPE ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( DISTINCT name ) FROM operate_company WHERE Type = 'Subsidiary'
SELECT TYPE FROM operate_company GROUP BY TYPE ORDER BY count ( * ) ASC LIMIT 1
SELECT TYPE , count ( * ) FROM operate_company GROUP BY TYPE ORDER BY count ( * ) DESC LIMIT 1
SELECT * FROM rooms WHERE roomid IN ( SELECT DISTINCT room FROM reservations ) 
SELECT * FROM rooms WHERE roomid NOT IN ( SELECT DISTINCT room FROM reservations ) 
SELECT count ( * ) FROM rooms WHERE roomid NOT IN ( SELECT DISTINCT room FROM reservations ) 
SELECT LOCATION , count ( * ) FROM gas_station GROUP BY LOCATION ORDER BY count ( * ) 
SELECT LOCATION FROM gas_station GROUP BY LOCATION having count ( * ) > 1
SELECT open_year FROM gas_station GROUP BY open_year having count ( * ) > 1
SELECT LOCATION , count ( * ) FROM gas_station GROUP BY LOCATION ORDER BY count ( * ) 
SELECT country FROM stadium group by country having count ( * ) > = 2
SELECT distinct country FROM stadium WHERE capacity > 60000
SELECT country FROM stadium WHERE capacity > 60000 INTERSECT SELECT country FROM stadium WHERE capacity < 50000
SELECT count ( * ) FROM driver WHERE home_city = 'Hartford'
SELECT name FROM driver WHERE home_city = 'Hartford'
SELECT name FROM driver WHERE age < 40
SELECT count ( * ) FROM driver WHERE home_city = 'Hartford' OR age < 40
SELECT count ( * ) FROM driver WHERE home_city = 'Hartford' OR age < 40
SELECT min ( membership_amount ) FROM branch WHERE open_year = 2011 OR city = 'London'
SELECT max ( membership_amount ) FROM branch WHERE open_year = 2011 OR city = 'London'
SELECT min ( membership_amount ) , max ( membership_amount ) FROM branch WHERE open_year = 2011 OR city = 'London'
SELECT email FROM employees WHERE commission_pct = "null" AND salary BETWEEN 7000 AND 12000 AND department_id = 50
SELECT email FROM employees WHERE commission_pct = "null"
SELECT email FROM employees WHERE commission_pct > 0
SELECT count ( * ) FROM employees WHERE salary >12000
SELECT FIRST_NAME,LAST_NAME FROM employees WHERE salary >12000
SELECT email FROM employees WHERE commission_pct = "null" AND salary BETWEEN 7000 AND 12000 AND department_id = 50
SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id = T2.people_id WHERE T1.year = 2016 AND T2.is_male = 'F'
SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id = T2.people_id WHERE T1.year = 2016 AND T2.is_male = 'F' AND T2.country = 'Canada'
SELECT name FROM people WHERE country = "Canada" AND is_male = "F"
SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id = T2.people_id OR T1.male_id = t2.people_id WHERE T1.year = 2016
SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id = T2.people_id OR T1.male_id = t2.people_id WHERE T1.year = 2016 AND t2.country = "Canada"
SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.female_id = T2.people_id WHERE T1.year = 2016 AND T2.is_male = 'F' AND T2.country = 'Canada'
SELECT name FROM storm WHERE storm_id NOT IN ( SELECT storm_id FROM affected_region ) 
SELECT Number_city_affected from affected_region where storm_id = ( select storm_id from storm where Name = 'Two' ) 
SELECT Storm_id from storm where name = 'Two'
SELECT name FROM storm WHERE storm_id NOT IN ( SELECT storm_id FROM affected_region ) 
SELECT count ( * ) FROM Person
SELECT name FROM Person order by age limit 1
SELECT count ( * ) FROM Person WHERE age > 30 AND job = 'engineer'
SELECT count ( * ) FROM Person WHERE gender = 'female'
SELECT count ( * ) FROM Person WHERE age > 30 AND job = 'engineer'
SELECT population FROM city WHERE City_ID = 2
SELECT census_ranking FROM city WHERE official_name = "Perth-Andover"
SELECT hosts FROM farm_competition WHERE Theme like "%Carnival M is back%"
SELECT Official_Name FROM city WHERE City_ID NOT IN ( SELECT Host_city_ID FROM farm_competition ) 
SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id JOIN available_policies AS t3 ON t2.policy_id = t3.policy_id WHERE t1.customer_name =  ( SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id GROUP BY t1.customer_name ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id GROUP BY t1.customer_name ORDER BY count ( * ) DESC LIMIT 1
SELECT customer_phone FROM available_policies WHERE policy_type_code = "Life Insurance"
SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id JOIN available_policies AS t3 ON t2.policy_id = t3.policy_id WHERE t1.customer_name = ( SELECT t1.customer_name FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id GROUP BY t1.customer_name ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT gender FROM staff GROUP BY gender ORDER BY count ( * ) DESC LIMIT 1
select count ( * ) from staff where gender = 1
select count ( * ) from staff where gender ! = 1
SELECT gender FROM staff GROUP BY gender ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%'
SELECT name from scientists WHERE name LIKE '%Smith%'
SELECT T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T3.name LIKE '%Smith%'
SELECT count ( document_structure_code ) , document_type_code FROM documents GROUP BY document_type_code
SELECT count ( document_structure_code ) , document_type_code FROM documents GROUP BY document_type_code HAVING count ( * ) > 4
SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count ( * ) > 4
SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count ( * ) DESC LIMIT 1
select Member_ID from member where level in ( SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count ( * ) DESC LIMIT 1 ) 
select Name from member where level in ( SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count ( * ) ASC LIMIT 1
select member_id from member where level in ( SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count ( * ) ASC LIMIT 1 ) 
select name from member where level in ( SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count ( * ) ASC LIMIT 1 ) 
SELECT LEVEL FROM member GROUP BY LEVEL ORDER BY count ( * ) DESC LIMIT 1
SELECT project_id FROM Documents GROUP BY project_id HAVING count ( * )  > = 2
SELECT project_id FROM Documents GROUP BY project_id HAVING count ( * )  > = 3
SELECT project_id,Document_Date FROM Documents GROUP BY project_id HAVING count ( * )  > = 3
select document_date from documents where project_id in ( SELECT project_id FROM Documents GROUP BY project_id HAVING count ( * )  > = 3 ) 
SELECT project_id FROM Documents GROUP BY project_id HAVING count ( * )  > = 3
SELECT project_id FROM Documents GROUP BY project_id HAVING count ( * ) >= 2
select date_assigned_to from Staff_Department_Assignments where job_title_code = 'Department Manager'
SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id HAVING COUNT ( * ) > 1
select date_assigned_from from Staff_Department_Assignments where job_title_code = 'Sales Person'
SELECT T1.staff_name FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id GROUP BY T2.staff_id HAVING COUNT ( * ) > 1
SELECT invoice_number FROM invoices WHERE invoice_date < "1989-09-03"
SELECT invoice_number FROM invoices WHERE invoice_date > "2007-12-25"
SELECT invoice_number FROM invoices WHERE invoice_date < "1989-09-03" OR invoice_date > "2007-12-25"
SELECT invoice_number FROM invoices WHERE invoice_date < "1989-09-03" OR invoice_date > "2007-12-25"
SELECT name FROM Employee WHERE salary > ( SELECT avg ( salary ) FROM Employee ) 
SELECT avg ( salary ) FROM Employee
SELECT name FROM Employee WHERE salary < ( SELECT avg ( salary ) FROM Employee ) 
SELECT count ( * ) FROM Employee WHERE salary > ( SELECT avg ( salary ) FROM Employee ) 
SELECT count ( * ) FROM Employee WHERE salary < ( SELECT avg ( salary ) FROM Employee ) 
SELECT name FROM Employee WHERE salary > ( SELECT avg ( salary ) FROM Employee ) 
SELECT T3.Name , T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID ORDER BY T2.Ranking
SELECT T3.carrier FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID where T2.District = "Alberta"
SELECT T2.district FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID where T3.carrier = "TMobile" and T2.district ! = "Alberta"
SELECT name FROM phone where carrier = "TMobile"
SELECT T3.Name , T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID ORDER BY T2.Ranking
SELECT count ( * ) FROM university WHERE affiliation = 'Public'
SELECT count ( * ) FROM university WHERE affiliation = 'Public' and enrollment > 20000
SELECT count ( * ) , affiliation FROM university WHERE enrollment > 20000 GROUP BY affiliation
SELECT distinct T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID
SELECT T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID WHERE T2.Type = "Program Talent Show"
SELECT Location from festival_detail where Festival_Name = 'LA Awards'
SELECT T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID WHERE T2.Type = "Program Talent Show"
SELECT count ( * ) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project where T1.Code = "AeH1"
SELECT count ( * ) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project where T1.Code = "Ast3"
SELECT count ( * ) FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project where T1.Code = "AeH3"
SELECT count ( * ) , T1.name FROM projects AS T1 JOIN assignedto AS T2 ON T1.code = T2.project GROUP BY T1.name
SELECT avg ( Event_Attendance ) FROM event
SELECT max ( Event_Attendance ) FROM event
SELECT min ( Event_Attendance ) FROM event
SELECT avg ( Event_Attendance ) , max ( Event_Attendance ) FROM event
SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID ORDER BY T2.quality_rank
SELECT name from technician order by age DESC limit 1
SELECT team from machine order by value_points DESC limit 1
SELECT Making_Year from machine order by quality_rank limit 1
SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID ORDER BY T2.quality_rank
select count ( * ) from ship
select count ( * ) from captain
select Captain_id from captain order by age desc limit 1
select count ( distinct rank ) from captain
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id ORDER BY t2.age LIMIT 1
SELECT count ( * ) FROM orders
SELECT count ( * ) FROM customers
SELECT customer_id FROM customers
SELECT count ( * ) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT * FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id having count ( * ) = 3
SELECT customer_id FROM customers where customer_name = "George"
SELECT customer_id FROM customers where customer_name = "Jeramie"
SELECT T1.customer_id FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) from Customers_Cards
SELECT count ( * ) from Customers_Cards where card_type_code = "Credit"
SELECT count ( * ) from Customers_Cards where card_type_code = "Debit"
SELECT T2.card_type_code , count ( * ) FROM Financial_transactions AS T1 JOIN Customers_cards AS T2 ON T1.card_id = T2.card_id GROUP BY T2.card_type_code
SELECT count ( * ) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t3.characteristic_name = "hot"
SELECT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t3.characteristic_name = "hot"
SELECT t1.typical_selling_price FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = "lotus"
SELECT count ( * ) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t3.characteristic_name = "hot"
SELECT T1.detention_type_code FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code = T2.detention_type_code where detention_id = 1
SELECT T1.detention_type_code , T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code = T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count ( * ) ASC LIMIT 1
SELECT T1.detention_type_code , T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code = T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.detention_type_code , T2.detention_type_description FROM Detention AS T1 JOIN Ref_Detention_Type AS T2 ON T1.detention_type_code = T2.detention_type_code GROUP BY T1.detention_type_code ORDER BY count ( * ) ASC LIMIT 1
SELECT count ( * ) FROM perpetrator
SELECT location FROM perpetrator
SELECT location FROM perpetrator order by Killed desc limit 1
SELECT LOCATION FROM perpetrator ORDER BY Killed DESC LIMIT 1
SELECT max ( t1.low_temperature ) FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id WHERE t2.network_name = "Amersham"
SELECT t1.day_of_week FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id WHERE t2.network_name = "Amersham" order by low_temperature desc limit 1
SELECT avg ( t1.precipitation ) FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id WHERE t2.network_name = "Amersham"
SELECT max ( t1.low_temperature ) , avg ( t1.precipitation ) FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id WHERE t2.network_name = "Amersham"
SELECT lesson_date FROM Lessons
SELECT avg ( lesson_time ) FROM Lessons
SELECT price FROM Lessons ORDER BY price DESC LIMIT 1
SELECT count ( * ) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = "Ray"
SELECT count ( * ) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = "Ray"
SELECT sum ( duration ) FROM trip WHERE bike_id = 636
SELECT max ( duration ) FROM trip WHERE bike_id = 636
SELECT max ( duration ) FROM trip WHERE bike_id = 454
SELECT sum ( duration ) , max ( duration ) FROM trip WHERE bike_id = 636
SELECT Room, Phone FROM FACULTY WHERE FacID = 1121
SELECT Room FROM FACULTY WHERE Rank = "Professor" AND Building = "NEB"
SELECT Room FROM FACULTY WHERE Rank = "Professor" AND Building = "NEB"
select count ( * ) from tweets
select count ( * ) from user_profiles
select email from user_profiles where name = "Iron Man"
SELECT T2.text FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid where T1.name = "Iron Man"
SELECT T1.name , count ( * ) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid
SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count ( * ) > 2
SELECT document_type_code FROM documents WHERE document_name = "Learning English"
SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count ( * ) > 2
SELECT document_name FROM documents
SELECT document_type_code FROM documents GROUP BY document_type_code HAVING count ( * ) > 2
SELECT count ( * ) from technician
SELECT T2.Name , T1.machine_id FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID
SELECT T2.Name , T1.machine_id,T2.starting_year,T2.age FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID
SELECT T2.Name , COUNT ( * ) FROM repair_assignment AS T1 JOIN technician AS T2 ON T1.technician_ID = T2.technician_ID GROUP BY T2.Name
SELECT title FROM item WHERE i_id NOT IN ( SELECT i_id FROM review ) 
SELECT i_id FROM item WHERE i_id NOT IN ( SELECT i_id FROM review ) 
select count ( distinct i_id ) from review
select distinct ( i_id ) from review
select rating from review where i_id = 3
SELECT title FROM item WHERE i_id NOT IN ( SELECT i_id FROM review ) 
SELECT count ( * ) FROM customers
SELECT count ( * ) FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.coupon_amount = 500
SELECT t1.customer_id FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.coupon_amount = 500
SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.coupon_amount = 500
SELECT T1.good_or_bad_customer FROM customers AS T1 JOIN discount_coupons AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.coupon_amount = 500
SELECT country FROM MATCH where Location = 'Swan River , Perth'
SELECT age FROM pilot where name = 'Mr. Cristian Halvorson II'
SELECT country FROM match where Location = "Mina Zayid , Abu Dhabi"
SELECT t1.name , t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id = t2.winning_pilot ORDER BY t1.age desc LIMIT 1
SELECT country FROM MATCH where location = 'Flamengo Beach , Rio de Janeiro'
SELECT t1.name , t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id = t2.winning_pilot ORDER BY t1.age LIMIT 1
select count ( * ) from documents
SELECT document_type_code , document_name , document_description FROM Documents WHERE document_name = 'Noel CV'
SELECT document_type_code , document_name , document_description FROM Documents WHERE document_name = 'King Book'
SELECT document_type_code , document_name , document_description FROM Documents WHERE document_name = 'Noel CV' OR document_name = 'King Book'
SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id = t2.program_id WHERE t2.Time_of_day = "Morning" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id = t2.program_id WHERE t2.Time_of_day = "Night"
SELECT name from program where owner = "Beijing Television ( BTV ) "
SELECT launch from program where name = "Kaku"
SELECT owner from program where name = "Toonmax"
SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id = t2.program_id WHERE t2.Time_of_day = "Morning" INTERSECT SELECT t1.owner FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id = t2.program_id WHERE t2.Time_of_day = "Night"
SELECT count ( * ) from employees where title like "%manager%"
SELECT T2.first_name , T2.last_name , count ( T1.reports_to ) FROM employees AS T1 JOIN employees AS T2 ON T1.reports_to = T2.id GROUP BY T1.reports_to ORDER BY count ( T1.reports_to ) DESC LIMIT 1;
SELECT Policy_ID FROM Claims where Claim_ID = "143"
SELECT Date_Claim_Settled FROM Claims ORDER BY Date_Claim_Settled DESC LIMIT 1
SELECT Amount_Claimed FROM Claims where Date_Claim_Settled = "2018-03-09"
SELECT count ( * ) , T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id ORDER BY T1.Date_Claim_Settled DESC LIMIT 1
SELECT count ( * ) FROM captain where class = 'Third-rate ship of the line'
SELECT CLASS FROM captain GROUP BY CLASS HAVING count ( * ) > 2
SELECT name, club_id FROM CLub
SELECT player_id, name, club_id FROM player
SELECT name FROM CLub WHERE Club_ID NOT IN ( SELECT Club_ID FROM player ) 
SELECT name FROM CLub WHERE Club_ID NOT IN ( SELECT Club_ID FROM player ) 
SELECT regional_population, GDP FROM city WHERE city_id = 2
SELECT Jan, Apr, Oct FROM temperature WHERE city_id = 2
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar > 21
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar < T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar < T2.Jul INTERSECT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city
SELECT city, regional_population FROM city ORDER BY regional_population DESC LIMIT 3
SELECT avg ( GDP ) FROM city
SELECT city FROM city ORDER BY regional_population DESC LIMIT 3
SELECT avg ( transaction_amount ) FROM Financial_transactions
SELECT transaction_id FROM Financial_transactions WHERE transaction_amount > ( SELECT avg ( transaction_amount ) FROM Financial_transactions ) 
SELECT transaction_date FROM Financial_transactions WHERE transaction_amount > ( SELECT avg ( transaction_amount ) FROM Financial_transactions ) 
SELECT transaction_id FROM Financial_transactions WHERE transaction_amount > ( SELECT avg ( transaction_amount ) FROM Financial_transactions ) 
SELECT * FROM WINE WHERE year = 2006 order by price desc limit 1
SELECT * FROM WINE WHERE Price > ( SELECT max ( Price ) FROM WINE WHERE YEAR = 2006 ) 
SELECT Name FROM WINE WHERE Price > ( SELECT max ( Price ) FROM WINE WHERE YEAR = 2006 ) 
SELECT Name FROM WINE WHERE Price > ( SELECT max ( Price ) FROM WINE WHERE YEAR = 2006 ) 
SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1
SELECT candidate_id FROM candidate_assessments ORDER BY assessment_date DESC LIMIT 1
SELECT COUNT ( * ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = "Rock"
SELECT COUNT ( * ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = "Jazz"
SELECT composer FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = "Rock" group by composer order by count ( * ) desc limit 1
SELECT composer FROM track where name like "%B%"
SELECT COUNT ( * ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = "Rock"
SELECT DISTINCT song_name FROM song WHERE resolution > ( SELECT min ( resolution ) FROM song WHERE languages = "english" ) 
select count ( * ) from song
SELECT DISTINCT song_name FROM song WHERE resolution > ( SELECT min ( resolution ) FROM song WHERE languages = "english" ) 
SELECT gtype FROM Video_games
SELECT GName FROM Video_games WHERE GType = "Frist-person shooter"
SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count ( * ) ASC LIMIT 1
SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count ( * ) DESC LIMIT 1
SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count ( * ) DESC LIMIT 1
SELECT avg ( damage_millions_USD ) FROM storm
SELECT max ( damage_millions_USD ) FROM storm
SELECT min ( damage_millions_USD ) FROM storm
SELECT min ( damage_millions_USD ) FROM storm WHERE max_speed > 1000
SELECT max ( damage_millions_USD ) FROM storm WHERE max_speed > 1000
SELECT avg ( damage_millions_USD ) , max ( damage_millions_USD ) FROM storm WHERE max_speed > 1000
select count ( * ) from region
select region_name from region
select region_code from region where region_name = "Afghanistan"
SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id order by count ( * ) desc limit 1
SELECT T1.region_name FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id HAVING count ( * ) >= 2
SELECT user_name , password FROM users GROUP BY role_code ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM users GROUP BY role_code ORDER BY count ( * ) DESC LIMIT 1
SELECT user_name FROM users GROUP BY role_code ORDER BY count ( * ) DESC LIMIT 1
SELECT user_name FROM userswhere user_name not in ( SELECT user_name FROM users GROUP BY role_code ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT user_name , password FROM users GROUP BY role_code ORDER BY count ( * ) DESC LIMIT 1
select Id from Campuses
select CampusFee from csu_fees order by CampusFee desc limit 1
select Year from Campuses where Campus = 'California State University-Bakersfield'
SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus = t2.id WHERE t2.campus = "San Francisco State University" AND t1.year = 2000
SELECT T1.firstname , T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T1.Rate - T2.basePrice > 0
SELECT T1.firstname , T1.lastname, T1.Rate FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T1.Rate - T2.basePrice > 0
SELECT T1.firstname , T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T1.Rate - T2.basePrice < 0
SELECT T1.firstname , T1.lastname, T1.Rate FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T1.Rate - T2.basePrice < 0
SELECT Room FROM Reservations GROUP BY Room ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.firstname , T1.lastname FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T1.Rate - T2.basePrice > 0
select DEPARTMENT_ID,DEPARTMENT_NAME from departments
select T1.DEPARTMENT_ID, count ( * ) from departments AS T1 JOIN employees AS T2 where T1.DEPARTMENT_ID = T2.DEPARTMENT_ID group by T1.DEPARTMENT_ID
select T1.DEPARTMENT_ID, T1.DEPARTMENT_NAME, count ( * ) from departments AS T1 JOIN employees AS T2 where T1.DEPARTMENT_ID = T2.DEPARTMENT_ID group by T1.DEPARTMENT_ID
SELECT T2.department_name , COUNT ( * ) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY T2.department_name
SELECT customer_name , customer_id FROM customers
SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE "%TN%"
SELECT customer_address FROM customers WHERE customer_address LIKE "%TN%"
SELECT customer_name , customer_id FROM customers WHERE customer_address LIKE "%TN%"
SELECT Publication_Date FROM publication
SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT ( * ) DESC
SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Publication_Date FROM publication GROUP BY Publication_Date ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT count ( * ) from film
SELECT min ( release_year ) , max ( release_year ) from film
SELECT min ( rental_rate ) , max ( rental_rate ) from film
SELECT T2.title FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.film_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.film_id FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.film_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.film_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.title , T2.film_id , T2.description FROM film_actor AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.film_id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( Name ) FROM member WHERE Country = "United States" OR Country = "Canada"
SELECT Name FROM member WHERE Country = "United States" OR Country = "Canada"
SELECT Name FROM member WHERE Country = "United States" OR Country = "Canada"order by name
SELECT Name FROM member WHERE Country = "United States" OR Country = "Canada"
SELECT sum ( T2.room_count ) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_short_name = "Columbus Square"
SELECT bathroom_count from Apartments where apt_id = 2
SELECT sum ( T2.room_count ) FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T1.building_short_name = "Columbus Square"
SELECT Count ( distinct payment_method ) FROM customers
SELECT Count ( * ) FROM customers
SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity ) LIMIT 1
SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity ) LIMIT 1
SELECT sum ( t3.order_quantity ) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity ) LIMIT 1
SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity ) LIMIT 1
SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity ) DESC LIMIT 1
SELECT sum ( t3.order_quantity ) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity ) DESC LIMIT 1
SELECT t1.payment_method FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity ) DESC LIMIT 1
SELECT t1.date_became_customer FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity ) DESC LIMIT 1
SELECT count ( * ) FROM customers where date_became_customer < ( SELECT t1.date_became_customer FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity ) DESC LIMIT 1 ) 
SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id GROUP BY t1.customer_name ORDER BY sum ( t3.order_quantity ) DESC LIMIT 1
SELECT T2.Fname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID = T2.StuID WHERE T1.DNO = 140
SELECT T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID = T2.StuID WHERE T1.DNO = 140
SELECT age from Student where LName = 'Lee'
SELECT StuID from Student where LName = 'Smith'
SELECT T2.Fname , T2.Lname FROM MINOR_IN AS T1 JOIN STUDENT AS T2 ON T1.StuID = T2.StuID WHERE T1.DNO = 140
SELECT DEPT_NAME FROM DEPARTMENT
SELECT distinct ( DEPT_CODE ) FROM DEPARTMENT
SELECT T1.stu_fname, T1.STU_LNAME FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code JOIN department AS T5 ON T5.dept_code = T4.dept_code WHERE T5.dept_name = 'Computer Info. Systems'
SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code JOIN department AS T5 ON T5.dept_code = T4.dept_code WHERE T5.dept_name = 'Computer Info. Systems'
SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code JOIN department AS T5 ON T5.dept_code = T4.dept_code WHERE T5.dept_name = 'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code JOIN department AS T5 ON T5.dept_code = T4.dept_code WHERE T5.dept_name = 'Computer Info. Systems'
SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code JOIN department AS T5 ON T5.dept_code = T4.dept_code WHERE T5.dept_name = 'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code JOIN department AS T5 ON T5.dept_code = T4.dept_code WHERE T5.dept_name = 'Computer Info. Systems'
SELECT name FROM Person
SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.city = 'new york city'
SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.city = 'new york city'
SELECT * FROM all_star GROUP BY team_id ORDER BY count ( * ) DESC LIMIT 1
SELECT * FROM player AS T1 JOIN all_star AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.player_id FROM player AS T1 JOIN all_star AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.name_first , T1.name_last , T1.player_id , count ( * ) FROM player AS T1 JOIN all_star AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count ( * ) DESC LIMIT 1;
select count ( * ) from Dorm_amenity
select amenity_name from Dorm_amenity
SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid = T2.amenid GROUP BY T2.amenid ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid = T2.amenid GROUP BY T2.amenid ORDER BY count ( * ) DESC LIMIT 1
SELECT avg ( distance ) FROM Flight
SELECT max ( distance ) FROM Flight
SELECT max ( price ) FROM Flight
SELECT flno FROM Flight ORDER BY distance ASC LIMIT 3
SELECT staff_gender, staff_name FROM staff where staff_id = 1
SELECT T1.staff_id , T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1
SELECT job_title_code from Staff_Department_Assignments
SELECT T1.staff_id , T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1
SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = "AC/DC"
SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = "AC/DC"
SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id = t2.campus WHERE t1.campus = "San Jose State University" AND t2.year = 2000
SELECT sum ( degrees ) FROM degrees WHERE Campus = 5
SELECT distinct T1.Campus FROM campuses AS T1 JOIN degrees AS T2 ON t1.id = t2.campus WHERE t2.Campus = 5
SELECT distinct T1.Campus FROM campuses AS T1 JOIN degrees AS T2 ON t1.id = t2.campus WHERE t2.Campus = 19
SELECT sum ( degrees ) FROM campuses AS T1 JOIN degrees AS T2 ON t1.id = t2.campus WHERE t1.campus = "San Jose State University" AND t2.year = 2001
SELECT degrees FROM campuses AS T1 JOIN degrees AS T2 ON t1.id = t2.campus WHERE t1.campus = "San Jose State University" AND t2.year = 2000
SELECT T2.customer_first_name , T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.account_name = "900"
SELECT login_name FROM customers WHERE Customer_first_name = "Dee" AND Customer_middle_initial = "A" AND Customer_last_name = "Larkin"
SELECT COUNT ( customer_id ) FROM customers
SELECT T2.customer_first_name , T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.account_name = "900"
SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id = T2.s_id GROUP BY T2.s_id HAVING count ( * ) > 1
SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id = T2.s_id GROUP BY T2.s_id HAVING T1.tot_cred > 1
SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id = T2.s_id GROUP BY T2.s_id HAVING T1.tot_cred > 115
SELECT T1.name FROM student AS T1 JOIN advisor AS T2 ON T1.id = T2.s_id GROUP BY T2.s_id HAVING count ( * ) > 1
SELECT distinct TYPE FROM artwork
SELECT TYPE FROM artwork GROUP BY TYPE ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT TYPE FROM artwork where name = "Loving you"
SELECT TYPE FROM artwork GROUP BY TYPE ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT count ( DISTINCT t1.product_name ) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t3.characteristic_name = "warm"
SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t3.characteristic_name = "warm"
SELECT product_name from products where typical_buying_price = 352447.2874677
SELECT color_code from products where typical_buying_price = 352447.2874677
SELECT DISTINCT t1.product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t3.characteristic_name = "warm"
SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count > = 100
SELECT date_of_transaction FROM TRANSACTIONS WHERE amount_of_transaction > 100
SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count > = 100 OR amount_of_transaction > 100
SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100
SELECT count ( * ) FROM Draft_Copies
SELECT count ( copy_number ) FROM Draft_Copies GROUP BY document_id ORDER BY count ( copy_number ) LIMIT 1
SELECT count ( copy_number ) FROM Draft_Copies GROUP BY document_id ORDER BY count ( copy_number ) DESC LIMIT 1
SELECT document_id FROM Draft_Copies GROUP BY document_id ORDER BY count ( copy_number ) DESC LIMIT 1
SELECT document_id , count ( copy_number ) FROM Draft_Copies GROUP BY document_id ORDER BY count ( copy_number ) DESC LIMIT 1
SELECT document_id , count ( copy_number ) FROM Draft_Copies GROUP BY document_id ORDER BY count ( copy_number ) DESC LIMIT 1;
SELECT count ( * ) from addresses
SELECT first_name from staff
SELECT T1.city from addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = "Janessa"
SELECT * from addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = "Kaitlin"
SELECT T1.city FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T2.first_name = "Janessa" AND T2.last_name = "Sawayn";
SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID WHERE T2.Num_of_Audience > 200
SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID WHERE T2.Num_of_Audience > 200 order by T3.age desc limit 1
SELECT party from people where name = "James Humphrey"
SELECT district from people where name = "James Humphrey"
SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID WHERE T2.Num_of_Audience > 200
SELECT customer_id FROM customers WHERE customer_address LIKE "%WY%" AND payment_method_code ! = "Credit Card"
SELECT customer_name FROM customers WHERE customer_address LIKE "%WY%" AND payment_method_code ! = "Credit Card"
SELECT customer_id , customer_name FROM customers WHERE customer_address LIKE "%WY%" AND payment_method_code ! = "Credit Card"
SELECT customer_email, customer_phone FROM customers WHERE customer_address LIKE "%WY%" AND payment_method_code ! = "Credit Card"
SELECT customer_id , customer_name FROM customers WHERE customer_address LIKE "%WY%" AND payment_method_code != "Credit Card"
SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance < 100
SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance > 500
SELECT T1.date FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance > 500
SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance < 100 INTERSECT SELECT T2.theme FROM exhibition_record AS T1 JOIN exhibition AS T2 ON T1.exhibition_id = T2.exhibition_id WHERE T1.attendance > 500
SELECT building_short_name FROM Apartment_Buildings WHERE building_id = 133
SELECT building_manager FROM Apartment_Buildings WHERE building_full_name = "Mercedes House"
SELECT building_address FROM Apartment_Buildings WHERE building_manager = "Melyssa"
SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE "%court%"
SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE "%court%"
SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT ( * ) LIMIT 1
SELECT Player_name FROM player GROUP BY Occupation ORDER BY COUNT ( * ) LIMIT 1
SELECT Player_name FROM player GROUP BY Occupation ORDER BY COUNT ( * ) desc LIMIT 1
SELECT Sponsor_name FROM player GROUP BY Occupation ORDER BY COUNT ( * ) desc LIMIT 1
SELECT Occupation FROM player GROUP BY Occupation ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Policy_ID,Customer_ID,Policy_Type_Code FROM policies
SELECT Policy_Type_Code FROM policies
SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count ( * ) DESC LIMIT 1
SELECT policy_type_code FROM policies GROUP BY policy_type_code ORDER BY count ( * ) DESC LIMIT 1
SELECT Campus FROM Campuses WHERE Location = 'San Francisco'
SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id = t2.campus WHERE t1.campus = "San Francisco State University" AND T2.year = 1996
SELECT T1.Campus FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id = t2.campus WHERE t2.year = 1996 AND T2.CampusFee = 2258
SELECT T1.County FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id = t2.campus WHERE t2.year = 1996 AND T2.CampusFee = 2258
SELECT county FROM campuses WHERE Campus = 'San Francisco State University'
SELECT campusfee FROM campuses AS T1 JOIN csu_fees AS T2 ON T1.id = t2.campus WHERE t1.campus = "San Francisco State University" AND T2.year = 1996
SELECT count ( * ) FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id
SELECT t2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id
SELECT count ( * ) , T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id
SELECT count ( * ) , T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id GROUP BY T2.product_id
SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT ( * ) > 2
SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT ( * ) > 2 ORDER BY days_held DESC LIMIT 1
SELECT name FROM wrestler WHERE LOCATION = 'Tokyo , Japan'
SELECT LOCATION FROM wrestler GROUP BY LOCATION HAVING COUNT ( * ) > 2
SELECT document_name FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'
SELECT document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'
SELECT Document_Description FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'
SELECT document_name , document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'
SELECT T1.id , T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id GROUP BY T1.id HAVING count ( * )  = 2
SELECT T1.id , T1.name , T1.gender FROM architect AS T1 JOIN mill AS T2 ON T1.id = T2.architect_id GROUP BY T1.id HAVING count ( * )  = 1
SELECT T1.id , T1.name , T1.gender FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id GROUP BY T1.id HAVING count ( * ) = 2 UNION SELECT T1.id , T1.name , T1.gender FROM architect AS T1 JOIN mill AS T2 ON T1.id = T2.architect_id GROUP BY T1.id HAVING count ( * ) = 1
SELECT id FROM station WHERE city = "San Francisco"
SELECT id FROM station WHERE city = "San Francisco" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING bikes_available > 10
select name from station order by lat desc limit 1
select installation_date from station order by lat desc limit 1
select id from station where installation_date<'8/6/2013' order by dock_count desc limit 1
SELECT id FROM station WHERE city = "San Francisco" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg ( bikes_available ) > 10
SELECT StuID FROM Student WHERE sex = 'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname = "Football"
SELECT Fname, Lname FROM Student WHERE StuID = 1002
SELECT Fname, Lname FROM Student WHERE StuID = 1003
SELECT StuID FROM Student WHERE sex = 'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname = "Football"
SELECT * FROM dorm where gender = "F"
SELECT * FROM dorm where gender = "M"
SELECT * FROM dorm where gender = "M" or gender = "F"
SELECT dorm_name FROM dorm where gender = "X"
SELECT dorm_name FROM dorm
SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge'
SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge'
SELECT dorm_name FROM dorm EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge'
SELECT count ( * ) from invoices
SELECT count ( * ) from orders
SELECT customer_id from orders where order_id = 3
SELECT T2.order_id , T2.order_details FROM Invoices AS T1 JOIN Orders AS T2 ON T1.order_id = T2.order_id GROUP BY T2.order_id HAVING count ( * ) > 2
SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.country = 'China' GROUP BY T1.name ORDER BY count ( * ) ASC LIMIT 1
SELECT DISTINCT ( COUNT ( name ) ) FROM airports
SELECT COUNT ( DISTINCT country ) FROM airports
SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.country = 'China' GROUP BY T1.name ORDER BY count ( * ) DESC LIMIT 1
SELECT LOCATION FROM cinema WHERE openning_year = 2010
SELECT LOCATION FROM cinema WHERE openning_year = 2011
select count ( * ) from ( SELECT LOCATION FROM cinema WHERE openning_year = 2010 INTERSECT SELECT LOCATION FROM cinema WHERE openning_year = 2011 ) 
SELECT LOCATION FROM cinema WHERE openning_year = 2010 INTERSECT SELECT LOCATION FROM cinema WHERE openning_year = 2011
SELECT name FROM track ORDER BY year_opened DESC LIMIT 1
SELECT Seating FROM track where Name = 'Chicagoland Speedway'
SELECT Location FROM track where Name = 'Chicagoland Speedway'
SELECT name , LOCATION , seating FROM track ORDER BY year_opened DESC LIMIT 1
SELECT city_id FROM city WHERE population > 1000
SELECT DISTINCT T1.CITY_ID FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID WHERE T1.Population < 1000
SELECT T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID WHERE T1.Population > 1000
SELECT count ( * ) FROM web_client_accelerator
SELECT * FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser ) 
SELECT count ( * ) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser ) 
SELECT count ( * ) FROM web_client_accelerator WHERE id NOT IN ( SELECT accelerator_id FROM accelerator_compatible_browser ) ;
SELECT count ( * ) FROM products WHERE product_price > ( SELECT avg ( product_price ) FROM products ) 
SELECT product_name FROM products WHERE product_price > ( SELECT avg ( product_price ) FROM products ) 
SELECT count ( * ) FROM products WHERE product_price < ( SELECT avg ( product_price ) FROM products ) 
SELECT distinct product_name FROM products WHERE product_price < ( SELECT avg ( product_price ) FROM products ) 
SELECT count ( * ) FROM products WHERE product_price > ( SELECT avg ( product_price ) FROM products ) 
SELECT count ( * ) FROM documents
SELECT document_name FROM documents ORDER BY access_count ASC LIMIT 1
SELECT document_name FROM documents ORDER BY access_count DESC LIMIT 1
SELECT access_count FROM documents ORDER BY access_count DESC LIMIT 1
SELECT document_type_code FROM documents ORDER BY access_count DESC LIMIT 1
SELECT document_name , access_count FROM documents ORDER BY access_count DESC LIMIT 1
SELECT count ( * ) FROM Flight WHERE origin = "Los Angeles"
SELECT count ( * ) FROM Flight WHERE origin = "Los Angeles" and destination = "Honolulu"
SELECT departure_date , arrival_date FROM Flight WHERE origin = "Los Angeles" AND destination = "Honolulu"
SELECT departure_date , arrival_date FROM Flight WHERE origin = "Los Angeles" AND destination = "Honolulu"
SELECT T2.title , avg ( T1.stars ) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY avg ( T1.stars ) LIMIT 1
SELECT year , director FROM Movie where title = 'The Sound of Music'
SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY T1.stars DESC LIMIT 1
SELECT T2.title , avg ( T1.stars ) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY avg ( T1.stars ) LIMIT 1
SELECT name FROM head WHERE head_ID = 1
SELECT born_state, age FROM head WHERE head_ID = 3
SELECT head_id , name FROM head WHERE name LIKE '%Ha%'
SELECT head_id , name FROM head WHERE name LIKE '%Ha%'
SELECT Studio FROM film order by Gross_in_dollar DESC limit 1
SELECT Studio FROM film GROUP BY Studio HAVING avg ( Gross_in_dollar )  > = 4500000
SELECT Studio FROM film GROUP BY Studio HAVING avg ( Gross_in_dollar )  > = 4500000
SELECT Studio FROM film GROUP BY Studio HAVING avg ( Gross_in_dollar ) >= 4500000
select count ( * ) from mountain
SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T1.Country = "West Germany"
select Name from mountain order by Height desc limit 1
SELECT DISTINCT T2.Name FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T1.Country = "West Germany"
select district_name from district
SELECT sum ( city_population ) FROM district WHERE city_area > ( SELECT avg ( city_area ) FROM district ) 
SELECT sum ( city_population ) FROM district WHERE city_area > ( SELECT avg ( city_area ) FROM district ) 
SELECT count ( * ) FROM driver
SELECT avg ( Age ) FROM driver
SELECT home_city FROM driver GROUP BY home_city ORDER BY count ( * ) DESC LIMIT 1
SELECT T3.Party_Theme , T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID
SELECT T2.Nationality FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID
SELECT T2.name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID order by T3.First_year limit 1
SELECT T3.Party_Theme , T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID
SELECT product_id from Order_Items where order_item_id = 1
SELECT product_quantity from Order_Items where order_item_id = 1
SELECT production_type_code from Order_Items as T1 join Products as T2 on T1.product_id = T2.product_id where T1.order_item_id = 1
SELECT count ( * ) FROM products WHERE product_id NOT IN ( SELECT product_id FROM Order_items ) 
SELECT Member_ID FROM Member where Member_Name = 'Hon Tony Abbott'
SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.party_name FROM Member AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id order by T1.date_of_completion desc limit 1
SELECT count ( distinct student_id ) from student_course_enrolment
SELECT count ( distinct T1.student_id ) FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = "Fail"
SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = "Fail"
SELECT T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Student_Tests_Taken AS T2 ON T1.registration_id = T2.registration_id WHERE T2.test_result = "Fail"
select shop_name from shop
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT ( * ) > 1
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID HAVING COUNT ( * ) > 1
SELECT product_description FROM Products_for_Hire
SELECT T3.booking_start_date , T3.booking_end_date FROM Products_for_hire AS T1 JOIN products_booked AS T2 ON T1.product_id = T2.product_id JOIN bookings AS T3 ON T2.booking_id = T3.booking_id WHERE T1.product_name = 'Book collection A'
SELECT avg ( booked_amount ) FROM Products_Booked
SELECT T3.booking_start_date , T3.booking_end_date FROM Products_for_hire AS T1 JOIN products_booked AS T2 ON T1.product_id = T2.product_id JOIN bookings AS T3 ON T2.booking_id = T3.booking_id WHERE T1.product_name = 'Book collection A'
SELECT T1.name_full , T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY count ( * ) DESC LIMIT 1
select count ( distinct player_id ) from player_college where college_id = ( SELECT T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT T1.city, T1.state, T1.country FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY count ( * ) DESC LIMIT 1
Select year from player_college where college_id = ( SELECT T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY count ( * ) DESC LIMIT 1 ) group by college_id order by year desc limit 1
Select count ( player_id ) from player_college where year = "2018" and college_id = "texas"
SELECT T1.name_full , T1.college_id FROM college AS T1 JOIN player_college AS T2 ON T1.college_id = T2.college_id GROUP BY T1.college_id ORDER BY count ( * ) DESC LIMIT 1;
SELECT T2.product_name , count ( * ) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id JOIN Orders AS T3 ON T3.order_id = T1.order_id GROUP BY T2.product_name
select unit_price from Products where production_type_code = "Books"
select date_order_placed from Orders where customer_id = 12
SELECT T2.product_name , count ( * ) FROM Order_items AS T1 JOIN Products AS T2 ON T1.product_id = T2.product_id JOIN Orders AS T3 ON T3.order_id = T1.order_id GROUP BY T2.product_name
SELECT count ( * ) FROM course WHERE course_id IN ( SELECT course_id FROM prereq ) 
SELECT count ( * ) FROM course
SELECT count ( * ) FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq ) 
SELECT count ( * ) FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq ) 
SELECT count ( * ) FROM airport WHERE id IN ( SELECT airport_id FROM flight WHERE pilot = 'Thompson' ) 
SELECT count ( * ) FROM airport as T1 JOIN flight as T2 on T1.id = T2.airport_id WHERE T2.pilot = 'Thompson' and T2.date > 'August 16, 1963'
SELECT Vehicle_Flight_number FROM flight WHERE pilot = 'Thompson' and date = 'March 1, 1963'
SELECT count ( * ) FROM airport WHERE id NOT IN ( SELECT airport_id FROM flight WHERE pilot = 'Thompson' ) ;
SELECT CLASS_ROOM FROM CLASS WHERE CLASS_SECTION = 1
SELECT count ( * ) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code WHERE T1.crs_code = 'ACCT-211'
SELECT count ( * ) FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = "Nancy" AND T1.last_name = "Edwards"
SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name ! = "Nancy" AND T1.last_name ! = "Edwards"
SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T2.first_name = "Andrew" AND T2.last_name = "Adams"
SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = "Andrew" AND T1.last_name = "Adams" and T2.first_name ! = 'Nancy' and T2.last_name ! = 'Edwards'
SELECT T2.first_name , T2.last_name FROM employees AS T1 JOIN employees AS T2 ON T1.id = T2.reports_to WHERE T1.first_name = "Nancy" AND T1.last_name = "Edwards";
SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT ( * )  > = 2 ORDER BY T1.Product_Name
select Product_Price from Products where Product_Name = "Men suits"
select max ( Product_Price ) from Products
select min ( Product_Price ) from Products
select Product_Type_Code from Products order by Product_Price limit 1
SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT ( * ) >= 2 ORDER BY T1.Product_Name
SELECT name FROM player WHERE points > ( SELECT avg ( points ) FROM player ) 
SELECT name FROM player where Points = ( SELECT MAX ( Points ) FROM player ) 
SELECT name FROM player where Points = ( SELECT MAX ( Points ) FROM player ) 
SELECT name FROM player WHERE points > ( SELECT avg ( points ) FROM player ) 
SELECT count ( * ) FROM instructor
SELECT T1.id FROM instructor AS T1 JOIN advisor AS T2 ON T1.id = T2.i_id GROUP BY T2.i_id HAVING count ( * ) > 1
SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id = T2.i_id GROUP BY T2.i_id HAVING count ( * ) > 1
SELECT T1.name FROM instructor AS T1 JOIN advisor AS T2 ON T1.id = T2.i_id GROUP BY T2.i_id HAVING count ( * ) > 1
SELECT COUNT ( * ) FROM Faculty WHERE Rank = "Professor"
SELECT COUNT ( * ) FROM Faculty WHERE Rank = "AsstProf"
SELECT count ( * ) FROM Faculty WHERE rank = "AsstProf" AND Sex = "F"
SELECT sex , count ( * ) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex
SELECT staff_id FROM staff where staff_last_name = "Bosco"
SELECT problem_id FROM problems where reported_by_staff_id = 1
SELECT count ( * ) FROM problems where reported_by_staff_id = 1
SELECT * FROM Staff where staff_last_name = 'Bosco'
SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = "Lacey"
SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = "Bosco"
SELECT T1.problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_last_name = "Bosco"
SELECT Major FROM Student group by Major order by count ( * ) desc limit 1
SELECT LName,Fname FROM Student WHERE age =  ( SELECT max ( age ) FROM Student ) 
SELECT StuID FROM Student WHERE age =  ( SELECT max ( age ) FROM Student ) 
SELECT StuID FROM Student WHERE age = ( SELECT max ( age ) FROM Student ) 
SELECT t2.customer_ID FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t1.start_date =  ( SELECT max ( start_date ) FROM policies ) 
SELECT customer_details FROM Customers WHERE Customer_ID = 263
SELECT Policy_Type_Code from policies Where customer_id = 334
SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t1.start_date = ( SELECT max ( start_date ) FROM policies ) 
SELECT name FROM program
SELECT name FROM program ORDER BY launch DESC LIMIT 1
SELECT owner FROM program ORDER BY launch DESC LIMIT 1
SELECT name FROM program ORDER BY launch DESC LIMIT 1
SELECT AVG ( T2.UnitPrice ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = "Rock"
SELECT AVG ( T2.Milliseconds ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = "Rock"
SELECT AVG ( T2.Milliseconds ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = "Jazz"
SELECT AVG ( T2.UnitPrice ) FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId WHERE T1.Name = "Rock"
SELECT * FROM WINE order by price desc limit 1
SELECT year FROM WINE order by price desc limit 1
SELECT appelation FROM WINE where name = 'Giana'
SELECT * FROM WINE where score = 91
SELECT avg ( Price ) , avg ( Score ) , Appelation FROM WINE GROUP BY Appelation
SELECT billing_address FROM invoices ORDER BY total DESC LIMIT 1
SELECT sum ( total ) FROM invoices WHERE billing_city = "Chicago" AND billing_state = "IL"
SELECT billing_country FROM invoices WHERE total = 3.96
SELECT sum ( total ) FROM invoices WHERE billing_city = "Chicago" AND billing_state = "IL";
SELECT Name FROM climber
SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = "Uganda"
SELECT T1.Time FROM climber AS T1 JOIN mountain AS T2 ON T1.Mountain_ID = T2.Mountain_ID WHERE T2.Country = "Uganda"
SELECT count ( * ) FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id = T2.address_id WHERE T1.zip_postcode = "918"
SELECT T2.email_address FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id = T2.address_id WHERE T1.zip_postcode = "918"
SELECT T2.email_address FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id = T2.address_id WHERE T1.zip_postcode = "918"
SELECT order_status FROM orders ORDER BY date_order_placed DESC LIMIT 1
SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1
SELECT order_id FROM orders ORDER BY date_order_placed DESC LIMIT 1
SELECT count ( * ) FROM professor
SELECT count ( distinct DEPT_NAME ) FROM DEPARTMENT
SELECT count ( * ) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T2.dept_name = 'Accounting' OR T2.dept_name = 'Biology'
SELECT emp_jobcode , count ( * ) FROM employee GROUP BY emp_jobcode ORDER BY count ( * ) DESC LIMIT 1
select EMP_HIREDATE from employee where emp_jobcode in ( SELECT emp_jobcode FROM employee GROUP BY emp_jobcode ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT emp_jobcode , count ( * ) FROM employee GROUP BY emp_jobcode ORDER BY count ( * ) DESC LIMIT 1
SELECT publisher FROM book_club GROUP BY publisher ORDER BY count ( * ) DESC LIMIT 1
SELECT Author_or_Editor FROM book_club where Book_Title = 'Unicorn Mountain'
SELECT Author_or_Editor FROM book_club where Book_Title = 'Death Takes the Stage'
SELECT publisher FROM book_club GROUP BY publisher ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( distinct artistid ) FROM ALBUM
SELECT count ( distinct t1.ArtistId ) FROM ARTIST as t1 join ALBUM as t2 on t1.artistid = t2.artistid WHERE t1.name = 'Accept'
SELECT count ( * ) FROM ALBUM
SELECT count ( * ) FROM ARTIST WHERE artistid NOT IN ( SELECT artistid FROM ALBUM ) 
SELECT avg ( volume ) FROM music_festival
SELECT distinct category FROM music_festival
SELECT Date_of_ceremony FROM music_festival WHERE Category = "Best Song" AND RESULT = "Awarded"
SELECT Date_of_ceremony FROM music_festival WHERE Category = "Best Song" AND RESULT = "Awarded"
SELECT artist_name FROM song GROUP BY artist_name ORDER BY count ( * ) desc LIMIT 1
SELECT artist_name FROM song GROUP BY artist_name ORDER BY count ( * ) LIMIT 1
SELECT country FROM artist where artist_name = 'Enrique'
SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY count ( * ) LIMIT 1
SELECT count ( * ) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses ) 
SELECT Budget_type_code FROM Documents_with_Expenses
SELECT count ( * ) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses ) 
SELECT cName FROM tryout WHERE pPos = "goalie"
SELECT cName FROM tryout WHERE pPos ! = "goalie"
SELECT sum ( enr ) FROM college WHERE cName NOT IN ( SELECT cName FROM tryout WHERE pPos = "goalie" ) 
SELECT CLASS FROM race GROUP BY CLASS ORDER BY count ( * ) DESC LIMIT 1
SELECT Date FROM race WHERE Class = ( SELECT Class FROM race GROUP BY CLASS ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT Race_ID FROM race WHERE Class = ( SELECT Class FROM race GROUP BY CLASS ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT CLASS FROM race GROUP BY CLASS ORDER BY count ( * ) DESC LIMIT 1
select name from musical where year = 1986 and category = 'Best Book of a Musical' and Result = 'Nominated'
SELECT count ( T1.Name ) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE t2.year = 1986 and t2.category = 'Best Book of a Musical' and t2.Result = 'Nominated'
SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE t2.year = 1986 and t2.category = 'Best Book of a Musical' and t2.Result = 'Nominated'
SELECT T1.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.Name = "The Phantom of the Opera"
SELECT transaction_type_code , max ( share_count ) FROM TRANSACTIONS GROUP BY transaction_type_code
SELECT share_count FROM TRANSACTIONS where transaction_type_code = 'PUR' and share_count ! = "" order by share_count limit 1
SELECT share_count FROM TRANSACTIONS where transaction_id = 2
SELECT share_count FROM TRANSACTIONS where share_count ! = "" order by share_count limit 1
SELECT transaction_type_code , max ( share_count ) , min ( share_count ) FROM TRANSACTIONS GROUP BY transaction_type_code
SELECT YEAR FROM festival_detail GROUP BY YEAR HAVING COUNT ( * ) > 1
SELECT Festival_Name FROM festival_detail WHERE YEAR = "2007"
SELECT YEAR FROM festival_detail WHERE Festival_Name = "Cherry Awards"
SELECT YEAR FROM festival_detail GROUP BY YEAR HAVING COUNT ( * ) > 1
SELECT count ( * ) from Customers
SELECT count ( * ) from Customers where payment_method = "Cash"
SELECT customer_name from Customers where customer_id = 2
SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id WHERE t3.order_quantity = ( SELECT max ( order_quantity ) FROM order_items ) 
SELECT avg ( acc_bal ) , acc_type FROM customer WHERE credit_score < 50 GROUP BY acc_type
SELECT avg ( acc_bal ) , acc_type FROM customer WHERE credit_score < 50 GROUP BY acc_type
SELECT T1.driverid , T1.forename , count ( * ) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count ( * )  > = 2
SELECT driverRef , nationality FROM drivers where forename = 'Fernando'
SELECT T2.position, count ( * ) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid where T1.forename = 'Fernando' and rank = 1
SELECT T1.driverid , T1.forename , count ( * ) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count ( * ) >= 2
SELECT count ( * ) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code WHERE T1.crs_code = 'ACCT-211'
SELECT CLASS_TIME,CLASS_ROOM from CLASS where CRS_CODE = 'ACCT-211'
select distinct crs_code from class
SELECT count ( * ) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code WHERE T1.crs_code = 'ACCT-211'
SELECT sum ( t2.order_quantity ) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id = t2.order_id
SELECT sum ( t2.order_quantity ) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id = t2.order_id WHERE t1.order_status = "Delivered"
SELECT sum ( t2.order_quantity ) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id = t2.order_id WHERE t1.order_status = "Cancelled"
SELECT sum ( t2.order_quantity ) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id = t2.order_id WHERE t1.order_status = "Cancelled"
SELECT rating FROM song WHERE languages = 'english'
SELECT song_name FROM song
SELECT song_name FROM song WHERE rating < ( SELECT min ( rating ) FROM song WHERE languages = 'english' ) 
SELECT song_name FROM song WHERE rating < ( SELECT min ( rating ) FROM song WHERE languages = 'english' ) 
SELECT count ( distinct cinema_id ) from cinema
SELECT avg ( capacity ) from cinema
SELECT name from cinema where capacity = ( select min ( capacity ) from cinema ) or capacity = ( select max ( capacity ) from cinema ) 
SELECT location from cinema GROUP BY LOCATION ORDER BY count ( * ) DESC LIMIT 1
SELECT LOCATION FROM cinema WHERE openning_year > = 2010 GROUP BY LOCATION ORDER BY count ( * ) DESC LIMIT 1
SELECT LOCATION FROM cinema WHERE openning_year >= 2010 GROUP BY LOCATION ORDER BY count ( * ) DESC LIMIT 1
SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1
SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1
select billing_address from invoices where billing_country = "Germany"
select invoice_date from invoices where customer_id = 2
select distinct ( billing_city ) from invoices where billing_country = "Norway"
select last_name from customers where state = "SP"
SELECT T1.first_name , T1.last_name , SUM ( T2.total ) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY SUM ( T2.total ) DESC LIMIT 10;
SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID = T2.Member_ID ORDER BY Rank_in_Round ASC
SELECT T1.Name ,t1.Member_ID FROM member AS T1 JOIN round AS T2 ON T1.Member_ID = T2.Member_ID ORDER BY Rank_in_Round ASC
SELECT T1.Name ,t1.Member_ID,T1.College_ID FROM member AS T1 JOIN round AS T2 ON T1.Member_ID = T2.Member_ID ORDER BY Rank_in_Round ASC
SELECT T1.Name FROM member AS T1 JOIN round AS T2 ON T1.Member_ID = T2.Member_ID ORDER BY Rank_in_Round ASC
SELECT daily_hire_cost FROM Products_for_Hire where product_id = 1
SELECT status_date FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id = T2.product_id WHERE product_name = "Book collection C"
SELECT product_description FROM Products_for_Hire where product_id = 3
SELECT T2.product_name FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id = T2.product_id WHERE T1.available_yn = 1
SELECT T2.product_name FROM view_product_availability AS T1 JOIN products_for_hire AS T2 ON T1.product_id = T2.product_id WHERE T1.available_yn = 1
SELECT distinct Location from enzyme
SELECT Chromosome from enzyme where name = "PBG deaminase"
SELECT Product from enzyme where name = "ALA synthase"
SELECT DISTINCT T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id = T1.id WHERE T2.medicine_id = 3
SELECT DISTINCT T1.name , T1.location , T1.product FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id = T1.id WHERE T2.interaction_type = 'inhibitor'
SELECT artist_name FROM song WHERE song_name = "Tumi robe nirobe"
SELECT rating FROM song WHERE song_name = "Tumi robe nirobe"
SELECT genre_is FROM song WHERE song_name = "Tumi robe nirobe"
SELECT song_name FROM song WHERE genre_is = "modern" OR languages = "english"
SELECT song_name FROM song WHERE genre_is = "modern" OR languages = "english"
SELECT customer_name FROM Customers WHERE customer_id = 1
SELECT customer_name FROM Customers WHERE customer_id = 2
SELECT customer_name FROM Customers WHERE customer_id = 3
SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count ( * ) < = 2
SELECT T2.customer_name FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count ( * ) <= 2
SELECT avg ( age ) , max ( age ) , sex FROM student GROUP BY sex
SELECT avg ( age ) , max ( age ) , sex FROM student GROUP BY sex
SELECT name FROM student WHERE id IN ( SELECT id FROM takes WHERE semester = 'Fall' AND YEAR = 2003 ) 
SELECT name FROM student WHERE id IN ( SELECT id FROM takes WHERE semester = 'Spring' AND YEAR = 2003 ) 
SELECT name FROM student WHERE id IN ( SELECT id FROM takes WHERE semester = 'Spring' AND YEAR = 2004 ) 
SELECT distinct id FROM takes WHERE semester = 'Spring' AND YEAR = 2004
SELECT grade FROM takes WHERE semester = 'Spring' AND YEAR = 2004 and id = 10838
SELECT name FROM student WHERE id IN ( SELECT id FROM takes WHERE semester = 'Fall' AND YEAR = 2003 ) 
SELECT count ( distinct Official_native_language ) FROM country
SELECT count ( distinct Official_native_language ) FROM country WHERE Official_native_language LIKE "%English%"
SELECT Official_native_language FROM country WHERE Official_native_language LIKE "%English%"
SELECT Official_native_language FROM country WHERE Official_native_language LIKE "%English%"
SELECT count ( * ) FROM campuses
SELECT campus FROM campuses
SELECT location FROM campuses where campus = "California State University-Bakersfield"
SELECT county FROM campuses where campus = "California State University-Chico"
SELECT T1.campus FROM campuses AS t1 JOIN faculty AS t2 ON t1.id = t2.campus WHERE t2.faculty >= 600 AND t2.faculty <= 1000 AND T1.year = 2004
SELECT weight FROM people where name = "Francesco Postiglione"
SELECT Money_Requested FROM entrepreneur where People_ID = "2"
SELECT date_of_birth FROM people where name = "Fabrizio Buonocore"
SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Weight DESC LIMIT 1
SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Weight DESC LIMIT 1
SELECT balance from savings where custid = 1
SELECT T2.balance from accounts as T1 join savings as T2 on T1.custid = T2.custid where T1.name = "Wang"
SELECT name from accounts where custid = 3
SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T1.name IN ( SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T2.balance > ( SELECT avg ( balance ) FROM savings ) ) 
SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T1.name IN ( SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T2.balance > ( SELECT avg ( balance ) FROM savings ) ) 
SELECT T2.song_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name ORDER BY T2.resolution LIMIT 1
SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name ORDER BY T2.resolution LIMIT 1
SELECT T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name ORDER BY T2.resolution LIMIT 1
SELECT T1.gender , T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name ORDER BY T2.resolution LIMIT 1
select count ( Service_name ) from Services
select count ( * ) from Customers
select count ( distinct Customer_name ) from Customers
select count ( Policy_ID ) from First_Notification_of_Loss
SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id JOIN services AS t3 ON t2.service_id = t3.service_id WHERE t3.service_name = "Close a policy" OR t3.service_name = "Upgrade a policy"
SELECT avg ( Market_Value ) FROM company
SELECT avg ( Assets_billion ) FROM company
SELECT Headquarters FROM company
SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry = 'Banking'
SELECT headquarters FROM company EXCEPT SELECT headquarters FROM company WHERE main_industry = 'Banking'
SELECT DISTINCT Award FROM musical WHERE Nominee = "Bob Fosse"
SELECT DISTINCT Award FROM musical WHERE Nominee = "Cleavant Derricks"
SELECT Category FROM musical WHERE Nominee = "Cleavant Derricks" AND Result = "Won"
SELECT Category FROM musical WHERE Nominee = "Cleavant Derricks" AND Result = "Nominated"
SELECT Category FROM musical WHERE Nominee = "Bob Fosse" AND Result = "Won"
SELECT Nominee FROM musical WHERE Award = "Tony Award" OR Award = "Cleavant Derricks"
SELECT T1.register_year FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id WHERE T2.name = "Jeremy Jarmon"
SELECT Card_Number FROM member where name = 'Corey Peters'
SELECT Hometown FROM member where name = 'Myron Pryor'
SELECT T2.name , T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id WHERE T1.register_year = 2016
SELECT T2.name , T2.hometown FROM membership_register_branch AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id WHERE T1.register_year = 2016
SELECT product_description FROM products WHERE product_name = "chervil"
SELECT t1.color_code , t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t1.product_name = "chervil"
SELECT typical_buying_price FROM products WHERE product_name = "chervil"
SELECT other_product_details FROM products WHERE product_name = "chervil"
SELECT t1.color_code , t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t1.product_name = "chervil"
SELECT School FROM school WHERE School_ID = '1'
SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT ( * ) > 1
SELECT Location FROM school WHERE School = 'Barker College'
SELECT School FROM school WHERE Boys_or_Girls = 'Girls'
SELECT Denomination FROM school GROUP BY Denomination HAVING COUNT ( * ) > 1
select lastname,firstname from list
select count ( * ) from list group by classroom order by count ( * ) desc limit 1
SELECT T2.firstname , T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom GROUP BY T2.firstname , T2.lastname ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.firstname , T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom GROUP BY T2.firstname , T2.lastname ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM Apartments
SELECT apt_id FROM Apartments GROUP BY apt_id ORDER BY sum ( room_count ) DESC LIMIT 1
SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY sum ( room_count ) DESC LIMIT 1
SELECT apt_type_code , bathroom_count , bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum ( room_count ) DESC LIMIT 1
SELECT Name FROM editor WHERE Age = 24 OR Age = 25
SELECT count ( Editor_ID ) FROM editor
SELECT Name FROM editor WHERE Age = 24 OR Age = 25
SELECT T2.name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Total DESC LIMIT 1
SELECT T2.name, t2.people_id FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Total DESC LIMIT 1
SELECT T2.Birth_Date , T2.Birth_Place FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Total DESC LIMIT 1
SELECT asset_id, fault_log_entry_id, fault_description from Fault_Log
Select asset_id from Assets where asset_id not in ( SELECT asset_id from Fault_Log ) 
Select asset_model from Assets where asset_id not in ( SELECT asset_id from Fault_Log ) 
SELECT asset_model FROM Assets WHERE asset_id NOT IN ( SELECT asset_id FROM Fault_Log ) 
SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = "Janessa"
SELECT * from Lessons where lesson_id = 4
SELECT lesson_date from Lessons where lesson_id = 4
SELECT lesson_time from Lessons where lesson_id = 4
SELECT T1.lesson_id FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = "Janessa" AND T2.last_name = "Sawayn" AND nickname LIKE "%s%";
SELECT salary FROM Employee ORDER BY salary ASC
SELECT salary FROM Employee ORDER BY salary ASC LIMIT 3
SELECT name FROM Employee ORDER BY salary ASC limit 1
SELECT eid FROM Employee ORDER BY salary ASC LIMIT 1
SELECT name FROM Employee ORDER BY salary ASC LIMIT 3
SELECT height FROM mountain where name = 'Kibo ( Uhuru Pk ) '
SELECT count ( * ) FROM mountain where country = 'Tanzania'
SELECT Range FROM mountain where country = 'Kenya' and name = 'Mount Kenya ( Batian ) '
SELECT name FROM mountain where country = 'Tanzania' order by height desc limit 1
SELECT name FROM mountain order by height limit 1
SELECT Country FROM mountain GROUP BY Country HAVING COUNT ( * ) > 1
SELECT count ( * ) FROM department
SELECT Num_Employees FROM department WHERE department_id = 2
SELECT Name FROM department WHERE department_id = 3
SELECT max ( budget_in_billions ) , min ( budget_in_billions ) FROM department
SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed
SELECT Employee_Name FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed
SELECT employee_id FROM Employees as t1 join Documents_to_be_destroyed as t2 on t1.Employee_ID = t2.Destroyed_by_Employee_ID
SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed
SELECT City_ID,Name FROM city
SELECT Name FROM city WHERE county_ID IN ( SELECT county_ID FROM county_public_safety WHERE population > 20000 ) 
SELECT count ( * ) FROM city WHERE county_ID IN ( SELECT county_ID FROM county_public_safety WHERE population > 20000 ) 
SELECT T1.id , count ( * ) FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id GROUP BY T1.id
SELECT count ( * ) FROM GAME
SELECT T1.id , count ( * ) FROM stadium AS T1 JOIN game AS T2 ON T1.id = T2.stadium_id GROUP BY T1.id
SELECT count ( * ) FROM Claims
SELECT T1.Claim_id , count ( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id
SELECT avg ( Date_Claim_Settled - Date_Claim_Made ) from Claims
SELECT T2.settlement_id,T2.amount_claimed,T2.amount_settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id where T1.claim_id = 801
SELECT T1.Claim_id , count ( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id
SELECT count ( * ) FROM customers
SELECT count ( customer_details ) FROM customers WHERE customer_details LIKE "%Diana%"
SELECT customer_details FROM customers WHERE customer_details LIKE "%Diana%"
SELECT customer_details FROM customers WHERE customer_details LIKE "%Diana%"
SELECT Church_id, name FROM church
SELECT T1.name, T1.church_id FROM church AS T1 JOIN wedding AS T2 ON T1.church_id = T2.church_id GROUP BY T1.church_id HAVING count ( * )  > = 2
SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id = T2.church_id GROUP BY T1.church_id HAVING count ( * ) >= 2
SELECT count ( * ) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = "Mary"
SELECT count ( * ) FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = "Susan"
SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = "Mary" OR T1.name = "Susan"
select uid, name from user_profiles where uid in ( SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = "Mary" OR T1.name = "Susan" ) 
SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = "Mary" OR T1.name = "Susan"
SELECT Player_name FROM Player
SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID WHERE T2.Coach_name = "Jameson Tomas"
SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID WHERE T2.Rank = 1
SELECT born_state from head where name = "Sergio García"
SELECT max ( head_ID ) from head
SELECT T1.age from head as T1 Join management as t2 on t1.head_id = t2.head_id
SELECT DISTINCT T1.creation FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T3.born_state = 'Alabama'
SELECT brand FROM camera_lens where id = 2
SELECT DISTINCT ( color ) FROM photos where mountain_id = 20
SELECT focal_length_mm FROM camera_lens where id = 3
SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id = T2.id WHERE T1.mountain_id = 2
SELECT T2.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id = T2.id GROUP BY T2.id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM Financial_transactions
SELECT * from Accounts where account_name = "337"
SELECT count ( * ) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id WHERE T2.account_name = "337"
SELECT count ( * ) FROM Financial_transactions AS T1 JOIN Accounts AS T2 ON T1.account_id = T2.account_id WHERE T2.account_name = "337"
SELECT distinct t3.name FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = "Chiltern"
SELECT t3.name , t3.time FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = "Chiltern"
SELECT t3.name , t3.time,t3.train_number ,t2.train_id FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = "Chiltern"
SELECT t3.name , t3.time FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id JOIN train AS t3 ON t2.train_id = t3.id WHERE t1.local_authority = "Chiltern"
SELECT count ( * ) FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id WHERE T1.customer_details = "Ellsworth Paucek"
SELECT count ( * ) FROM ( SELECT T1.customer_details , T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id GROUP BY T1.customer_id HAVING count ( * ) > 1 ) 
SELECT T1.customer_details , T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id GROUP BY T1.customer_id HAVING count ( * ) > 1
SELECT T1.customer_details , T1.customer_id FROM Customers AS T1 JOIN Customer_Policies AS T2 ON T1.Customer_id = T2.Customer_id GROUP BY T1.customer_id HAVING count ( * ) > 1
SELECT count ( * ) FROM customers
SELECT company FROM customers where company ! = 'NULL'
SELECT total FROM invoices order by total desc limit 1
SELECT count ( * ) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = "Lucas" AND T1.last_name = "Mancini";
SELECT name from aircraft
SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid GROUP BY T1.aid ORDER BY count ( * ) ASC LIMIT 1
SELECT aid from aircraft where name = 'Boeing 727'
SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid GROUP BY T1.aid ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM projects
SELECT name FROM projects
SELECT name from projects WHERE hours =  ( SELECT min ( hours ) FROM projects ) 
SELECT T2.name , T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.hours = ( SELECT min ( hours ) FROM projects ) 
select count ( * ) from airports
select name from airports
select count ( distinct city ) from airports
SELECT count ( * ) FROM ( SELECT city FROM airports GROUP BY city HAVING count ( * ) > 3 ) 
SELECT count ( * ) FROM Lessons
SELECT nickname FROM Staff WHERE staff_id = 3
SELECT middle_name FROM Staff WHERE staff_id = 2
SELECT sum ( lesson_time ) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name = "Janessa" AND T2.last_name = "Sawayn";
SELECT Primary_conference FROM university WHERE School = "Lebanon Valley College"
SELECT Nickname FROM university WHERE School = "University of Rhode Island"
SELECT location FROM university WHERE Nickname = "Fightin Blue Hens"
SELECT school FROM university WHERE founded > 1850 OR affiliation = 'Public'
SELECT school FROM university WHERE founded > 1850 OR affiliation = 'Public'
SELECT count ( * ) FROM musical WHERE Nominee = "Bob Fosse"
SELECT Nominee FROM musical GROUP BY Nominee ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Name FROM journalist WHERE Nationality = "England"
SELECT Name FROM journalist WHERE Nationality = "England" OR Nationality = "Wales"
SELECT count ( * ) FROM journalist WHERE Nationality = "England" OR Nationality = "Wales"
SELECT name FROM journalist WHERE Nationality = "England" OR Nationality = "Wales"
SELECT count ( * ) FROM journalist WHERE Nationality = "England" and years_working > 1
SELECT count ( * ) FROM journalist WHERE Nationality = "Wales" and years_working > 1
SELECT name FROM journalist WHERE Nationality = "Wales" and years_working > 1 UNION SELECT name FROM journalist WHERE Nationality = "England" and years_working > 1
SELECT Name FROM journalist WHERE Nationality = "England" OR Nationality = "Wales"
select count ( * ) from driver
select name from driver
select age from driver where name = "Matthew Ritter"
select home_city from driver where name = "Dan Carter"
SELECT home_city FROM driver WHERE age > 40 GROUP BY home_city HAVING count ( * ) >= 2
SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM perpetrator ) 
select weight from people where name = "John Danks"
select height from people where name = "John Danks"
SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM perpetrator ) 
SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO = T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID = T3.FacID WHERE T1.DName = "Computer Science"
select rank from faculty where lname = "Goodrich"
SELECT T2.Lname FROM DEPARTMENT AS T1 JOIN FACULTY AS T2 ON T1.DNO = T3.DNO JOIN MEMBER_OF AS T3 ON T2.FacID = T3.FacID WHERE T1.DName = "Computer Science"
SELECT count ( * ) FROM employees WHERE first_name LIKE '%M%'
SELECT first_name, last_name FROM employees WHERE first_name LIKE '%M%'
SELECT count ( * ) FROM employees WHERE first_name NOT LIKE '%M%'
SELECT first_name, last_name FROM employees WHERE first_name NOT LIKE '%M%'
SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'
SELECT hire_date FROM employees WHERE first_name NOT LIKE '%M%'
SELECT max ( height ) FROM roller_coaster
select park from roller_coaster where height = ( SELECT max ( height ) FROM roller_coaster ) 
select T2.name from roller_coaster as T1 join country as T2 on T1.country_id = T2.country_id where T1.height = ( SELECT max ( height ) FROM roller_coaster ) 
select T2.name, T2.population from roller_coaster as T1 join country as T2 on T1.country_id = T2.country_id where T1.height = ( SELECT max ( height ) FROM roller_coaster ) 
SELECT T1.Name , T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID ORDER BY T2.Height DESC LIMIT 1
SELECT course_id FROM Courses WHERE course_name = "statistics"
SELECT course_description FROM courses WHERE course_name = "French"
SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.course_name FROM courses AS T1 JOIN student_course_registrations AS T2 ON T1.course_id = T2.course_Id GROUP BY T1.course_id ORDER BY count ( * ) DESC LIMIT 1
SELECT max ( stars ) FROM Rating
SELECT avg ( stars ) FROM Rating
SELECT min ( year ) FROM movie
SELECT T2.title , T1.mID FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY count ( * ) DESC LIMIT 1
SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1
SELECT Sponsor_name FROM player ORDER BY Votes asc LIMIT 1
SELECT Player_name FROM player ORDER BY Votes DESC LIMIT 1
SELECT avg ( balance ) from savings
SELECT custid from savings where balance > ( select avg ( balance ) from savings ) 
SELECT T2.balance, T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T3.balance > ( SELECT avg ( balance ) FROM savings ) 
SELECT T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T3.balance > ( SELECT avg ( balance ) FROM savings ) 
SELECT T3.balance - T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T3.balance > ( SELECT avg ( balance ) FROM savings ) 
SELECT T1.name , T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T3.balance > ( SELECT avg ( balance ) FROM savings ) 
SELECT count ( * ) FROM instructor WHERE dept_name = 'Statistics'
SELECT min ( salary ) FROM instructor WHERE dept_name = 'Statistics'
SELECT name FROM instructor WHERE dept_name = 'Statistics' order by salary asc limit 1
SELECT name FROM instructor WHERE dept_name = 'Statistics' ORDER BY salary LIMIT 1
SELECT distinct product_type_code FROM products GROUP BY product_type_code
SELECT product_type_code , max ( product_price ) , min ( product_price ) FROM products GROUP BY product_type_code
select distinct product_name from products
SELECT product_type_code , max ( product_price ) , min ( product_price ) FROM products GROUP BY product_type_code
SELECT catalog_name FROM catalogs
SELECT date_of_publication FROM catalogs
SELECT t1.catalog_id FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5
SELECT t1.catalog_name , t1.date_of_publication FROM catalogs AS t1 JOIN catalog_structure AS t2 ON t1.catalog_id = t2.catalog_id WHERE catalog_level_number > 5
SELECT sum ( amount_piad ) FROM claim_headers
SELECT avg ( amount_piad ) FROM claim_headers
SELECT sum ( Amount_Claimed ) FROM claim_headers
SELECT date_of_claim from claim_headers order by amount_claimed desc limit 1
SELECT date_of_claim from claim_headers order by amount_claimed limit 1
SELECT sum ( amount_piad ) , avg ( amount_piad ) FROM claim_headers
SELECT salary FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.team_id = "ATL"
SELECT distinct T1.league_id FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.player_id = "bedrost01"
SELECT distinct T1.player_id FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.salary = 545000
SELECT count ( * ) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year = 2000
SELECT name FROM buildings ORDER BY Height DESC LIMIT 1
SELECT stories FROM buildings ORDER BY Height DESC LIMIT 1
SELECT Height FROM buildings ORDER BY Height DESC LIMIT 1
SELECT City FROM buildings ORDER BY Height DESC LIMIT 1
SELECT Stories FROM buildings ORDER BY Height LIMIT 1
SELECT Stories FROM buildings ORDER BY Height DESC LIMIT 1
SELECT count ( * ) FROM PersonFriend where name = 'Alice'
SELECT friend from personfriend where name = "Alice"
SELECT friend from personfriend where name = "Bob"
SELECT gender from person where name = "Zach"
SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Alice' AND T1.gender = 'female'
SELECT Name FROM manager ORDER BY Age DESC LIMIT 1
SELECT Name FROM manager ORDER BY Working_year_starts asc LIMIT 1
SELECT Name FROM manager where level = ( select max ( level ) from manager ) 
SELECT Name FROM manager ORDER BY Age DESC LIMIT 1
SELECT count ( * ) from STUDENT
SELECT count ( T1.stu_fname ) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'A'
SELECT count ( T1.stu_fname ) FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A'
SELECT T1.stu_fname , T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A'
SELECT count ( DISTINCT SCHOOL_CODE ) FROM DEPARTMENT
SELECT * , T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code JOIN department AS T3 ON T2.dept_code = T3.dept_code GROUP BY T3.school_code
SELECT count ( * ) , T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code JOIN department AS T3 ON T2.dept_code = T3.dept_code GROUP BY T3.school_code
SELECT count ( * ) , T3.school_code FROM CLASS AS T1 JOIN course AS T2 ON T1.crs_code = T2.crs_code JOIN department AS T3 ON T2.dept_code = T3.dept_code GROUP BY T3.school_code
SELECT cName FROM College WHERE state = "LA"
SELECT cName FROM College WHERE state = "LA" or state = "AZ"
SELECT avg ( enr ) from college where cName = "ASU" or cName = "LSU"
SELECT cName FROM College WHERE enr < 13000 AND state = "AZ" UNION SELECT cName FROM College WHERE enr > 15000 AND state = "LA"
SELECT City_Town FROM Addresses
SELECT City_Town, State_County FROM Addresses
select store_email_address from Drama_Workshop_Groups
SELECT T1.City_Town , count ( * ) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID GROUP BY T1.City_Town
SELECT count ( * ) FROM Movie
SELECT year FROM Movie order by year limit 1
SELECT year FROM Movie order by year DESC limit 1
SELECT title FROM Movie WHERE YEAR =  ( SELECT max ( YEAR ) FROM Movie ) 
SELECT director FROM Movie WHERE title = "Avatar"
SELECT title FROM Movie WHERE YEAR = ( SELECT max ( YEAR ) FROM Movie ) 
SELECT count ( minister ) FROM party
SELECT minister FROM party WHERE took_office > 1961 OR took_office < 1959
SELECT minister FROM party WHERE took_office < 1959
SELECT minister FROM party WHERE took_office > 1961 OR took_office < 1959
SELECT count ( * ) FROM Flight where destination = "Washington D.C." and arrival_date Like "%04/12/2005%"
SELECT count ( * ) FROM Flight where destination = "Dallas"
SELECT destination FROM Flight GROUP BY destination ORDER BY count ( * ) LIMIT 1
SELECT count ( * ) FROM professor WHERE prof_high_degree = 'Ph.D.' OR prof_high_degree = 'MA'
SELECT emp_num FROM professor WHERE prof_high_degree = 'Ph.D.'
SELECT PROF_OFFICE FROM professor WHERE prof_high_degree = 'MA'
SELECT count ( * ) FROM professor WHERE prof_high_degree = 'Ph.D.' OR prof_high_degree = 'MA'
SELECT T1.salary, T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.distance > 5000 GROUP BY T1.eid ORDER BY count ( * ) ASC LIMIT 1
SELECT T1.salary, T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.distance > 5000 GROUP BY T1.eid ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.salary, T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.distance < 5000 GROUP BY T1.eid ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.name FROM Employee AS T1 JOIN Certificate AS T2 ON T1.eid = T2.eid JOIN Aircraft AS T3 ON T3.aid = T2.aid WHERE T3.distance > 5000 GROUP BY T1.eid ORDER BY count ( * ) DESC LIMIT 1
SELECT Average_Attendance FROM stadium where name = "Cowboys Stadium"
SELECT Total_Attendance FROM stadium where name = "Cowboys Stadium"
SELECT Capacity_Percentage FROM stadium where name = "New Meadowlands Stadium"
SELECT max ( home_games ) , min ( home_games ) , avg ( home_games ) FROM stadium
SELECT T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100
SELECT t2.transaction_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100
SELECT t2.transaction_type_code FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE t2.transaction_id = 2
SELECT T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.share_count > 100
SELECT Location FROM performance
SELECT AVG ( Attendance ) FROM performance
SELECT MAX ( Attendance ) FROM performance
SELECT MIN ( Attendance ) FROM performance
SELECT LOCATION FROM performance GROUP BY LOCATION ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T1.FirstName, T1.lastname, T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId
SELECT T1.FirstName, T1.lastname, T2.billingaddress FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId
SELECT T1.FirstName, T1.lastname, T2.billingcountry FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId
SELECT T1.FirstName, T1.lastname, T2.billingcity FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId
SELECT T2.InvoiceDate FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.FirstName = "Astrid" AND LastName = "Gruber"
SELECT email_address FROM Teachers WHERE first_name = 'Lyla' and middle_name = 'Wilson' and last_name = 'Medhurst'
SELECT email_address FROM Teachers WHERE first_name = 'Sid' and middle_name = 'Tremayne' and last_name = 'Brakus'
SELECT cell_mobile_number FROM Teachers WHERE first_name = 'Trystan' and middle_name = 'Alexane' and last_name = 'Schuster'
SELECT first_name FROM Teachers WHERE email_address LIKE '%man%'
SELECT name FROM track WHERE track_id NOT IN ( SELECT track_id FROM race ) 
SELECT Location, Year_Opened FROM track WHERE track_id NOT IN ( SELECT track_id FROM race ) 
SELECT name FROM track WHERE track_id NOT IN ( SELECT track_id FROM race ) 
SELECT Year FROM Campuses
SELECT County FROM Campuses
SELECT * FROM degrees
SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = t2.campus JOIN degrees AS T3 ON T1.id = t3.campus AND t2.year = t3.year WHERE t2.year = 2001 ORDER BY t3.degrees LIMIT 1
SELECT T2.faculty FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = t2.campus JOIN degrees AS T3 ON T1.id = t3.campus AND t2.year = t3.year WHERE t2.year = 2001 ORDER BY t3.degrees LIMIT 1
SELECT Name FROM people
SELECT Date FROM debate
SELECT Venue FROM debate
SELECT T3.Name , T2.Date , T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID
select pilot_name from pilot where pilot_ID = 1 or pilot_ID = 2
SELECT T2.Pilot_id , COUNT ( * ) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID where T2.pilot_ID = 1 or T2.pilot_id = 2 GROUP BY T2.Pilot_id
SELECT pilot_ID , join_year FROM pilot where pilot_ID = 1 or pilot_id = 2
SELECT pilot_ID , team FROM pilot where pilot_ID = 1 or pilot_id = 2
SELECT T2.Pilot_name , COUNT ( * ) FROM pilot_record AS T1 JOIN pilot AS T2 ON T1.pilot_ID = T2.pilot_ID GROUP BY T2.Pilot_name
SELECT sum ( access_count ) FROM documents GROUP BY document_type_code ORDER BY count ( * ) DESC LIMIT 1
SELECT access_count FROM documents where document_type_code = 'Book'
SELECT access_count FROM documents where document_type_code = 'Paper'
SELECT sum ( access_count ) FROM documents GROUP BY document_type_code ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( fault_log_entry_id ) FROM Fault_Log
select count ( * ) from ( SELECT fault_log_entry_id FROM Fault_Log where fault_log_entry_id in ( select fault_log_entry_id from Fault_Log_Parts )  ) 
SELECT T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * ) asc LIMIT 1
SELECT T1.fault_log_entry_id , T1.fault_description FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * ) asc LIMIT 1
SELECT T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.fault_log_entry_id , T1.fault_description FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.fault_log_entry_id , T1.fault_description , T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.fault_log_entry_id , T1.fault_description , T1.fault_log_entry_datetime FROM Fault_Log AS T1 JOIN Fault_Log_Parts AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * ) DESC LIMIT 1
SELECT school FROM university ORDER BY founded LIMIT 1
SELECT enrollment , primary_conference FROM university ORDER BY founded LIMIT 1
SELECT enrollment , primary_conference FROM university ORDER BY founded LIMIT 1
select count ( * ) from ( SELECT * FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING sum ( T2.amount ) > 5000 ) 
SELECT cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING sum ( T2.amount ) > 5000
SELECT T1.acc_bal FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING sum ( T2.amount ) > 5000
SELECT T1.cust_name , T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING sum ( T2.amount ) > 5000
SELECT login_name FROM students
SELECT password FROM students
SELECT date_of_latest_logon FROM Students WHERE family_name = "Jaskolski" OR family_name = "Langosh"
SELECT avg ( revenue ) FROM manufacturers
SELECT max ( revenue ) FROM manufacturers
SELECT sum ( revenue ) FROM manufacturers
SELECT avg ( revenue ) , max ( revenue ) , sum ( revenue ) FROM manufacturers
SELECT department_id FROM departments where manager_id > = 0 and manager_id < = 100
SELECT department_id FROM departments where manager_id > = 100 and manager_id < = 200
SELECT employee_id FROM employees WHERE department_id IN ( SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200 ) 
SELECT * FROM employees WHERE department_id NOT IN ( SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200 ) 
SELECT * FROM employees WHERE department_id NOT IN ( SELECT department_id FROM departments WHERE manager_id BETWEEN 100 AND 200 ) 
SELECT winery FROM wine WHERE Grape = "Zinfandel"
SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE = T2.GRAPE WHERE T1.Color = "White" GROUP BY T2.Winery ORDER BY count ( * ) DESC LIMIT 3
SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE = T2.GRAPE WHERE T1.Color = "White" GROUP BY T2.Winery ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.Winery FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.GRAPE = T2.GRAPE WHERE T1.Color = "White" GROUP BY T2.Winery ORDER BY count ( * ) DESC LIMIT 3
SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM Project_Staff where role_code = 'researcher'
SELECT staff_id FROM Project_Staff where role_code = 'researcher'
SELECT role_code FROM Project_Staff GROUP BY role_code ORDER BY count ( * ) DESC LIMIT 1
SELECT * FROM department
SELECT t1.dname FROM department AS t1 JOIN dept_locations AS t2 ON t1.dnumber = t2.dnumber WHERE t2.dlocation = 'Houston'
SELECT count ( * ) from student
SELECT count ( * ) from student where sex = "M"
SELECT count ( * ) from student where age = 18
SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID HAVING count ( * ) >= 2
SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN department AS T4 ON T3.dept_code = T4.dept_code GROUP BY T3.dept_code ORDER BY count ( * ) DESC LIMIT 1
SELECT T4.DEPT_ADDRESS FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN department AS T4 ON T3.dept_code = T4.dept_code GROUP BY T3.dept_code ORDER BY count ( * ) DESC LIMIT 1
SELECT T4.EMP_NUM FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN department AS T4 ON T3.dept_code = T4.dept_code GROUP BY T3.dept_code ORDER BY count ( * ) DESC LIMIT 1
SELECT T4.dept_name FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN department AS T4 ON T3.dept_code = T4.dept_code GROUP BY T3.dept_code ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM journalist
SELECT Nationality FROM journalist WHERE Name = "Herbert Swindells"
SELECT age FROM journalist WHERE Name = "George Gilchrist"
SELECT avg ( t1.age ) , avg ( Years_working ) , t2.work_type FROM journalist AS t1 JOIN news_report AS t2 ON t1.journalist_id = t2.journalist_id GROUP BY t2.work_type
SELECT count ( * ) FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = "On Road"
select count ( * ) from ( SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = "On Road" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = "Shipped" ) 
SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = "On Road" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = "Shipped"
SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = "On Road" INTERSECT SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = "Shipped"
SELECT T1.ROM_MiB FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T2.Company_name = "Nokia Corporation" order by T1.ROM_MiB desc limit 1
SELECT T1.ROM_MiB FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T2.Company_name = "Nokia Corporation" order by T1.ROM_MiB limit 1
SELECT avg ( T1.ROM_MiB ) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T2.Company_name = "Nokia Corporation"
SELECT avg ( T1.ROM_MiB ) FROM chip_model AS T1 JOIN phone AS T2 ON T1.Model_name = T2.chip_model WHERE T2.Company_name = "Nokia Corporation";
SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Kayaking'
SELECT activity_name FROM Activity WHERE actid = 770
SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Canoeing' INTERSECT SELECT T1.stuid FROM participates_in AS T1 JOIN activity AS T2 ON T2.actid = T2.actid WHERE T2.activity_name = 'Kayaking'
SELECT t2.characteristic_id FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id WHERE t1.product_name = "sesame"
SELECT count ( * ) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id WHERE t1.product_name = "sesame"
select product_category_code from Products where product_name = 'sesame'
SELECT t2.product_characteristic_value FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id WHERE t1.product_name = "sesame"
SELECT count ( * ) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id WHERE t1.product_name = "sesame"
SELECT sum ( followers ) FROM user_profiles
SELECT min ( followers ) FROM user_profiles
select name from user_profiles where followers = ( SELECT max ( followers ) FROM user_profiles ) 
SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1
SELECT product_id from Product_Suppliers where supplier_id = 2
SELECT avg ( product_price ) from products
SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 2 AND T2.product_price > ( SELECT avg ( product_price ) FROM products ) 
SELECT product_price from products where product_id = 8
SELECT product_price from products where product_id = 15
SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 2 AND T2.product_price > ( SELECT avg ( product_price ) FROM products ) 
SELECT sent_date FROM Documents where document_type_code = "APP"
SELECT count ( grant_id ) FROM Documents where document_type_code = "APP"
SELECT max ( grant_id ) FROM Documents where document_type_code = "APP"
SELECT grant_id FROM Documents where document_type_code = "APP"
SELECT grant_id , count ( * ) FROM Documents GROUP BY grant_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code JOIN department AS T5 ON T5.dept_code = T4.dept_code WHERE T5.dept_name = 'Accounting'
SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code JOIN department AS T5 ON T5.dept_code = T4.dept_code WHERE T5.dept_name = 'Computer Info. Systems'
SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code JOIN department AS T5 ON T5.dept_code = T4.dept_code WHERE T5.dept_name = 'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code JOIN department AS T5 ON T5.dept_code = T4.dept_code WHERE T5.dept_name = 'Computer Info. Systems'
SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code JOIN department AS T5 ON T5.dept_code = T4.dept_code WHERE T5.dept_name = 'Accounting' INTERSECT SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code JOIN department AS T5 ON T5.dept_code = T4.dept_code WHERE T5.dept_name = 'Computer Info. Systems'
SELECT T1.stu_fname , T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'A'
SELECT T1.stu_fname , T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C'
SELECT t1.stu_num FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C'
SELECT t2.class_code FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C'
SELECT stu_class, stu_GPA FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C'
SELECT T1.stu_fname , T1.stu_lname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num WHERE T2.enroll_grade = 'C' OR T2.enroll_grade = 'A'
SELECT T1.start_year FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.name = "IFG"
SELECT DISTINCT T1.start_year FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.name = "AIB"
SELECT t2.position FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T2.name = "Michael Platt"
SELECT avg ( T2.Points ) FROM club AS T1 JOIN player AS T2 ON T1.Club_ID = T2.Club_ID WHERE T1.name = "AIB"
SELECT organisation_type FROM organisation_Types
SELECT organisation_id FROM Organisations where organisation_details = 'quo'
SELECT T1.organisation_type FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type = T2.organisation_type WHERE T2.organisation_details = 'quo'
SELECT count ( * ) FROM Organisations where organisation_type = 'RES'
SELECT T1.organisation_type_description FROM organisation_Types AS T1 JOIN Organisations AS T2 ON T1.organisation_type = T2.organisation_type WHERE T2.organisation_details = 'quo'
SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid ORDER BY sum ( hours_played ) DESC LIMIT 1
SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid ORDER BY sum ( hours_played ) ASC LIMIT 1
SELECT count ( * ) FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid WHERE GName = 'The Vanishing of Eric Calder'
SELECT gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid GROUP BY T1.gameid ORDER BY sum ( hours_played ) DESC LIMIT 1
SELECT school_name FROM school ORDER BY enrollment desc limit 1
SELECT school_name FROM school order by Enrollment desc limit 1
SELECT school_name FROM school ORDER BY enrollment LIMIT 1
SELECT nationality FROM swimmer GROUP BY nationality HAVING count ( * ) > 2
SELECT name FROM swimmer where id = 5
SELECT Nationality FROM swimmer where name = "craif colbertaldo"
SELECT count ( ID ) FROM swimmer
SELECT name FROM swimmer where id = 4
SELECT nationality , count ( * ) FROM swimmer GROUP BY nationality HAVING count ( * ) > 1
SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.first_name = "Fanny"
SELECT date_left_university FROM Students WHERE first_name = "Fanny"
SELECT cell_mobile_number FROM Students WHERE first_name = "Fanny"
SELECT T1.date_of_notes FROM Assessment_Notes AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.first_name = "Fanny"
SELECT name FROM web_client_accelerator WHERE client = 'user'
SELECT name FROM web_client_accelerator WHERE client = 'user' and name LIKE "%Opera%"
SELECT Operating_system FROM web_client_accelerator WHERE client = 'End user, ISP'
SELECT name FROM web_client_accelerator WHERE name LIKE "%Opera%"
SELECT COUNT ( * ) FROM Courses
SELECT COUNT ( DISTINCT author_id ) FROM Course_Authors_and_Tutors
SELECT T1.personal_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T1.family_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T1.personal_name , T1.family_name , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT count ( * ) from all_documents where document_name = "Robin CV"
SELECT document_id from all_documents where document_name = "Robin CV"
SELECT T2.Date_in_Location_From from all_documents as T1 join Document_Locations as T2 on T1.document_id = T2.document_id where T1.document_name = "Robin CV"
SELECT T2.Date_in_Locaton_To from all_documents as T1 join Document_Locations as T2 on T1.document_id = T2.document_id where T1.document_name = "Robin CV"
SELECT T1.date_in_location_from , T1.date_in_locaton_to FROM Document_locations AS T1 JOIN All_documents AS T2 ON T1.document_id = T2.document_id WHERE T2.document_name = "Robin CV"
SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT ( * ) > = 2
SELECT Product_Name FROM Products ORDER BY Product_Price DESC LIMIT 1
SELECT Product_Name FROM Products WHERE Product_Price > 3000
SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code HAVING COUNT ( * ) >= 2
SELECT count ( * ) FROM Transactions Where share_count < 50
SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id = T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id = T3.transaction_id WHERE T3.share_count < 50
SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id = T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id = T3.transaction_id WHERE T3.share_count < 50
SELECT cmi_cross_ref_id FROM CMI_Cross_References
SELECT master_customer_id FROM CMI_Cross_References
SELECT source_system_code FROM CMI_Cross_References
SELECT T1.cmi_cross_ref_id , T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Council_Tax AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id GROUP BY T1.cmi_cross_ref_id HAVING count ( * ) >= 1
SELECT Grade FROM list
SELECT FirstName FROM list WHERE FirstName LIKE "J%"
SELECT LastName FROM list WHERE LastName LIKE "J%"
SELECT Classroom FROM teachers
SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = "GELL" AND T1.lastname = "TAMI"
SELECT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname = "GELL" AND T1.lastname = "TAMI"
SELECT T1.customer_name , T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id = T2.customer_id
SELECT T1.customer_name , T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id = T2.customer_id where T2.outcome_code = "No Response"
SELECT T1.customer_phone, T1.customer_email FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id = T2.customer_id where T2.outcome_code = "No Response"
SELECT T1.customer_name , T1.customer_phone FROM customers AS T1 JOIN mailshot_customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.outcome_code = 'No Response'
SELECT name FROM department
SELECT name FROM department GROUP BY departmentID ORDER BY count ( departmentID ) DESC LIMIT 1
SELECT head FROM department where name = "Psychiatry"
SELECT head FROM department where name = "Surgery"
SELECT head FROM department where name = "General Medicine"
SELECT name FROM department GROUP BY departmentID ORDER BY count ( departmentID ) DESC LIMIT 1;
SELECT ClubDesc FROM club where ClubID = 1
SELECT city_code FROM Student where StuID = 1001
SELECT count ( DISTINCT t1.clubname ) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.fname = "Eric" AND t3.lname = "Tai"
SELECT count ( DISTINCT t1.clubname ) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.fname = "Eric" AND t3.lname = "Tai"
SELECT customer_id FROM customers where customer_name = "Savannah"
SELECT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE t1.customer_name = "Alberto"
SELECT customer_details FROM customers WHERE customer_id = "2"
SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = "On Road"
SELECT DISTINCT T1.customer_details FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = "On Road"
SELECT count ( * ) FROM STUDENT
SELECT LName, Fname FROM STUDENT
SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'
SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'
SELECT T2.Height FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID
SELECT T1.Total FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID
SELECT T2.Height FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Total < 315
SELECT T2.Height FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Total < 315
SELECT COUNT ( DISTINCT mID ) FROM Rating
SELECT COUNT ( * ) FROM Reviewer
SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T2.name = "Brittany Harris"
SELECT mID FROM Rating EXCEPT SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T2.name = "Brittany Harris"
select count ( * ) from school where location = "Walkerton"
SELECT count ( DISTINCT T1.donator_name ) FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T2.school_name = "Glenn"
SELECT count ( DISTINCT T1.donator_name ) FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T2.school_name = "Glenn"
SELECT count ( * ) FROM TRANSACTIONS WHERE transaction_type_code = "PUR"
SELECT count ( * ) FROM TRANSACTIONS WHERE share_count >50
SELECT min ( amount_of_transaction ) FROM TRANSACTIONS WHERE transaction_type_code = "PUR" AND share_count > 50
SELECT count ( * ) FROM TRANSACTIONS WHERE transaction_type_code = "PUR" AND share_count > 50
SELECT min ( amount_of_transaction ) FROM TRANSACTIONS WHERE transaction_type_code = "PUR" AND share_count > 50
SELECT first_name FROM Maintenance_Engineers
SELECT T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id
SELECT other_details from Maintenance_Engineers
SELECT last_name from Maintenance_Engineers
SELECT T1.first_name , T1.last_name , T1.other_details , T3.skill_description FROM Maintenance_Engineers AS T1 JOIN Engineer_Skills AS T2 ON T1.engineer_id = T2.engineer_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id
SELECT count ( * ) from representative where party = "Republican"
SELECT count ( * ) from representative where party = "Democratic"
SELECT representative_id from election order by votes asc limit 1
SELECT party from representative where representative_id = ( SELECT representative_id from election order by votes asc limit 1 ) 
SELECT T2.Party FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID ORDER BY votes ASC LIMIT 1
SELECT Major , count ( * ) FROM Student GROUP BY Major HAVING count ( Major ) BETWEEN 2 AND 30
SELECT Major , Fname FROM Student where major = ( select major from student group by major order by count ( * ) desc limit 1 ) 
SELECT Major , Fname FROM Student where major = ( select major from student group by major order by count ( * ) asc limit 1 ) 
SELECT Major , count ( * ) FROM Student GROUP BY Major HAVING count ( Major ) BETWEEN 2 AND 30;
SELECT count ( T2.song_name ) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T2.resolution < 800
SELECT T1.file_size FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T2.resolution < 800
SELECT T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T2.resolution < 800
SELECT DISTINCT T1.file_size , T1.formats FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T2.resolution < 800
SELECT sum ( city_population ) FROM district ORDER BY city_area DESC LIMIT 3
SELECT District_name FROM district where City_Population = ( select max ( City_Population ) from district ) 
SELECT City_Population, City_Area FROM district where City_Population = ( select max ( City_Population ) from district ) 
SELECT sum ( city_population ) FROM district ORDER BY city_area DESC LIMIT 3
SELECT dept_name from department
SELECT T2.dept_name, count ( * ) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code group by T1.dept_code
SELECT T2.dept_name , T2.dept_address , count ( * ) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count ( * ) DESC LIMIT 3
SELECT T2.dept_name , T2.dept_address , count ( * ) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count ( * ) DESC LIMIT 3
SELECT salary FROM salary WHERE YEAR = 2001 ORDER BY salary DESC LIMIT 3
SELECT salary FROM salary WHERE YEAR = 2001 and team_id = "ATL" ORDER BY salary DESC LIMIT 3
SELECT salary FROM salary WHERE YEAR = 2001 and league_id = "NL" ORDER BY salary DESC LIMIT 3
SELECT salary FROM salary WHERE YEAR = 2001 and league_id = "AL" ORDER BY salary DESC LIMIT 3
SELECT salary FROM salary WHERE YEAR = 2001 ORDER BY salary DESC LIMIT 3;
SELECT count ( * ) FROM Apartments
SELECT count ( * ) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2
SELECT T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2
SELECT T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 2
SELECT count ( * ) FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id order by count ( * ) desc limit 1
select count ( * ) from ( SELECT * FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id having count ( * ) = 5 ) 
SELECT T1.registration_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT ( * )  = 5
SELECT student_id FROM Student_Course_Enrolment where registration_id = 19
SELECT personal_name FROM Students where student_id = 15
SELECT T1.student_id , T2.personal_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT ( * ) >= 2
SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = "AC/DC"
SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = "Aerosmith"
SELECT Title FROM ALBUM where ArtistId = 4
SELECT Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = "AC/DC"
SELECT T1.Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistID where T1.AlbumId = 1
SELECT Name FROM ARTIST where ArtistId = 3
SELECT Name FROM ARTIST
SELECT T2.Name , T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT ( * )  > = 3 ORDER BY T2.Name
SELECT T2.Name , T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistID GROUP BY T1.ArtistId HAVING COUNT ( * ) >= 3 ORDER BY T2.Name
SELECT Policy_ID FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t2.customer_details = "Dayana Robel"
SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t2.customer_details = "Dayana Robel"
SELECT Start_Date FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t2.customer_details = "Dayana Robel"
SELECT End_Date FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t2.customer_details = "Dayana Robel"
SELECT policy_type_code FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t2.customer_details = "Dayana Robel"
SELECT booking_made_date FROM services AS t1 JOIN party_services AS t2 ON t1.service_id = t2.service_id where t1.service_id = "1"
SELECT service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id = t2.service_id where t2.booking_id = "2"
SELECT service_descriptio FROM services where service_type_code = "Welfare"
SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id = t2.service_id
SELECT service_name FROM services EXCEPT SELECT t1.service_name FROM services AS t1 JOIN party_services AS t2 ON t1.service_id = t2.service_id
SELECT count ( * ) from customers
SELECT customer_id, count ( * ) from orders group by customer_id
SELECT T2.order_id , T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = "Jeramie"
SELECT T2.order_id , T2.order_status FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.customer_name = "Jeramie"
SELECT name FROM Reviewer
SELECT count ( T2.rID ) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars > 3
SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars > 3
SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T1.stars > 3
Select donator_name from endowment where amount > 8.5
SELECT T2.School_id FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T1.amount > 8.5 GROUP BY T1.school_id HAVING count ( * ) > 1
SELECT T2.School_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T1.amount > 8.5 GROUP BY T1.school_id HAVING count ( * ) > 1
SELECT T2.School_name FROM endowment AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id WHERE T1.amount > 8.5 GROUP BY T1.school_id HAVING count ( * ) > 1
SELECT max ( booked_amount ) FROM products_booked
SELECT min ( booked_count ) FROM products_booked
SELECT max ( booked_count ) FROM products_booked
SELECT min ( booked_amount ) FROM products_booked
SELECT max ( booked_count ) , min ( booked_count ) , avg ( booked_count ) FROM products_booked
SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID ORDER BY T2.Height desc limit 1
select height from people where name = 'Nadia Caba Rodríguez'
SELECT t2.name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID ORDER BY T2.Height
SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID ORDER BY T2.Height ASC
SELECT classroom FROM list GROUP BY classroom ORDER BY count ( * ) DESC LIMIT 1
SELECT classroom, grade FROM list GROUP BY classroom ORDER BY count ( * ) DESC LIMIT 1
SELECT FirstName FROM list where firstName like " S%" and classroom in ( SELECT classroom FROM list GROUP BY classroom ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT classroom FROM list GROUP BY classroom ORDER BY count ( * ) DESC LIMIT 1
SELECT Customer_ID FROM customers where Customer_name = 'America Jaskolski'
SELECT count ( * ) FROM customers AS t1
SELECT Date_Opened FROM Customers_Policies where Customer_ID = 214
SELECT count ( * ) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = "Dayana Robel"
SELECT name from tourist_attractions
SELECT name from tourist_attractions where how_to_get_there = "bus"
SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = "254 Ottilie Junction"
SELECT T1.location_Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T2.how_to_get_there = "bus"
SELECT T1.address FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T2.how_to_get_there = "bus"
SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = "254 Ottilie Junction" OR T2.How_to_Get_There = "bus"
SELECT student_capacity from dorm where dorm_name = "Smith Hall"
SELECT count ( * ) from dorm where gender = "F"
SELECT amenity_name from dorm_amenity
SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid = T1.amenid JOIN dorm AS T3 ON T2.dormid = T3.dormid WHERE T3.dorm_name = 'Anonymous Donor Hall' ORDER BY T1.amenity_name
SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T2.amenid = T1.amenid JOIN dorm AS T3 ON T2.dormid = T3.dormid WHERE T3.dorm_name = 'Anonymous Donor Hall' ORDER BY T1.amenity_name
SELECT fname , lname FROM student
SELECT Age FROM student
SELECT fname , lname FROM student WHERE age < ( SELECT avg ( age ) FROM student ) 
SELECT fname , lname FROM student WHERE age < ( SELECT avg ( age ) FROM student ) 
SELECT count ( * ) FROM Projects
SELECT count ( project_id ) FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code = 'researcher' ) 
SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code = 'researcher' ) 
SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code = 'researcher' ) 
SELECT count ( * ) FROM user_profiles WHERE UID NOT IN ( SELECT UID FROM tweets ) 
SELECT avg ( followers ) FROM user_profiles
SELECT avg ( followers ) FROM user_profiles WHERE UID IN ( SELECT UID FROM tweets ) 
SELECT avg ( followers ) FROM user_profiles WHERE UID NOT IN ( SELECT UID FROM tweets ) 
SELECT avg ( followers ) FROM user_profiles WHERE UID NOT IN ( SELECT UID FROM tweets ) 
SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T3.balance < T2.balance
SELECT T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T1.name = "Weeks"
SELECT custid FROM accounts where name = "Weeks"
SELECT T1.name , T3.balance + T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T3.balance < T2.balance
SELECT Name FROM Scientists
SELECT T1.Name , T3.Name FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code
SELECT T1.Name , T3.Name , T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name , T1.Name
SELECT T1.Name , T3.Name , T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name , T1.Name
SELECT avg ( Hours ) FROM Projects
SELECT T1.Name , T3.Name , T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name , T1.Name
SELECT count ( * ) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN department AS T4 ON T3.dept_code = T4.dept_code WHERE T4.dept_name = 'Accounting'
SELECT T2.STU_NUM FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN department AS T4 ON T3.dept_code = T4.dept_code WHERE T4.dept_name = 'Accounting'
SELECT T3.CRS_CODE FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN department AS T4 ON T3.dept_code = T4.dept_code WHERE T4.dept_name = 'Accounting'
SELECT CLASS_TIME from CLASS where CRS_CODE = "ACCT-211"
SELECT count ( * ) FROM CLASS AS T1 JOIN enroll AS T2 ON T1.class_code = T2.class_code JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN department AS T4 ON T3.dept_code = T4.dept_code WHERE T4.dept_name = 'Accounting'
SELECT * FROM employees order by salary desc limit 1
SELECT * FROM employees order by salary limit 1
SELECT job_title , AVG ( salary ) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title
SELECT Issue_Date FROM volume WHERE Song LIKE "%The Way%"
SELECT volume_Issue FROM volume WHERE Song LIKE "%The Way%"
SELECT artist_id FROM volume WHERE Song LIKE "%Everybody Have Fun Tonight%"
SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1
SELECT Issue_Date FROM volume ORDER BY Weeks_on_Top ASC LIMIT 1
SELECT count ( country ) from artist
SELECT artist_name from song group by artist_name order by count ( * ) limit 1
SELECT country from artist where artist_name = 'Enrique'
SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name GROUP BY T2.artist_name ORDER BY count ( * ) LIMIT 1
select name from browser
SELECT T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id = T3.id WHERE T3.name = 'CProxy' AND T2.compatible_since_year > 1998
SELECT T1.id FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id = T3.id WHERE T1.name = "Opera"
SELECT T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id JOIN web_client_accelerator AS T3 ON T2.accelerator_id = T3.id WHERE T3.name = 'CProxy' AND T2.compatible_since_year > 1998
SELECT campus from campuses where campus like "%California State University%" and county = "Kern"
SELECT year from campuses where campus = "California State University-Chico"
SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = T2.campus where T2.faculty = ( select min ( faculty ) from faculty ) 
SELECT campus from campuses where year = 2002
SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = T2.campus WHERE T2.year = 2002 AND faculty > ( SELECT max ( faculty ) FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = T2.campus WHERE T2.year = 2002 AND T1.county = "Orange" ) 
SELECT staff_first_name , staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1
SELECT staff_first_name , staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1
SELECT DISTINCT staff_first_name , staff_last_name FROM staff AS T1 JOIN problem_log AS T2 ON T1.staff_id = T2.assigned_to_staff_id WHERE T2.problem_id = 1
SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count ( * ) LIMIT 1
SELECT T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count ( * ) LIMIT 1
SELECT count ( * ) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count ( * ) limit 1
SELECT count ( * ) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 and T1.surname = 'Hamilton' GROUP BY T1.driverid
SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid WHERE T3.year > 2010 GROUP BY T1.driverid ORDER BY count ( * ) DESC LIMIT 1
select * from wedding where year > 2014
SELECT T2.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id = T2.people_id WHERE T1.year > 2014
SELECT T3.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id = T2.people_id JOIN people AS T3 ON T1.female_id = T3.people_id WHERE T1.year > 2014
SELECT T2.name , T3.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id = T2.people_id JOIN people AS T3 ON T1.female_id = T3.people_id WHERE T1.year > 2014
SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT ( * ) > 1
SELECT Publisher FROM publication
SELECT Price FROM publication order by Price DESC limit 1
SELECT Price FROM publication order by Price limit 1
SELECT Publisher FROM publication GROUP BY Publisher HAVING COUNT ( * ) > 1
SELECT Company FROM entrepreneur
SELECT * FROM entrepreneur
SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Height DESC LIMIT 1
SELECT T1.Company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Height DESC LIMIT 1
SELECT count ( * ) FROM participants
SELECT count ( DISTINCT event_id ) FROM participants_in_events
SELECT T2.event_id FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'
SELECT T2.event_id, T1.Participant_Details FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID
SELECT count ( * ) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'
SELECT T2.name , T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id
SELECT Total_Passengers FROM station
SELECT Main_Services FROM station
SELECT T2.name , T3.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id JOIN train AS T3 ON T3.train_id = T1.train_id
SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games
SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games
SELECT artist_name FROM artist
SELECT artist_name FROM artist WHERE country = "UK" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name
SELECT artist_name FROM artist WHERE country = "UK" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = "english"
SELECT count ( * ) FROM trip WHERE start_date LIKE "8/%"
SELECT count ( distinct start_station_name ) FROM trip WHERE start_date LIKE "8/%"
SELECT count ( * ) FROM trip WHERE start_station_name = ( SELECT start_station_name FROM trip WHERE start_date LIKE "8/%" GROUP BY start_station_name ORDER BY COUNT ( * ) DESC LIMIT 1 ) 
SELECT distinct start_station_name , start_station_id FROM trip WHERE start_station_name = 'San Francisco Caltrain 2 ( 330 Townsend ) '
SELECT start_station_name , start_station_id FROM trip WHERE start_date LIKE "8/%" GROUP BY start_station_name ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT DISTINCT product_name FROM Products
SELECT DISTINCT product_type_code FROM Products
SELECT product_type_code FROM products GROUP BY product_type_code HAVING count ( * )  > = 2
SELECT product_type_code FROM products GROUP BY product_type_code HAVING count ( * ) >= 2
SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count ( * ) > 2
SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count ( * ) > 2 and count ( * ) < 4
SELECT count ( * ) FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id where T1.state_province_county = "Connecticut"
SELECT T2.first_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id where T1.state_province_county = "Connecticut"
SELECT nickname FROM staff where first_name = "Janessa"
SELECT T2.first_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id where T1.state_province_county = "Connecticut" order by date_joined_staff asc limit 1
SELECT T1.state_province_county FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id GROUP BY T1.state_province_county HAVING count ( * ) BETWEEN 2 AND 4;
SELECT country FROM airlines
SELECT country FROM airlines WHERE active = 'Y' GROUP BY country ORDER BY count ( * ) DESC LIMIT 1
SELECT COUNT ( * ) FROM airlines WHERE active = 'Y' AND country = "United States"
SELECT country FROM airlines WHERE active = 'Y' GROUP BY country ORDER BY count ( * ) DESC LIMIT 1
SELECT * FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = "Rock"
SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = "Rock" OR T3.name = "MPEG audio file"
SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = "Rock" OR T3.name = "MPEG audio file"
SELECT count ( distinct T2.media_type_id ) FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = "Rock"
SELECT * FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = "Rock" group by T3.id ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id JOIN media_types AS T3 ON T3.id = T2.media_type_id WHERE T1.name = "Rock" OR T3.name = "MPEG audio file";
SELECT i_id, title FROM item
SELECT T1.title, T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rank > 3
SELECT T1.title, T1.i_id, rating FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rank > 3
SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rank > 3 INTERSECT SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id HAVING avg ( T2.rating ) > 5
SELECT T1.name , T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes'
SELECT Budget_in_Billions FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes'
SELECT Creation, Name FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes'
SELECT count ( * ) from management WHERE temporary_acting = 'No'
SELECT T1.name , T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes'
SELECT T1.vehicle_id , T2.staff_id FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id = T2.vehicle_id
SELECT vehicle_details FROM Vehicles WHERE vehicle_id = "1" or vehicle_id = "2"
SELECT price FROM lessons WHERE vehicle_id = "2"
SELECT T1.vehicle_id , T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id = T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.vehicle_id , T1.vehicle_details FROM Vehicles AS T1 JOIN Lessons AS T2 ON T1.vehicle_id = T2.vehicle_id GROUP BY T1.vehicle_id ORDER BY count ( * ) DESC LIMIT 1
SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t1.fname = "Katsuhiro" AND t1.lname = "Ueno"
select authID from Authors where fname = 'Katsuhiro' and lname = 'Ueno'
select country from Inst where name = 'Tohoku University'
select count ( * ) from Inst AS T1 JOIN Authorship AS T2 ON T1.instID = T2.instID WHERE Inst.name = 'Tohoku University'
select instID from Inst where name = 'Tohoku University'
SELECT DISTINCT t3.name FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t1.fname = "Katsuhiro" AND t1.lname = "Ueno"
SELECT dept_name FROM department
SELECT * FROM course WHERE crs_description LIKE '%Statistics%'
SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T1.crs_description LIKE '%Statistics%'
SELECT CRS_CREDIT FROM course WHERE CRS_CODE in ( SELECT T1.CRS_CODE FROM course AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T2.dept_name = "Computer Info. Systems" ) 
SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T1.crs_description LIKE '%Statistics%'
select name,lat from station
SELECT T1.name , T1.lat , min ( T2.duration ) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.end_station_id GROUP BY T2.end_station_id
select name, installation_date from station
SELECT T1.name , T1.lat , min ( T2.duration ) FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.end_station_id GROUP BY T2.end_station_id
SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Success'
SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Fail'
SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Success' INTERSECT SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Fail'
SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Success' INTERSECT SELECT T1.service_type_code FROM services AS T1 JOIN EVENTS AS T2 ON T1.service_id = T2.service_id WHERE T2.event_details = 'Fail'
SELECT student_id FROM Students WHERE first_name = "Emma"
SELECT last_name FROM Students WHERE first_name = "Emma"
SELECT email_address FROM Students WHERE first_name = "Emma"
SELECT email_address FROM Students WHERE first_name = "Emma" AND last_name = "Rohan"
SELECT T1.engineer_id , T1.first_name , T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 on T1.engineer_id = T2.engineer_id GROUP BY T1.engineer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.fault_status FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 on T1.engineer_id = T2.engineer_id where T1.first_name = "Etha"
SELECT T2.visit_start_datetime FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 on T1.engineer_id = T2.engineer_id where T1.first_name = "Etha"
SELECT T2.visit_end_datetime FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 on T1.engineer_id = T2.engineer_id where T1.first_name = "Etha"
SELECT T1.engineer_id , T1.first_name , T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT name FROM user_profiles
SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1
SELECT email FROM user_profiles ORDER BY followers DESC LIMIT 1
SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = "Mary" INTERSECT SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = "Susan"
SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = "Mary" INTERSECT SELECT T2.f1 FROM user_profiles AS T1 JOIN follows AS T2 ON T1.uid = T2.f2 WHERE T1.name = "Susan"
SELECT COUNT ( * ) FROM CUSTOMER
SELECT Company FROM CUSTOMER group by Company order by count ( * ) desc limit 1
SELECT COUNT ( * ) FROM CUSTOMER WHERE Email LIKE "%gmail.com%"
SELECT COUNT ( * ) FROM CUSTOMER WHERE Email LIKE "%gmail.com%"
SELECT T1.Gymnast_ID, T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID
SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT ( * ) DESC LIMIT 1
select name from people where hometown = "Santo Domingo"
SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT pPos FROM tryout GROUP BY pPos ORDER BY count ( * ) DESC LIMIT 1
SELECT cName FROM tryout where pPos = ( SELECT pPos FROM tryout GROUP BY pPos ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT decision FROM tryout where pPos = ( SELECT pPos FROM tryout GROUP BY pPos ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT pPos FROM tryout where pPos ! = "goalie"
SELECT cName FROM tryout where pPos ! = "goalie"
SELECT pPos FROM tryout GROUP BY pPos ORDER BY count ( * ) DESC LIMIT 1
SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.name ORDER BY count ( * ) DESC LIMIT 1
select country from Inst where name = 'University of Oxford'
select instID from Inst where name = 'University of Oxford'
select distinct T1.paperID from Papers AS T1 JOIN Authorship AS T2 JOIN Inst AS T3 where T3.name = 'University of Oxford'
select title from Papers where paperID = '200'
SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.name ORDER BY count ( * ) DESC LIMIT 1
SELECT name FROM airports ORDER BY elevation LIMIT 1
SELECT city FROM airports ORDER BY elevation LIMIT 1
SELECT country FROM airports ORDER BY elevation LIMIT 1
SELECT elevation FROM airports where name = "Bar Yehuda Airfield"
SELECT name , city , country FROM airports ORDER BY elevation LIMIT 1
SELECT T2.Hometown FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown
SELECT COUNT ( * ) FROM gymnast
SELECT age FROM people WHERE name = "Paul Hamm"
SELECT T2.Hometown , COUNT ( * ) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID GROUP BY T2.Hometown
SELECT first_name , last_name FROM employees WHERE first_name LIKE '%m'
SELECT first_name ,HIRE_DATE FROM employees WHERE first_name LIKE '%m'
SELECT COMMISSION_PCT FROM employees WHERE first_name LIKE '%m'
SELECT FIRST_NAME, LAST_NAME FROM employees order by COMMISSION_PCT desc limit 1
SELECT HIRE_DATE FROM employees order by COMMISSION_PCT asc limit 1
SELECT first_name , last_name , salary FROM employees WHERE first_name LIKE '%m'
SELECT count ( * ) FROM STUDENTS
SELECT incident_type_code FROM Behavior_Incident where student_id = 1
SELECT recommendations FROM Behavior_Incident
SELECT cell_mobile_number FROM students where student_id = 1
SELECT count ( * ) FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident ) 
SELECT name , num_employees FROM department where name = "Treasury"
SELECT name , num_employees FROM department where name = "Homeland Security"
SELECT T1.name , T1.num_employees FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id WHERE T2.temporary_acting = 'Yes'
SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating ) 
SELECT director from movie where title = "Star Wars"
SELECT title FROM Movie WHERE mID NOT IN ( SELECT mID FROM Rating ) 
SELECT Rank FROM FACULTY WHERE Fname = "Mark"
SELECT COUNT ( * ) FROM FACULTY
SELECT DISTINCT rank FROM FACULTY
SELECT Fname FROM FACULTY WHERE Rank = "Professor" ORDER BY Fname
SELECT count ( * ) FROM STUDENT
SELECT avg ( STU_GPA ) FROM STUDENT
SELECT ENROLL_GRADE FROM ENROLL ORDER BY ENROLL_GRADE ASC LIMIT 1
SELECT T1.stu_fname , T1.stu_lname , T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code
SELECT T1.stu_fname , T1.stu_lname , T4.crs_description FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code JOIN course AS T4 ON T3.crs_code = T4.crs_code
SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count ( * ) LIMIT 1
SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id where T1.customer_status_code = 'Bad Customer' GROUP BY T2.city ORDER BY count ( * ) LIMIT 1
SELECT country from Addresses where city = 'Ericamouth'
SELECT T2.city FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id GROUP BY T2.city ORDER BY count ( * ) DESC LIMIT 1;
SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Brittany Harris'
SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T2.year > 2000
SELECT T1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T2.title = 'Avatar'
SELECT DISTINCT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Brittany Harris' OR T2.year > 2000
SELECT pID FROM Player WHERE pName = "Charles"
SELECT T1.cName FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName JOIN player AS T3 ON T2.pID = T3.pID WHERE T3.pName = 'Charles'
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName JOIN player AS T3 ON T2.pID = T3.pID WHERE T1.cName = 'OU'
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName JOIN player AS T3 ON T2.pID = T3.pID WHERE T3.pName = 'Charles'
SELECT T3.Journal_ID FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T2.Name = "Anna Powierza"
SELECT T1.Work_Type FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T2.Name = "Kamila Porczyk"
SELECT T2.Name FROM journal_committee AS T1 JOIN editor AS T2 ON T1.Editor_ID = T2.Editor_ID JOIN journal AS T3 ON T1.Journal_ID = T3.Journal_ID WHERE T3.Sales > 3000
SELECT T2.Name, T1.Name FROM county_public_safety as T1 join city as T2 on T1.County_ID = T2.County_ID
SELECT T2.Name, T1.Name FROM county_public_safety as T1 join city as T2 on T1.County_ID = T2.County_ID order by Population desc limit 1
SELECT T1.population FROM county_public_safety as T1 join city as T2 on T1.County_ID = T2.County_ID order by Population desc limit 1
SELECT T1.Residents_per_officer FROM county_public_safety as T1 join city as T2 on T1.County_ID = T2.County_ID order by Population desc limit 1
SELECT Name FROM county_public_safety WHERE County_ID NOT IN ( SELECT County_ID FROM city ) 
SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = "Indiana University"
select paperID from papers where title = ( SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = "Indiana University" ) 
select count ( * ) from authorship
SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = "Indiana University"
SELECT capital from country where country_name = "Indonesia"
SELECT capital from country where country_name = "Iran"
SELECT count ( DISTINCT T1.Official_native_language ) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = "Defender"
SELECT count ( DISTINCT T1.Official_native_language ) FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T2.Position = "Defender"
SELECT name FROM ship
SELECT class FROM ship
SELECT name , CLASS FROM ship WHERE ship_id NOT IN ( SELECT ship_id FROM captain ) 
SELECT name , CLASS FROM ship WHERE ship_id NOT IN ( SELECT ship_id FROM captain ) 
SELECT distinct T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title ! = T2.title
SELECT T1.director , T1.title FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title ! = T2.title
SELECT T1.title , T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title ! = T2.title ORDER BY T1.director , T1.title
SELECT T1.title , T1.director, T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title ! = T2.title ORDER BY T1.director , T1.title
SELECT T1.title , T1.director FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title ORDER BY T1.director , T1.title
SELECT count ( * ) FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y'
SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y'
SELECT T2.fname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y'
SELECT T2.major FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y'
SELECT T1.sportname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y'
SELECT T2.Lname FROM Sportsinfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.onscholarship = 'Y'
SELECT open_date FROM church GROUP BY open_date HAVING count ( * )  > = 2
SELECT name FROM church order BY open_date desc limit 1
SELECT open_date FROM church order BY open_date desc limit 1
SELECT open_date FROM church GROUP BY open_date HAVING count ( * ) >= 2
SELECT employer_organisation_id , count ( * ) from Research_Staff group by employer_organisation_id
SELECT organisation_type from Organisations
SELECT staff_id from Research_Staff where employer_organisation_id = 5
SELECT T1.organisation_type , T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.cID, COUNT ( * ) FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID GROUP BY T2.CID
SELECT * FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID GROUP BY T2.CID HAVING COUNT ( * )  > = 5
SELECT T1.cid FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID GROUP BY T2.CID HAVING COUNT ( * )  > = 5
SELECT T1.CName FROM COURSE AS T1 JOIN ENROLLED_IN AS T2 ON T1.CID = T2.CID GROUP BY T2.CID HAVING COUNT ( * ) >= 5
SELECT player_id FROM hall_of_fame
SELECT player_id,inducted FROM hall_of_fame
SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count ( * ) ASC LIMIT 1
SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count ( * ) ASC LIMIT 1;
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Bob'
SELECT * FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Zach'
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Bob' and T1.name ! = "Alice" and T1.name ! = "Zach"
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Bob'
SELECT max ( HS ) FROM Player
SELECT min ( HS ) FROM Player
SELECT avg ( HS ) FROM Player
SELECT pName from player order by HS limit 1
SELECT pName from player order by HS desc limit 1
SELECT avg ( HS ) , max ( HS ) , min ( HS ) FROM Player
SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.name ORDER BY count ( * ) DESC LIMIT 1
SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.name ORDER BY count ( * ) Asc LIMIT 1
SELECT t3.title FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid where t1.name = "Google"
SELECT t1.name FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.name ORDER BY count ( * ) DESC LIMIT 1
SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay = T3.StayID WHERE T3.room = 111
SELECT name FROM patient WHERE InsuranceID = 68476213
SELECT DISTINCT Physician FROM Undergoes WHERE patient = 100000001
SELECT DISTINCT T2.name FROM undergoes AS T1 JOIN patient AS T2 ON T1.patient = T2.SSN JOIN stay AS T3 ON T1.Stay = T3.StayID WHERE T3.room = 111
SELECT address_id FROM Addresses WHERE city = "Damianfort"
SELECT staff_id FROM Staff WHERE staff_address_id = 14
SELECT staff_id,first_name, last_name FROM Staff WHERE staff_address_id = 14
SELECT T2.first_name , T2.last_name FROM Addresses AS T1 JOIN Staff AS T2 ON T1.address_id = T2.staff_address_id WHERE T1.city = "Damianfort";
SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code = T2.Budget_Type_code WHERE T2.budget_type_Description = "Government"
SELECT T1.Document_Details FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code = T2.Budget_Type_code WHERE T2.budget_type_Description = "Government"
SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code = T2.Budget_Type_code WHERE T2.budget_type_Description = "Organisation"
SELECT T2.Budget_Type_Code FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code = T2.Budget_Type_code WHERE T2.budget_type_Description = "Organisation"
SELECT Document_Details FROM Documents_with_expenses order by Document_ID desc limit 1
SELECT T1.document_id FROM Documents_with_expenses AS T1 JOIN Ref_Budget_Codes AS T2 ON T1.Budget_Type_code = T2.Budget_Type_code WHERE T2.budget_type_Description = "Government"
SELECT count ( * ) FROM shop where score > 37
SELECT avg ( num_of_staff ) FROM shop
SELECT avg ( num_of_staff ) , avg ( score ) FROM shop
SELECT count ( * ) FROM party
SELECT Party FROM party
SELECT Party FROM party group by Party having count ( * ) > 1
SELECT Attorney_General FROM party where Party = 'Democratic'
SELECT Party FROM party GROUP BY Party HAVING COUNT ( * ) >= 2
SELECT asset_acquired_date FROM Assets
SELECT asset_acquired_date FROM Assets ORDER BY asset_acquired_date ASC LIMIT 1
SELECT asset_acquired_date FROM Assets ORDER BY asset_acquired_date ASC LIMIT 1
SELECT count ( distinct Nationality ) FROM pilot
SELECT Nationality,Pilot_name FROM pilot
SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Nationality FROM pilot GROUP BY Nationality ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT count ( * ) FROM wrestler
SELECT distinct location FROM wrestler
SELECT wrestler_id FROM wrestler
SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Reign FROM wrestler GROUP BY Reign ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed
SELECT employee_name FROM Employees WHERE employee_id IN ( SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed ) 
SELECT Role_Code FROM Employees WHERE employee_id IN ( SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed ) 
SELECT date_of_birth FROM Employees WHERE employee_id IN ( SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed ) 
SELECT employee_id FROM Employees EXCEPT SELECT Destroyed_by_Employee_ID FROM Documents_to_be_destroyed
select city from person where name = "Alice"
SELECT count ( * ) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Alice' AND T1.gender = 'male'
SELECT job FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Alice' AND T1.gender = 'male'
SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Alice' AND T1.gender = 'male' AND T1.job = 'doctor'
SELECT count ( * ) FROM CLASS
SELECT count ( distinct EMP_NUM ) FROM employee where EMP_JOBCODE = 'PROF'
SELECT count ( * ) FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE T1.EMP_LNAME = 'Graztevski'
SELECT T1.appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T2.price = ( select max ( price ) from wine ) 
SELECT max ( T2.Price ) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = "Sonoma"
SELECT count ( * ) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = "Sonoma"
SELECT min ( T2.Price ) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = "Sonoma"
SELECT AVG ( T2.Price ) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = "Sonoma"
SELECT AVG ( T2.Price ) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = "Sonoma"
SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.Location FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id where T2.Name = 'Auto Club Speedway'
SELECT T2.Location FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id where T2.Name = 'Chicagoland Speedway'
SELECT T2.Seating FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id where T2.Name = 'Chicagoland Speedway'
SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count ( * ) DESC LIMIT 1
SELECT salary FROM salary WHERE YEAR = 2010 UNION SELECT salary FROM salary WHERE YEAR = 2001
SELECT avg ( salary ) FROM salary WHERE YEAR = 2010
SELECT salary FROM salary WHERE YEAR = 2010 UNION SELECT salary FROM salary WHERE YEAR = 2001
SELECT Name from journalist
SELECT T1.Event_ID,T1.Date from event as T1 join news_report as T2 on T1.Event_ID = T2.Event_ID
SELECT T3.Name , T2.Date FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID
SELECT count ( * ) , T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid GROUP BY T3.dorm_name
SELECT avg ( T1.age ) , T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid GROUP BY T3.dorm_name
SELECT avg ( T1.age ) , T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid GROUP BY T3.dorm_name
SELECT t4.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia'
SELECT name FROM swimmer where nationality = 'Australia'
SELECT t4.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id JOIN event AS t3 ON t2.event_id = t3.id JOIN stadium AS t4 ON t4.id = t3.stadium_id WHERE t1.nationality = 'Australia'
SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id HAVING count ( * ) = 2
SELECT T2.Minister FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id HAVING count ( * ) = 2
SELECT T2.Minister FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id HAVING count ( * ) = 1
SELECT party_name FROM party WHERE Region_id = 3
SELECT T2.party_name FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id HAVING count ( * ) >= 2
select name from manufacturers
SELECT T1.Name, T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code
SELECT T1.price FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code
select name from products order by price desc limit 1
SELECT T1.Name , max ( T1.Price ) , T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name
SELECT T1.Name , min ( T1.Price ) , T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name
SELECT T1.Name , max ( T1.Price ) , T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name
SELECT avg ( HS ) FROM player
SELECT pName FROM player where pName like 'A%'
SELECT distinct cName FROM tryout
SELECT avg ( T1.HS ) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'no'
SELECT name FROM projects ORDER BY hours LIMIT 1
SELECT name FROM projects WHERE hours > ( SELECT avg ( hours ) FROM projects ) 
SELECT count ( * ) FROM projects
SELECT name FROM projects ORDER BY hours DESC LIMIT 1
SELECT name FROM projects WHERE hours > ( SELECT avg ( hours ) FROM projects ) 
SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T2.balance DESC LIMIT 1
SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T2.balance LIMIT 1
select balance from CHECKING where custid = '3'
SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T2.balance DESC LIMIT 1
SELECT COUNT ( product_id ) FROM products_for_hire WHERE product_type_code = 'Cutlery'
SELECT COUNT ( product_id ) FROM products_for_hire WHERE daily_hire_cost < 20
SELECT count ( product_id ) FROM products_for_hire WHERE product_type_code = 'Cutlery' AND daily_hire_cost < 20
SELECT product_name , product_description FROM products_for_hire WHERE product_type_code = 'Cutlery' AND daily_hire_cost < 20
SELECT distinct ( Name ) FROM Tourist_Attractions
SELECT * FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = "Vincent"
SELECT * FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = "Vivian"
SELECT Tourist_Details FROM Visitors WHERE Tourist_Details ! = "Vivian" and Tourist_Details! = "Vincent"
SELECT T1.Name , T3.Visit_Date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = "Vincent" OR T2.Tourist_Details = "Vivian"
SELECT Name FROM people WHERE People_id NOT IN ( SELECT Affirmative FROM debate_people ) 
SELECT Party FROM people WHERE People_id NOT IN ( SELECT Affirmative FROM debate_people ) 
SELECT Age FROM people WHERE People_id NOT IN ( SELECT Affirmative FROM debate_people ) 
SELECT Name FROM people WHERE People_id NOT IN ( SELECT Affirmative FROM debate_people ) 
SELECT city FROM airports WHERE country = 'United States' GROUP BY city HAVING count ( * ) > 3
SELECT city FROM airports WHERE country = 'United States' GROUP BY city HAVING count ( * ) > 4
SELECT name FROM airports WHERE country = 'United States' GROUP BY city HAVING count ( * ) > 4
SELECT name FROM airports WHERE elevation > 4000
SELECT name FROM airports WHERE elevation > 5000
SELECT city FROM airports WHERE country = 'United States' GROUP BY city HAVING count ( * ) > 3
SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T1.Title = "Balls to the Wall"
SELECT T1.Title FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T2.Name = "Accept" AND T1.Title ! = "Balls to the Wall"
SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T1.Title = "For Those About To Rock We Salute You"
SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId WHERE T1.Title = "Balls to the Wall"
SELECT title FROM Movie
SELECT title FROM Movie WHERE YEAR < 1980
SELECT title FROM Movie WHERE director = "James Cameron"
SELECT title FROM Movie WHERE director = "James Cameron" OR YEAR < 1980
SELECT Roller_Coaster_ID FROM roller_coaster WHERE LENGTH > 3300
SELECT Roller_Coaster_ID FROM roller_coaster WHERE LENGTH > 3300 and Height > 100
SELECT Roller_Coaster_ID , status FROM roller_coaster WHERE LENGTH > 3300 and Height > 100
SELECT Roller_Coaster_ID , status, Speed FROM roller_coaster WHERE LENGTH > 3300 and Height > 100
SELECT Status FROM roller_coaster WHERE LENGTH > 3300 OR Height > 100
SELECT shipping_agent_code FROM Ref_Shipping_Agents
SELECT shipping_agent_code, count ( * ) FROM Documents group by shipping_agent_code
SELECT T1.shipping_agent_code, T1.shipping_agent_name, count ( * ) FROM Ref_Shipping_Agents AS T1 JOIN Documents AS T2 ON T2.shipping_agent_code = T1.shipping_agent_code group by T2.shipping_agent_code
SELECT count ( * ) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code WHERE Ref_Shipping_Agents.shipping_agent_name = "USPS";
SELECT t1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY t2.Host_City HAVING count ( * ) > 1
SELECT distinct t1.gdp , t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city where t1.city = 'Nanjing ( Jiangsu ) '
SELECT t1.city ,t1.Hanzi FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city where t2.year = 2011
SELECT t1.gdp , t1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city GROUP BY t2.Host_City HAVING count ( * ) > 1
select count ( employee_id ) from employees
SELECT count ( Destruction_Authorised_by_Employee_ID ) FROM Documents_to_be_destroyed
SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed
SELECT sum ( employee_id ) FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed
SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed
SELECT employee_id FROM Employees EXCEPT SELECT Destruction_Authorised_by_Employee_ID FROM Documents_to_be_destroyed
SELECT avg ( T1.stars ) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY avg ( T1.stars ) DESC LIMIT 1
SELECT T2.title ,avg ( T1.stars ) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID
SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID where T1.stars = ( select min ( stars ) from Rating ) 
SELECT T2.title , avg ( T1.stars ) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.mID ORDER BY avg ( T1.stars ) DESC LIMIT 1
select sum ( GamesPlayed ) from sportsinfo
SELECT sum ( gamesplayed ) FROM Sportsinfo WHERE onscholarship = 'Y'
SELECT distinct sportname FROM Sportsinfo
SELECT sum ( gamesplayed ) FROM Sportsinfo WHERE sportname = "Football" AND onscholarship = 'Y'
SELECT Aircraft FROM aircraft
SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft
SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT ( * )  > = 2
SELECT T1.Aircraft FROM aircraft AS T1 JOIN MATCH AS T2 ON T1.Aircraft_ID = T2.Winning_Aircraft GROUP BY T2.Winning_Aircraft HAVING COUNT ( * ) >= 2
SELECT lname FROM Student WHERE StuID IN ( SELECT StuID FROM Has_allergy WHERE Allergy = "Milk" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy = "Cat" ) 
SELECT lname , age FROM Student WHERE StuID IN ( SELECT StuID FROM Has_allergy WHERE Allergy = "Milk" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy = "Cat" ) 
SELECT lname , age FROM Student WHERE StuID IN ( SELECT StuID FROM Has_allergy WHERE Allergy = "Milk" INTERSECT SELECT StuID FROM Has_allergy WHERE Allergy = "Cat" ) 
SELECT COUNT ( artwork_id ) FROM nomination
SELECT T2.Name , T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID
SELECT T2.Name , T3.Festival_Name, T3.YEAR FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID
SELECT T2.Name , T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID
SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid JOIN inst AS t4 ON t2.instid = t4.instid WHERE t4.country = "USA"
SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid JOIN inst AS t4 ON t2.instid = t4.instid WHERE t4.country = "USA" AND t2.authorder = 2 AND t1.lname = "Turon"
select authid from authors where lname = "Turon"
SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid JOIN inst AS t4 ON t2.instid = t4.instid WHERE t4.country = "USA" AND t2.authorder = 2 AND t1.lname = "Turon"
SELECT name FROM useracct WHERE u_id = 1
SELECT name FROM useracct WHERE u_id = 3
SELECT T2.rank FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id WHERE T2.u_id = 3
SELECT avg ( T2.rating ) FROM useracct WHERE T2.u_id = 1 AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id
SELECT T1.name , avg ( T2.rating ) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id
SELECT T1.name , avg ( T2.rating ) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id
SELECT T1.Fname , T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID = T2.FacID WHERE T2.DNO = 520
SELECT T1.Fname , T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID = T2.FacID WHERE T2.DNO = 600
SELECT T1.sex FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID = T2.FacID WHERE T2.DNO = 600
SELECT T1.Fname , T1.Lname FROM FACULTY AS T1 JOIN MEMBER_OF AS T2 ON T1.FacID = T2.FacID WHERE T2.DNO = 520
SELECT avg ( Price ) FROM products
SELECT * FROM products where price > = 150
SELECT T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code where T1.price > = 150
SELECT avg ( T1.Price ) , T2.name FROM products AS T1 JOIN Manufacturers AS T2 ON T1.manufacturer = T2.code GROUP BY T2.name HAVING avg ( T1.price ) >= 150
SELECT district_name from district where district_id = 15
SELECT district_name from district where district_id = 11
SELECT count ( * ) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t3.district_id = 15
SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t3.district_id = 15
SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t3.district_id = 11
SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t3.district_name = "Khanewal District"
SELECT count ( apt_type_code ) FROM Apartments
SELECT apt_type_code FROM Apartments WHERE bathroom_count > = 1 GROUP BY apt_type_code ORDER BY count ( * ) DESC LIMIT 1
SELECT apt_id FROM Apartments WHERE apt_type_code = 'Flat'
SELECT building_id, apt_id FROM Apartments WHERE apt_type_code = 'Flat'
SELECT apt_type_code FROM Apartments WHERE bathroom_count > 1 GROUP BY apt_type_code ORDER BY count ( * ) DESC LIMIT 1
SELECT departure_date FROM Flight WHERE origin = "Los Angeles" AND destination = "Honolulu"
SELECT arrival_date FROM Flight WHERE origin = "Los Angeles" AND destination = "Honolulu"
SELECT price FROM Flight WHERE origin = "Los Angeles" AND destination = "Honolulu"
SELECT flno FROM Flight WHERE origin = "Los Angeles" AND destination = "Honolulu"
SELECT departure_date , arrival_date FROM Flight WHERE origin = "Los Angeles" AND destination = "Honolulu"
SELECT T1.order_id FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452
SELECT shipment_date FROM Shipments WHERE order_id = 5
SELECT date_order_placed FROM Orders WHERE order_id = 5
SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 13
SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.shipment_tracking_number = 3452
SELECT Title FROM book
SELECT t2.price FROM book as t1 join publication as t2 on t1.book_id = t2.book_id
SELECT t2.price FROM book as t1 join publication as t2 on t1.book_id = t2.book_id order by t2.price asc
SELECT t2.price, t1.title FROM book as t1 join publication as t2 on t1.book_id = t2.book_id order by t2.price asc
SELECT t2.price, t1.title FROM book as t1 join publication as t2 on t1.book_id = t2.book_id order by t2.price desc
SELECT T1.Title FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID ORDER BY T2.Price DESC
SELECT count ( patient ) FROM Stay
SELECT patient FROM stay WHERE room = 112 ORDER BY staystart DESC LIMIT 1
SELECT count ( distinct room ) FROM stay
SELECT patient FROM stay WHERE room = 111 ORDER BY staystart DESC LIMIT 1
SELECT count ( * ) FROM products
SELECT product_name FROM products
SELECT product_PRICE FROM products WHERE product_name = "red jeans"
SELECT product_price FROM products WHERE product_name = "black jeans"
SELECT product_type_code , max ( product_price ) , min ( product_price ) FROM products GROUP BY product_type_code
SELECT distinct t1.title,t1.paperID FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = "Indiana University"
SELECT distinct t2.authID FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t1.title = ( SELECT distinct t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = "Indiana University" ) 
SELECT authID,count ( * ) from Authorship group by authID
SELECT DISTINCT t1.title FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = "Indiana University"
SELECT count ( * ) FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq ) 
SELECT * FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq ) order by credits desc limit 1
SELECT count ( * ) FROM course
SELECT title FROM course WHERE course_id NOT IN ( SELECT course_id FROM prereq ) 
SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE Participant_Details = 'Kenyatta Kuhn'
SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE Participant_Details = 'Karlee Batz'
select T1.Event_ID from Events AS T1 JOIN Participants_in_Events AS T2 JOIN Participants AS T3 where Participant_Details = 'Kenyatta Kuhn'
select count ( * ) from Events where Event_Details = 'Fail'
SELECT event_id FROM EVENTS EXCEPT SELECT T1.event_id FROM Participants_in_Events AS T1 JOIN Participants AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE Participant_Details = 'Kenyatta Kuhn'
SELECT course_id FROM course WHERE title = 'International Finance'
SELECT course_id FROM course WHERE course_id IN ( SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.title = 'International Finance' ) 
SELECT title FROM course WHERE course_id IN ( SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.title = 'International Finance' ) 
SELECT title FROM course WHERE course_id IN ( SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.title = 'International Finance' ) 
SELECT count ( * ) FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.mailshot_id FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.customer_id FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM mailshot_customers where customer_id = 1
SELECT customer_name FROM customers where customer_id = 1
SELECT count ( * ) FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id where T2.customer_name = "Wendell"
SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT chargeable_amount FROM Parts WHERE part_id = "1"
SELECT part_name FROM Parts WHERE part_id = "3"
SELECT part_name FROM Parts WHERE part_id = "2"
SELECT part_id , chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1
SELECT part_id , chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1
select max ( balance ) from savings
select min ( balance ) from savings
select name from accounts
SELECT sum ( T2.balance ) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T1.name != 'Brown'
SELECT distinct city_id from address where district = "Alberta"
SELECT distinct last_update from address where district = "QLD"
SELECT address from address where district = "QLD"
SELECT T2.address FROM staff AS T1 JOIN address AS T2 ON T1.address_id = T2.address_id WHERE T1.first_name = 'Elsa'
SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT ( * ) ASC LIMIT 1
SELECT T1.Name,count ( * ) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT ( * ) ASC LIMIT 1
SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT ( * ) ASC LIMIT 1
SELECT name , open_date FROM church ORDER BY open_date DESC LIMIT 3
SELECT name , open_date FROM church ORDER BY open_date Asc LIMIT 3
SELECT Organized_by FROM church ORDER BY open_date Asc LIMIT 3
SELECT name , open_date FROM church ORDER BY open_date DESC LIMIT 3
SELECT Channel_ID from broadcast WHERE Time_of_day = 'Morning'
SELECT t1.name,t2.Channel_ID FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id WHERE t2.time_of_day = 'Morning'
SELECT t1.name,t2.Channel_ID,Owner FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id WHERE t2.time_of_day = 'Morning'
SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id WHERE t2.time_of_day = 'Morning'
SELECT department_id , SUM ( salary ) FROM employees GROUP BY department_id HAVING count ( * )  > = 2
SELECT FIRST_NAME , LAST_NAME FROM employees where department_id = 90
select department_ID from employees where FIRST_NAME = 'Steven' and LAST_NAME = 'King'
select JOB_ID,SALARY from employees where FIRST_NAME = 'Steven' and LAST_NAME = 'King'
select EMPLOYEE_ID,SALARY from employees order by salary desc limit 1
SELECT department_id , SUM ( salary ) FROM employees GROUP BY department_id HAVING count ( * ) >= 2
Select count ( * ) from ( SELECT * FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id GROUP BY t2.ship_id HAVING count ( * ) > 1 ) 
Select count ( * ) from ( SELECT * FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id GROUP BY t2.ship_id HAVING count ( * )  = 1 ) 
Select age from captain order by age desc limit 1
Select age from captain order by age limit 1
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id GROUP BY t2.ship_id HAVING count ( * ) > 1
SELECT Name FROM Person ORDER BY AGE DESC LIMIT 1
SELECT count ( T2.friend ) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Alice'
SELECT count ( T2.friend ) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Alice' AND T1.gender = 'female'
SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T2.name = 'Alice' AND T1.gender = 'female'
SELECT cName FROM College WHERE enr < 13000 AND state = "AZ" UNION SELECT cName FROM College WHERE enr > 15000 AND state = "LA"
SELECT cName FROM College WHERE enr>20000
SELECT cName FROM College WHERE enr<20000 and enr>10000
SELECT cName FROM College order by enr limit 1
SELECT cName FROM College order by enr desc limit 1
SELECT cName FROM College WHERE enr < 13000 AND state = "AZ" UNION SELECT cName FROM College WHERE enr > 15000 AND state = "LA"
SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.id FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.address FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.first_name , T1.last_name FROM employees AS T1 JOIN customers AS T2 ON T1.id = T2.support_rep_id GROUP BY T1.id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br group by T1.team_id ORDER BY sum ( T1.attendance ) asc limit 1
SELECT sum ( T1.attendance ) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id group by T1.team_id ORDER BY sum ( T1.attendance ) asc limit 1
SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id group by T1.team_id ORDER BY sum ( T1.attendance ) desc limit 1
SELECT sum ( T1.attendance ) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id group by T1.team_id ORDER BY sum ( T1.attendance ) desc limit 1
SELECT T2.name FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1980 ORDER BY T1.attendance ASC LIMIT 1;
SELECT count ( DISTINCT building ) FROM classroom
SELECT building FROM classroom WHERE capacity > 50 GROUP BY building
SELECT count ( room_number ) FROM classroom WHERE capacity > 50
SELECT building, count ( room_number ) FROM classroom WHERE capacity > 50 group by building
SELECT count ( * ) , building FROM classroom WHERE capacity > 50 GROUP BY building
SELECT count ( * ) from Patient
SELECT T2.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient = T2.SSN JOIN Prescribes AS T3 ON T3.Patient = T2.SSN JOIN Medication AS T4 ON T3.Medication = T4.Code WHERE room = 111
SELECT T2.InsuranceID FROM stay AS T1 JOIN patient AS T2 ON T1.Patient = T2.SSN JOIN Prescribes AS T3 ON T3.Patient = T2.SSN JOIN Medication AS T4 ON T3.Medication = T4.Code WHERE room = 111
SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient = T2.SSN JOIN Prescribes AS T3 ON T3.Patient = T2.SSN JOIN Medication AS T4 ON T3.Medication = T4.Code WHERE room = 111
SELECT count ( DISTINCT student_id ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id
SELECT count ( DISTINCT t1.course_id ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id
SELECT count ( * ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171
SELECT count ( * ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T2.student_id = 171
select avg ( market_value ) from company
select Company from company order by assets_billion desc limit 1
select avg ( sales_billion ) from company where rank = 1 or rank = 2 or rank = 3
SELECT T3.location FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id WHERE T2.market_value > 100
SELECT count ( * ) FROM postseason WHERE ties = 1
SELECT count ( * ) FROM postseason WHERE YEAR = 1885 AND ties = 1;
SELECT avg ( age ) FROM STUDENT
select fname from student where age > ( SELECT avg ( age ) FROM STUDENT ) 
select count ( fname ) from student where age > ( SELECT avg ( age ) FROM STUDENT ) 
select count ( fname ) from student where age < ( SELECT avg ( age ) FROM STUDENT ) 
select count ( fname ) from student
SELECT Major FROM STUDENT WHERE Sex = "F" GROUP BY major ORDER BY count ( * ) DESC LIMIT 1
SELECT * FROM WINE ORDER BY price desc limit 1
SELECT * FROM WINE ORDER BY score desc limit 1
SELECT * FROM WINE ORDER BY cases desc limit 1
SELECT Winery FROM WINE ORDER BY cases asc limit 1
SELECT Grape , Winery , YEAR FROM WINE WHERE Price > 100 ORDER BY YEAR
SELECT amount FROM payment ORDER BY amount DESC LIMIT 1
SELECT amount,payment_id,customer_id FROM payment ORDER BY amount DESC LIMIT 1
SELECT payment_id FROM payment where amount>5 ORDER BY last_update DESC LIMIT 1
SELECT amount FROM payment ORDER BY amount DESC LIMIT 1
SELECT avg ( salary ) FROM Employee
SELECT name FROM Employee ORDER BY salary ASC LIMIT 3
SELECT max ( salary ) FROM Employee
SELECT name FROM Employee ORDER BY salary ASC LIMIT 3
SELECT avg ( T1.sales ) FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID WHERE T2.work_type = 'Photo'
SELECT t1.journal_id FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID WHERE T2.work_type = 'Photo'
SELECT avg ( T1.sales ) FROM journal AS T1 JOIN journal_committee AS T2 ON T1.journal_ID = T2.journal_ID WHERE T2.work_type = 'Photo'
SELECT cmi_cross_ref_id FROM cmi_cross_references
SELECT T1.cmi_cross_ref_id FROM cmi_cross_references as T1 join Parking_Fines as T2 on T1.cmi_cross_ref_id = T2.cmi_cross_ref_id
SELECT cmi_cross_ref_id FROM cmi_cross_references where cmi_cross_ref_id not in ( Select T1.cmi_cross_ref_id from cmi_cross_references as T1 join Parking_Fines as T2 on T1.cmi_cross_ref_id = T2.cmi_cross_ref_id ) 
SELECT cmi_cross_ref_id FROM cmi_cross_references EXCEPT SELECT cmi_cross_ref_id FROM parking_fines
SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t1.policy_type_code = "Deputy"
SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t1.policy_type_code = "Deputy"
SELECT count ( * ) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY employees.employee_id ORDER BY count ( * ) DESC LIMIT 1
SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY employees.employee_id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id where Employee_name = "Kenyon"
SELECT Employees.employee_name , count ( * ) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY Circulation_History.document_id , Circulation_History.draft_number , Circulation_History.copy_number ORDER BY count ( * ) DESC LIMIT 1;
SELECT COUNT ( * ) FROM ( SELECT Party FROM party GROUP BY Party HAVING COUNT ( * )  > = 2 ) 
SELECT Party FROM party GROUP BY Party HAVING COUNT ( * )  > = 2
SELECT Comptroller FROM PARTY WHERE US_Senate in ( SELECT US_Senate FROM PARTY WHERE PARTY IN ( SELECT Party FROM party GROUP BY Party HAVING COUNT ( * )  > = 2 ) ) 
SELECT Party FROM party GROUP BY Party HAVING COUNT ( * ) >= 2
SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid = t2.paperid WHERE t1.authorder =  ( SELECT max ( authorder ) FROM authorship ) 
SELECT count ( distinct authID ) fROM Authorship
SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid = t2.paperid WHERE t1.authorder =  ( SELECT min ( authorder ) FROM authorship ) 
SELECT paperID,avg ( authOrder ) FROM authorship group by paperID
SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid = t2.paperid WHERE t1.authorder = ( SELECT max ( authorder ) FROM authorship ) 
SELECT count ( * ) from church
SELECT count ( * ) FROM church AS T1 JOIN wedding AS T2 ON T1.church_id = T2.church_id WHERE T2.year = 2015
SELECT name FROM church EXCEPT SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id = T2.church_id WHERE T2.year = 2015
SELECT name FROM church EXCEPT SELECT T1.name FROM church AS T1 JOIN wedding AS T2 ON T1.church_id = T2.church_id WHERE T2.year = 2015
SELECT height FROM people WHERE Name = 'Hubert Henno'
SELECT count ( * ) FROM people WHERE Sex = 'M'
SELECT name FROM people WHERE Sex = 'M' ORDER BY Height DESC LIMIT 1
SELECT avg ( height ) , avg ( weight ) FROM people WHERE sex = 'M'
SELECT T1.account_name , T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = "Meaghan" AND T2.customer_last_name = "Keeling"
SELECT COUNT ( * ) from Customers
SELECT * from Customers Where customer_id = 1
SELECT T1.account_name , T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = "Meaghan" AND T2.customer_last_name = "Keeling"
SELECT T2.customer_name FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.outcome_code = 'Order'
SELECT T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.outcome_code = 'Order'
SELECT T2.customer_name , T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.outcome_code = 'No Response'
SELECT T2.customer_name , T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.outcome_code = 'Order' INTERSECT SELECT T2.customer_name , T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.outcome_code = 'No Response'
SELECT YEAR FROM hosting_city ORDER BY YEAR DESC LIMIT 1
SELECT MATCH_ID FROM hosting_city WHERE YEAR = 2013
SELECT hOST_CITY FROM hosting_city WHERE YEAR = 2013
SELECT host_city FROM hosting_city ORDER BY YEAR DESC LIMIT 1
SELECT T1.resident_id ,count ( * ) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id = T2.resident_id GROUP BY T1.resident_id
SELECT T1.resident_id , T1.other_details , count ( * ) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id = T2.resident_id GROUP BY T1.resident_id ORDER BY count ( * ) DESC
SELECT count ( * ) FROM Residents
SELECT T1.resident_id , T1.other_details , count ( * ) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id = T2.resident_id GROUP BY T1.resident_id ORDER BY count ( * ) DESC
SELECT Num_of_Audience FROM festival_detail WHERE YEAR = 2008 OR YEAR = 2010
SELECT Chair_Name FROM festival_detail WHERE YEAR = 2008 OR YEAR = 2010
SELECT Num_of_Audience FROM festival_detail WHERE YEAR = 2008 OR YEAR = 2010
SELECT start_station_id FROM trip
SELECT count ( DISTINCT start_station_id ) FROM trip WHERE start_station_id IN ( SELECT start_station_id FROM trip GROUP BY start_station_name HAVING COUNT ( * ) > = 200 ) 
SELECT start_station_id , start_station_name FROM trip GROUP BY start_station_name HAVING COUNT ( * ) > = 200
SELECT start_station_id , start_station_name FROM trip GROUP BY start_station_name HAVING COUNT ( * ) >= 200
SELECT count ( * ) from ( SELECT * FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ) 
SELECT count ( * ) from ( SELECT * FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id where recommendations = "Transfer schools" GROUP BY T1.student_id ) 
SELECT T1.student_id , T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.student_id , T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY count ( * ) DESC LIMIT 1
SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id = t2.id JOIN stadium AS t3 ON t3.id = t2.stadium_id GROUP BY t2.stadium_id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( name ) from event
SELECT count ( name ) from stadium
SELECT t3.name FROM record AS t1 JOIN event AS t2 ON t1.event_id = t2.id JOIN stadium AS t3 ON t3.id = t2.stadium_id GROUP BY t2.stadium_id ORDER BY count ( * ) DESC LIMIT 1
SELECT name from technician where team = "CLE"
SELECT name from technician where team = "CWS"
SELECT Starting_Year FROM technician WHERE Team = "CLE" INTERSECT SELECT Starting_Year FROM technician WHERE Team = "CWS"
SELECT Starting_Year FROM technician WHERE Team = "CLE" INTERSECT SELECT Starting_Year FROM technician WHERE Team = "CWS"
SELECT avg ( lat ) FROM station WHERE city = "San Jose"
SELECT avg ( long ) FROM station WHERE city = "San Jose"
SELECT installation_date FROM station WHERE city = "San Jose"
SELECT name,installation_date FROM station WHERE city = "San Jose"
SELECT name,dock_count FROM station WHERE city = "San Jose"
SELECT avg ( lat ) , avg ( long ) FROM station WHERE city = "San Jose"
select email_address from people
SELECT T2.candidate_id,T1.email_address FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id
select T2.candidate_id, T1.email_address from people AS T1 JOIN Candidates as T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = 'stanley.monahan@example.org'
SELECT T2.candidate_id FROM people AS T1 JOIN candidates AS T2 ON T1.person_id = T2.candidate_id WHERE T1.email_address = "stanley.monahan@example.org"
SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.Type = "City Mall"
SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.Type = "City Mall" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.Type = "Village Store"
SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.Type = "City Mall" INTERSECT SELECT t3.District_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.Type = "Village Store"
SELECT Grape FROM GRAPES WHERE Color = "White"
SELECT * FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = "White"
SELECT avg ( score ) FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = "White"
SELECT avg ( score ) FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color ! = "White"
SELECT T2.Name , T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = "White"
SELECT max ( price ) , min ( price ) ,avg ( price ) FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = "White"
SELECT T2.Name , T2.Score FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = "White"
SELECT Name FROM phone AS T2 ORDER BY price ASC LIMIT 1
SELECT phone_id FROM phone_market ORDER BY num_of_stock DESC LIMIT 1
SELECT T2.Name , sum ( T1.Num_of_stock ) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name
SELECT carrier FROM phone WHERE name = "IPhone 6s"
SELECT T2.Name , sum ( T1.Num_of_stock ) FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name
SELECT COUNT ( * ) FROM Customers
SELECT customer_name FROM Customers
SELECT max ( customer_code ) FROM Customers
SELECT customer_address FROM Customers WHERE customer_name = "Ahmed"
SELECT max ( customer_code ) , min ( customer_code ) FROM Customers
SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) from document_locations where Location_Code = 'x'
SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count ( * ) LIMIT 1
SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count ( * ) DESC LIMIT 1
SELECT elevation FROM airports WHERE name = "Goroka Airport"
SELECT count ( * ) FROM routes WHERE dst_apid IN ( SELECT apid FROM airports WHERE country = 'Canada' ) AND src_apid IN ( SELECT apid FROM airports WHERE country = 'United States' ) 
SELECT count ( * ) FROM routes WHERE dst_apid IN ( SELECT apid FROM airports WHERE country = 'Canada' ) AND src_apid IN ( SELECT apid FROM airports WHERE country = 'United States' ) 
SELECT course_name FROM courses WHERE course_id = 301 or course_id = 302
SELECT date_of_attendance FROM student_course_attendance WHERE student_id = 111 or student_id = 121
SELECT count ( * ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "English"
SELECT count ( * ) FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "English"
SELECT distinct ( catalog_publisher ) FROM catalogs WHERE catalog_publisher LIKE "%Murray%"
SELECT catalog_name FROM catalogs WHERE catalog_publisher LIKE "%Murray%"
SELECT date_of_latest_revision FROM catalogs WHERE catalog_publisher LIKE "%Murray%"
SELECT catalog_publisher FROM catalogs WHERE catalog_publisher LIKE "%chocolate%"
select count ( * ) from catalogs where catalog_publisher in ( SELECT distinct ( catalog_publisher ) FROM catalogs WHERE catalog_publisher LIKE "%chocolate%" ) 
select catalog_name,date_of_publication from catalogs where catalog_publisher in ( SELECT distinct ( catalog_publisher ) FROM catalogs WHERE catalog_publisher LIKE "%chocolate%" ) 
SELECT distinct ( catalog_publisher ) FROM catalogs WHERE catalog_publisher LIKE "%Murray%"
SELECT song_name FROM song WHERE rating < ( SELECT max ( rating ) FROM song WHERE genre_is = "blues" ) 
SELECT song_name FROM song WHERE rating > ( SELECT max ( rating ) FROM song WHERE genre_is = "blues" ) 
SELECT song_name,rating FROM song WHERE genre_is = "blues"
SELECT song_name FROM song WHERE rating < ( SELECT max ( rating ) FROM song WHERE genre_is = "blues" ) 
SELECT * FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = "Billy Cobham"
SELECT count ( * ) FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = "Billy Cobham"
SELECT T1.title FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = "Billy Cobham"
SELECT count ( * ) FROM albums AS T1 JOIN artists AS T2 ON T1.artist_id = T2.id WHERE T2.name = "Billy Cobham";
select distinct product_category_code from Products
select unit_of_measure from Ref_Product_Categories where product_category_code = 'Seeds'
SELECT t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code WHERE t1.product_name = "chervil"
SELECT t2.unit_of_measure , t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code WHERE t1.product_name = "chervil"
select count ( * ) from Products
SELECT count ( * ) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = "caraway"
SELECT count ( * ) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = "flax"
SELECT count ( * ) FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = "flax"
SELECT event_id, event_name from party_events
SELECT event_id, event_name from party_events where event_name = "Annaual Meeting"
SELECT T3.event_id, T3.event_name FROM region AS t1 JOIN party AS t2 ON t1.region_id = t2.region_id JOIN party_events AS t3 ON t2.party_id = t3.party_id WHERE t1.region_name = "United Kingdom" AND t3.Event_Name = "Annaual Meeting"
SELECT count ( * ) FROM region AS t1 JOIN party AS t2 ON t1.region_id = t2.region_id JOIN party_events AS t3 ON t2.party_id = t3.party_id WHERE t1.region_name = "United Kingdom" AND t3.Event_Name = "Annaual Meeting"
SELECT count ( * ) , T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.engineer_visit_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id where T2.fault_log_entry_id = ( SELECT T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT T2.contact_staff_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id where T2.fault_log_entry_id = ( SELECT T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT T2.fault_status FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id where T2.fault_log_entry_id = ( SELECT T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT T1.fault_description FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.other_fault_details FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) , T1.fault_log_entry_id FROM Fault_Log AS T1 JOIN Engineer_Visits AS T2 ON T1.fault_log_entry_id = T2.fault_log_entry_id GROUP BY T1.fault_log_entry_id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM Document_Sections
SELECT access_count FROM Documents ORDER BY access_count DESC LIMIT 1
SELECT count ( DISTINCT section_title ) FROM Document_Sections
SELECT t1.document_name FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code GROUP BY t1.document_code ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.source_system_code FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id
SELECT T1.source_system_code , T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id
SELECT T1.source_system_code , T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id ORDER BY T2.council_tax_id
SELECT source_system_code FROM CMI_Cross_References
SELECT T1.source_system_code , T2.council_tax_id FROM CMI_Cross_References AS T1 JOIN Benefits_Overpayments AS T2 ON T1.cmi_cross_ref_id = T2.cmi_cross_ref_id ORDER BY T2.council_tax_id
SELECT distinct Grape FROM WINE WHERE Score > 93
SELECT distinct appelation FROM WINE WHERE Score > 93
SELECT Name FROM WINE WHERE Score > 93
SELECT Grape , Appelation , Name FROM WINE WHERE Score > 93
SELECT Grape , Appelation , Name FROM WINE WHERE Score > 93 ORDER BY Name
SELECT avg ( City_Population ) FROM district
SELECT max ( City_Population ) FROM district
SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1
SELECT district_name FROM district ORDER BY city_area ASC LIMIT 1
SELECT T1.clubname from club as T1 join member_of_club as T2 on T1.clubid = T2.clubid group by T2.clubid order by count ( * ) desc limit 1
SELECT count ( * ) from club as T1 join member_of_club as T2 on T1.clubid = T2.clubid group by T2.clubid order by count ( * ) desc limit 1
select count ( position ) from member_of_club where clubid = ( SELECT T2.clubid from club as T1 join member_of_club as T2 on T1.clubid = T2.clubid group by T2.clubid order by count ( * ) desc limit 1 ) 
SELECT count ( DISTINCT t2.position ) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid WHERE t1.clubname = "Bootup Baltimore"
SELECT Official_Name FROM city order by Area_km_2 desc limit 1
SELECT Official_Name FROM city WHERE Population > 1500 OR Population < 500
SELECT count ( * ) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id WHERE T2.level = 6
SELECT T2.Name FROM purchase AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id group by T1.member_id order by count ( * ) desc limit 2
SELECT hometown from member where name = "Myron Pryor"
SELECT t2.branch_id from member as t1 join purchase as t2 on t1.member_id = t2.member_id where name = "Myron Pryor"
SELECT count ( * ) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id WHERE T2.level = 6
SELECT count ( * ) FROM Products WHERE Product_ID NOT IN ( SELECT Product_ID FROM Products_in_Events ) 
SELECT product_name FROM Products WHERE Product_ID NOT IN ( SELECT Product_ID FROM Products_in_Events ) 
SELECT Product_Name FROM Products WHERE Product_ID NOT IN ( SELECT Product_ID FROM Products_in_Events ) 
SELECT T2.loan_type, T1.bname, T2.branch_ID, T2.amount FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname
SELECT branch_ID, bname, no_of_customers from bank
SELECT sum ( amount ) , T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname
SELECT sum ( amount ) , T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id GROUP BY T1.bname
SELECT count ( * ) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE LENGTH > 3000 ) 
select T2.Name from roller_coaster as T1 JOIN country as T2 ON T1.Country_ID = T2.Country_ID where T1.Length > 5000
select max ( Length ) from roller_coaster
select Park from roller_coaster order by Speed desc limit 1
SELECT count ( * ) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE LENGTH > 3000 ) 
select product_id from Products where product_name = 'food'
select T2.order_id from Products as T1 join Order_Items as T2 where T1.product_id = T2.product_id and T1.product_name = 'food'
select T3.customer_id from Products as T1 join Order_Items as T2 join Orders as T3 where T1.product_id = T2.product_id and T1.product_name = 'food' and T3.order_id = T2.order_id
SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = "food" GROUP BY T1.customer_id HAVING count ( * ) >= 1
SELECT T1.institution , count ( * ) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id
SELECT T2.protein_name FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id where T1.institution = "Lindenwood University–Belleville"
SELECT divergence_from_human_lineage FROM protein where protein_name = "Centromeric protein E, putative" or protein_name = "conserved hypothetical protein"
SELECT accession_number FROM protein where protein_name = "Centromeric protein E, putative"
SELECT sequence_identity_to_human_protein FROM protein where accession_number = "XP_002429877.1"
SELECT protein_name FROM protein order by sequence_identity_to_human_protein desc limit 1
SELECT T1.institution , count ( * ) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id
select count ( distinct custid ) from accounts
select count ( * ) from checking
SELECT min ( balance ) FROM savings
SELECT T2.custid FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid ORDER BY T2.balance LIMIT 1
SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid order by T3.balance limit 1
SELECT T2.balance , T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T3.balance LIMIT 1
SELECT name, id FROM station where id = 1 or id = 2
SELECT id FROM station WHERE lat > 37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min ( bikes_available ) < 7
SELECT installation_date FROM station WHERE id = 4
SELECT id FROM station WHERE lat > 37.4 EXCEPT SELECT station_id FROM status GROUP BY station_id HAVING min ( bikes_available ) < 7
SELECT count ( * ) FROM people WHERE is_male = 'F'
SELECT count ( * ) FROM people WHERE is_male = 'T'
SELECT count ( * ) FROM people WHERE age > 30
SELECT count ( * ) FROM people WHERE is_male = 'F' AND age > 30
SELECT count ( * ) FROM people WHERE is_male = 'F' AND age > 30
SELECT t1.route_name FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id = t2.route_id GROUP BY t1.route_id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( route_name ) FROM Delivery_Routes
SELECT t2.location_code,count ( * ) FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id = t2.route_id
SELECT t1.route_name FROM Delivery_Routes AS t1 JOIN Delivery_Route_Locations AS t2 ON t1.route_id = t2.route_id GROUP BY t1.route_id ORDER BY count ( * ) DESC LIMIT 1
SELECT StuID FROM Student WHERE sex = 'F'
SELECT StuID FROM Sportsinfo WHERE sportname = "Football"
SELECT StuID FROM Student WHERE sex = 'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname = "Football"
SELECT StuID FROM Student WHERE sex = 'F' INTERSECT SELECT StuID FROM Sportsinfo WHERE sportname = "Football"
SELECT * FROM tracks
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies'
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name ! = 'Music'
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Movies' EXCEPT SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T2.playlist_id = T3.id WHERE T3.name = 'Music'
SELECT name FROM driver
SELECT name, driver_id FROM driver
SELECT t1.name, t2.years_working FROM driver as t1 join school_bus as t2 where t1.driver_id = t2.driver_id
SELECT name FROM driver WHERE driver_id NOT IN ( SELECT driver_id FROM school_bus ) 
SELECT title FROM film WHERE film_id = 1
SELECT film_id FROM film WHERE LENGTH > 100
SELECT title FROM film WHERE release_year = 2006
SELECT title FROM film EXCEPT SELECT title FROM film WHERE replacement_cost > 200
SELECT title FROM film WHERE LENGTH > 100 OR rating = 'PG' EXCEPT SELECT title FROM film WHERE replacement_cost > 200
SELECT count ( student_id ) FROM student_course_registrations
SELECT count ( course_id ) FROM student_course_registrations
SELECT COUNT ( * ) FROM ( SELECT student_id FROM student_course_registrations GROUP BY student_id having count ( * ) = 1 ) 
SELECT student_id FROM student_course_registrations GROUP BY student_id having count ( * ) = 1
SELECT student_id FROM student_course_registrations GROUP BY student_id ORDER BY count ( * ) LIMIT 1
SELECT count ( distinct pPos ) from tryout
SELECT * from player where hs > 1000
SELECT hs from player order by hs desc limit 1
SELECT max ( T1.HS ) , pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T1.HS > 1000 GROUP BY T2.pPos
SELECT distinct T2.id FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = "Balls to the Wall"
SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = "Balls to the Wall"
SELECT distinct T2.composer FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = "Balls to the Wall"
SELECT T2.name FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.title = "Balls to the Wall";
SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = "Columbus Crew"
SELECT singles_WL from player where player like "%Hong%"
SELECT T1.Player , T1.Years_Played FROM player AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = "Columbus Crew"
select monthly_rental from Student_addresses order by monthly_rental desc limit 1
SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id where T2.monthly_rental = 1297.807
SELECT T1.line_1 FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id where T2.monthly_rental = 1297.807
SELECT T1.address_id FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id where T2.monthly_rental = 1297.807
SELECT T2.address_id , T1.zip_postcode FROM Addresses AS T1 JOIN Student_Addresses AS T2 ON T1.address_id = T2.address_id ORDER BY monthly_rental DESC LIMIT 1
SELECT count ( * ) from broadcast
SELECT * from channel
SELECT owner from channel where name = "CCTV-1"
SELECT name from channel where rating_in_percent = ( select max ( rating_in_percent ) from channel ) 
SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id WHERE t2.time_of_day = 'Morning' INTERSECT SELECT t1.name FROM channel AS t1 JOIN broadcast AS t2 ON t1.channel_id = t2.channel_id WHERE t2.time_of_day = 'Night'
SELECT count ( * ) from status
SELECT city from station where name = "San Jose Civic Center"
SELECT count ( * ) from station
SELECT DISTINCT T1.id , T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id WHERE T2.bikes_available > 12
SELECT region_id FROM region WHERE region_name = 'Denmark'
SELECT T3.storm_id FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.region_name = 'Denmark'
SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.region_name = 'Denmark'
SELECT T3.name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.region_name = 'Denmark'
select count ( * ) from employees where first_name LIKE '%z%'
select first_name from employees where first_name LIKE '%z%'
select first_name,last_name from employees where first_name LIKE '%z%'
SELECT T1.first_name , T1.last_name , T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id WHERE T1.first_name LIKE '%z%'
SELECT T1.first_name , T1.last_name , T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id WHERE T1.first_name LIKE '%z%'
SELECT max ( Cows ) , min ( Cows ) FROM farm
SELECT max ( Total_Horses ) , min ( Total_Horses ) FROM farm
SELECT oxen, total_cattle FROM farm where farm_id = 1
SELECT max ( Cows ) , min ( Cows ) FROM farm
SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type = 'Friendly'
SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type = 'Friendly'
SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = "Editor"
SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = "Editor"
SELECT COUNT ( * ) FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = "Editor" AND T1.Date_of_Birth > 1978
SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = "Editor"
SELECT count ( state ) FROM bank where no_of_customers>0
SELECT state FROM bank where no_of_customers>0
SELECT state FROM bank GROUP BY state ORDER BY sum ( no_of_customers ) DESC LIMIT 1
SELECT state FROM bank GROUP BY state ORDER BY sum ( no_of_customers ) DESC LIMIT 1
SELECT name, time FROM swimmer
SELECT t1.time, t2.event_id FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id
SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id GROUP BY t2.swimmer_id HAVING count ( * ) > = 2
SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id GROUP BY t2.swimmer_id HAVING count ( * ) >= 2
SELECT count ( * ) FROM Movie
SELECT count ( director ) FROM Movie
SELECT count ( distinct T1.director ) FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title ! = T2.title
SELECT T1.title FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title ! = T2.title
SELECT T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title ! = T2.title
SELECT T1.title , T1.year FROM Movie AS T1 JOIN Movie AS T2 ON T1.director = T2.director WHERE T1.title != T2.title
SELECT T1.transaction_type_description FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10
SELECT T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10
SELECT T2.amount_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10
SELECT T1.transaction_type_description FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count > = 10
SELECT T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count > = 10
SELECT T1.transaction_type_description , T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10
SELECT avg ( balance ) FROM checking
SELECT avg ( balance ) FROM savings
SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T2.balance > ( SELECT avg ( balance ) FROM checking ) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T2.balance < ( SELECT avg ( balance ) FROM savings ) 
SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid WHERE T2.balance > ( SELECT avg ( balance ) FROM checking ) INTERSECT SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T2.balance < ( SELECT avg ( balance ) FROM savings ) 
SELECT location , country FROM match WHERE round = "1.0"
SELECT pilot_id FROM pilot WHERE name = "Prof. Zackery Collins"
SELECT t1.name , t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id = t2.winning_pilot ORDER BY t1.age LIMIT 1
SELECT t1.name , t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id = t2.winning_pilot ORDER BY t1.age LIMIT 1
SELECT T1.name , T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id Order by Max_speed limit 1
SELECT avg ( Max_speed ) FROM storm
SELECT avg ( Damage_millions_USD ) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id
SELECT T1.name , T1.max_speed FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id ORDER BY count ( * ) DESC LIMIT 1
SELECT t1.employee_name FROM Employees as t1 JOIN Circulation_History as t2 ON t2.employee_id = t1.employee_id group by t1.employee_name order by count ( * ) desc limit 1
SELECT t1.employee_name, sum ( t2.draft_number ) FROM Employees as t1 JOIN Circulation_History as t2 ON t2.employee_id = t1.employee_id GROUP BY t2.document_id , t2.draft_number , t2.copy_number ORDER BY count ( * ) DESC LIMIT 1
SELECT sum ( t2.copy_number ) FROM Employees as t1 JOIN Circulation_History as t2 ON t2.employee_id = t1.employee_id GROUP BY t2.document_id , t2.draft_number , t2.copy_number ORDER BY count ( * ) DESC LIMIT 1
SELECT Employees.employee_name , count ( * ) FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id GROUP BY Circulation_History.document_id , Circulation_History.draft_number , Circulation_History.copy_number ORDER BY count ( * ) DESC LIMIT 1;
SELECT apt_type_code FROM Apartments
SELECT apt_type_code,room_count FROM Apartments
SELECT apt_type_code,room_count FROM Apartments order by room_count desc limit 1
SELECT apt_type_code FROM Apartments
SELECT apt_type_code , sum ( room_count ) FROM Apartments GROUP BY apt_type_code
SELECT apt_type_code , sum ( room_count ) , sum ( bathroom_count ) ,sum ( bedroom_count ) FROM Apartments WHERE apt_type_code = "Flat"
SELECT apt_type_code , bathroom_count , bedroom_count FROM Apartments GROUP BY apt_type_code ORDER BY sum ( room_count ) DESC LIMIT 1
SELECT DISTINCT t3.customer_id FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count ( * ) LIMIT 1
SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id having t3.customer_id = "113"
SELECT DISTINCT t1.product_name FROM products AS t1 JOIN complaints AS t2 ON t1.product_id = t2.product_id JOIN customers AS t3 GROUP BY t3.customer_id ORDER BY count ( * ) LIMIT 1
SELECT billing_country FROM invoices GROUP BY billing_country ORDER BY SUM ( total ) DESC LIMIT 8
SELECT billing_city FROM invoices where billing_city like "%O%"
SELECT distinct billing_address FROM invoices where billing_city = "Boston"
SELECT billing_country , SUM ( total ) FROM invoices GROUP BY billing_country ORDER BY SUM ( total ) DESC LIMIT 8;
SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id = t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count ( * ) DESC LIMIT 1
select Claim_ID from Claims_Processing_Stages AS T1 JOIN Claims_Processing AS T2 ON T1.Claim_Stage_ID = T2.Claim_Stage_ID WHEREClaim_Status_Name = 'Open'
select distinct Claim_Stage_ID from Claims_Processing
SELECT t2.claim_status_name FROM claims_processing AS t1 JOIN claims_processing_stages AS t2 ON t1.claim_stage_id = t2.claim_stage_id GROUP BY t1.claim_stage_id ORDER BY count ( * ) DESC LIMIT 1
SELECT invoice_number from Shipments
SELECT invoice_number, order_id from Shipments
SELECT date_order_placed from Orders where order_id = 9
SELECT T1.date_order_placed FROM orders AS T1 JOIN shipments AS T2 ON T1.order_id = T2.order_id WHERE T2.invoice_number = 10
SELECT max_page_size FROM product WHERE max_page_size ! = 'A4'
SELECT product FROM product WHERE product != ( SELECT max_page_size FROM product GROUP BY max_page_size ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT Company_name FROM phone GROUP BY Company_name HAVING count ( * ) > 1
SELECT Company_name FROM phone GROUP BY Company_name HAVING count ( * )  = 1
SELECT Hardware_Model_name FROM phone where Company_name = "Nokia Corporation"
SELECT Company_name FROM phone GROUP BY Company_name HAVING count ( * ) > 1;
select bname from bank
SELECT T1.bname FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id WHERE T2.loan_type = 'Business'
SELECT T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id WHERE T2.loan_type = 'Business'
SELECT T1.bname , T1.city FROM bank AS T1 JOIN loan AS T2 ON T1.branch_id = T2.branch_id WHERE T2.loan_type = 'Business'
SELECT party_theme from party
SELECT T1.party_id , T1.host_id, T3.party_theme FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID
SELECT T2.name, T1.party_id , T1.host_id, T3.party_theme FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID
SELECT T3.Party_Theme , T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID
SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.country ORDER BY count ( * ) LIMIT 1
SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.country ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( t3.paperID ) FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.country ORDER BY count ( * ) DESC LIMIT 1
SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.country ORDER BY count ( * ) DESC LIMIT 1
SELECT store_id, store_name FROM store
SELECT t1.store_id, t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t3.district_name = "Khanewal District"
SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t3.district_name = "Khanewal District"
SELECT count ( * ) from game
SELECT total_attendance from stadium where name = "FedExField"
SELECT T1.season , T2.name FROM game AS T1 JOIN stadium AS T2 ON T1.stadium_id = T2.id JOIN injury_accident AS T3 ON T1.id = T3.game_id WHERE T3.injury = 'Foot injury' OR T3.injury = 'Knee problem'
SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor = "8741"
SELECT lname, fname from student where stuID = "1001"
SELECT T1.LNAME, T1.FNAME FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.StuID WHERE T2.PRESIDENT_VOTE = "1004"
SELECT T1.LNAME, T1.FNAME FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.StuID WHERE T2.Vice_President_Vote = "1007"
SELECT age FROM STUDENT where lname = "Smith" and fname = "Linda"
SELECT lname, fname FROM STUDENT
SELECT DISTINCT T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = PRESIDENT_Vote INTERSECT SELECT DISTINCT LName FROM STUDENT WHERE Advisor = "8741"
SELECT master_customer_id, cmi_details from Customer_Master_Index
SELECT T1.master_customer_id, t1.cmi_details, T2.cmi_cross_ref_id from customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id = T2.master_customer_id
SELECT T1.master_customer_id, t1.cmi_details, T2.cmi_cross_ref_id FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T1.cmi_details = 'Gottlieb, Becker and Wyman'
SELECT DISTINCT T2.source_system_code FROM customer_master_index AS T1 JOIN cmi_cross_references AS T2 ON T1.master_customer_id = T2.master_customer_id WHERE T1.cmi_details = 'Gottlieb , Becker and Wyman'
SELECT max ( market_share ) FROM browser
SELECT min ( market_share ) FROM browser
SELECT avg ( market_share ) FROM browser
SELECT name FROM browser where market_share > ( select avg ( market_share ) from browser ) 
SELECT max ( market_share ) , min ( market_share ) , avg ( market_share ) FROM browser
SELECT Profits_billion FROM company where company = "ExxonMobil"
SELECT Company FROM company where Market_Value = 213.7
SELECT Headquarters FROM company where Company = "General Electric"
SELECT main_industry , count ( * ) FROM company GROUP BY main_industry ORDER BY sum ( market_value ) DESC LIMIT 1
SELECT T1.first_name , T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id ORDER BY T2.invoice_date DESC LIMIT 5
SELECT T1.first_name , T1.last_name, T1.city, T1.state FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id ORDER BY T2.invoice_date DESC LIMIT 5
SELECT T1.first_name , T1.last_name, T1.city, T1.state, T1.country FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id ORDER BY T2.invoice_date DESC LIMIT 5
SELECT T1.email FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id ORDER BY T2.invoice_date DESC LIMIT 5
SELECT T1.first_name , T1.last_name FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id ORDER BY T2.invoice_date DESC LIMIT 5;
SELECT T2.date_problem_reported FROM problems AS T1 JOIN Problems AS T2 WHERE T2.problem_description = "w"
SELECT T1.other_staff_details FROM problems AS T2 JOIN Staff AS T1 WHERE T2.date_problem_reported = '1976-12-18 23:54:41' and T2.reported_by_staff_id = T1.staff_id
SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = "Christop"
SELECT dept_name FROM student GROUP BY dept_name ORDER BY count ( * ) DESC LIMIT 1
SELECT SUM ( tot_cred ) FROM student WHERE dept_name = "Civil Eng."
SELECT ID FROM student WHERE dept_name = "Civil Eng."
SELECT dept_name FROM student GROUP BY dept_name ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) from albums
SELECT count ( * ) from ( select count ( * ) FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count ( T1.id ) < 10 ) 
select count ( * ) from ( SELECT * FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count ( T1.id )  > = 10 ) 
SELECT T1.title FROM albums AS T1 JOIN tracks AS T2 ON T1.id = T2.album_id GROUP BY T1.id HAVING count ( T1.id ) > 10;
SELECT count ( * ) FROM phone
SELECT count ( * ) FROM chip_model
SELECT model_name FROM chip_model EXCEPT SELECT chip_model FROM phone WHERE Accreditation_type = 'Full'
SELECT model_name FROM chip_model EXCEPT SELECT chip_model FROM phone WHERE Accreditation_type = 'Full'
SELECT model_name FROM chip_model EXCEPT SELECT chip_model FROM phone WHERE Accreditation_type = 'Full'
SELECT product_name FROM products WHERE product_type_code = 'Hardware' ORDER BY product_price DESC LIMIT 1
SELECT product_price FROM products WHERE product_type_code = 'Hardware' ORDER BY product_price DESC LIMIT 1
SELECT product_name,product_price FROM products WHERE product_type_code = 'Hardware' ORDER BY product_price asc LIMIT 1
SELECT avg ( product_price ) FROM products WHERE product_type_code = 'Hardware'
SELECT avg ( product_price ) FROM products WHERE product_type_code = 'Clothes'
SELECT product_name FROM products WHERE product_type_code = 'Hardware' ORDER BY product_price DESC LIMIT 1
SELECT name FROM member WHERE member_id IN ( SELECT member_id FROM membership_register_branch ) 
SELECT name FROM member WHERE member_id NOT IN ( SELECT member_id FROM membership_register_branch ) 
SELECT count ( distinct branch_id ) FROM membership_register_branch
SELECT name FROM member WHERE member_id NOT IN ( SELECT member_id FROM membership_register_branch ) 
select Player_name from player
SELECT T3.Player_name , T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID
SELECT T3.Sponsor_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID
SELECT T3.Gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID
SELECT T3.Player_name , T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID
SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count ( * ) DESC LIMIT 1
SELECT Allergy FROM Has_allergy where StuID = 1001
SELECT Allergy FROM Has_allergy where StuID = 1002
SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count ( * ) DESC LIMIT 1
SELECT * FROM TRANSACTIONS
SELECT count ( * ) FROM TRANSACTIONS
SELECT investor_id FROM TRANSACTIONS
SELECT transaction_type_code , max ( share_count ) , min ( share_count ) FROM TRANSACTIONS GROUP BY transaction_type_code
SELECT Headquarter FROM manufacturers
SELECT Founder FROM manufacturers
SELECT avg ( Revenue ) FROM manufacturers
SELECT sum ( revenue ) FROM manufacturers WHERE Headquarter = 'Tokyo' OR Headquarter = 'Taiwan'
SELECT count ( * ) from Employees
SELECT Planned_Destruction_Date from Documents_to_be_Destroyed where Document_ID = 11
SELECT Employee_Name from Employees where Employee_ID = 30
SELECT T2.employee_name , T3.employee_name FROM Documents_to_be_destroyed AS T1 JOIN Employees AS T2 ON T1.Destruction_Authorised_by_Employee_ID = T2.employee_id JOIN Employees AS T3 ON T1.Destroyed_by_Employee_ID = T3.employee_id;
SELECT name FROM person EXCEPT SELECT name FROM PersonFriend
SELECT job FROM person WHERE name = 'Zach'
SELECT name FROM person EXCEPT SELECT name FROM PersonFriend
SELECT t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id WHERE team_name = 'Clemson'
SELECT t2.All_Home FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id WHERE team_name = 'Clemson'
SELECT t2.All_Road FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id WHERE team_name = 'Clemson'
SELECT t2.All_Games FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id WHERE team_name = 'Clemson'
SELECT t2.All_Games FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id WHERE team_name = 'Duke'
SELECT t2.All_Games , t1.location FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id WHERE team_name = 'Clemson'
SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses
SELECT zip_postcode FROM addresses where state_province_county = 'Colorado'
SELECT town_city FROM addresses where state_province_county = 'Colorado'
SELECT town_city FROM addresses where state_province_county = 'NorthCarolina'
SELECT zip_postcode FROM addresses
SELECT town_city FROM addresses UNION SELECT state_province_county FROM addresses
SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = "Democratic"
SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = "Liberal"
SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = "Democratic" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = "Liberal"
SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = "Democratic" INTERSECT SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = "Liberal"
SELECT id FROM teaches WHERE semester = 'Fall' AND YEAR = 2009
SELECT id FROM teaches WHERE semester = 'Fall' AND YEAR = 2009 EXCEPT SELECT id FROM teaches WHERE semester = 'Spring' AND YEAR = 2010
SELECT id FROM teaches WHERE semester = 'Fall' AND YEAR = 2009 EXCEPT SELECT id FROM teaches WHERE semester = 'Spring' AND YEAR = 2010
SELECT count ( cust_name ) FROM customer
SELECT count ( loan_type ) FROM loan
SELECT count ( distinct acc_type ) FROM customer
SELECT avg ( acc_bal ) FROM customer
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE amount > 3000
SELECT Annual_interchanges FROM station ORDER BY Annual_interchanges DESC LIMIT 1
SELECT sum ( Total_Passengers ) FROM station
SELECT LOCATION FROM station GROUP BY LOCATION HAVING count ( * )  = 1
SELECT LOCATION FROM station GROUP BY LOCATION HAVING count ( * ) = 1
SELECT Lname, Fname FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in
SELECT T2.Lname, T2.Fname FROM Faculty_Participates_in as T1 join Faculty as T2 on T1.Facid = T2.Facid
SELECT actid FROM Faculty_Participates_in as T1 join Faculty as T2 on T1.Facid = T2.Facid where T2.Lname = "Goodrich" and T2.Fname = "Michael" UNION SELECT actid FROM Faculty_Participates_in as T1 join Faculty as T2 on T1.Facid = T2.Facid where T2.Lname = "Masson" and T2.Fname = "Gerald"
select count ( * ) from faculty
SELECT FacID FROM Faculty EXCEPT SELECT FacID FROM Faculty_participates_in
SELECT count ( distinct instructor ) from Course
SELECT instructor from Course group by instructor order by count ( * ) desc limit 1
SELECT T2.Building FROM COURSE AS T1 JOIN FACULTY AS T2 ON T1.Instructor = T2.FacID GROUP BY T1.Instructor ORDER BY count ( * ) DESC LIMIT 1
SELECT * FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.organisation_id FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.organisation_id , T1.organisation_type , T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.organisation_id , T1.organisation_type , T1.organisation_details FROM Organisations AS T1 JOIN Research_Staff AS T2 ON T1.organisation_id = T2.employer_organisation_id GROUP BY T1.organisation_id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( distinct country ) from match_season
SELECT count ( distinct player ) from match_season
SELECT count ( distinct college ) from match_season
SELECT T1.Position FROM match_season AS T1 JOIN team AS T2 ON T1.Team = T2.Team_id WHERE T2.Name = "Ryley Goldner"
SELECT count ( * ) FROM assets
SELECT count ( * ) FROM Third_Party_Companies
SELECT count ( * ) , T1.company_id FROM Third_Party_Companies AS T1 JOIN Assets AS T2 ON T1.company_id = T2.supplier_company_id GROUP BY T1.company_id
SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count ( * ) DESC LIMIT 1
SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count ( * ) LIMIT 1
SELECT Policy_Type_Code FROM Customer_Policies where Customer_ID = '3'
SELECT Start_Date FROM Customer_Policies where Policy_ID = '143'
SELECT Policy_ID FROM Customer_Policies where Policy_Type_Code = 'Life'
SELECT Policy_Type_Code FROM Customer_Policies GROUP BY Policy_Type_Code ORDER BY count ( * ) DESC LIMIT 1
SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM STUDENT GROUP BY major ORDER BY count ( * ) DESC LIMIT 1
select LName,Fname from student where major in ( SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * ) DESC LIMIT 1 ) 
select advisor from student where major = ( SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * ) DESC LIMIT 1 ) 
select advisor from student where major in ( SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * ) DESC LIMIT 2 ) and major ! = ( SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM Documents
SELECT count ( document_id ) FROM Documents_with_expenses
SELECT distinct Document_Type_Code FROM Documents
SELECT distinct Budget_Type_Code FROM Documents_with_Expenses
SELECT count ( * ) FROM Documents WHERE document_id NOT IN ( SELECT document_id FROM Documents_with_expenses ) 
SELECT Company_ID,Name,Headquarters FROM company
SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT ( * ) > = 2
SELECT Headquarters FROM company GROUP BY Headquarters HAVING COUNT ( * ) >= 2
SELECT project_details FROM Projects where project_id = 1
SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes ) 
SELECT organisation_id FROM Projects WHERE project_id = 2
SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_outcomes ) 
SELECT name FROM company WHERE Sales_in_Billion > 200
SELECT name FROM company WHERE Sales_in_Billion > 200 ORDER BY Sales_in_Billion , Profits_in_Billion DESC
SELECT count ( * ) FROM company WHERE Sales_in_Billion > 200 ORDER BY Sales_in_Billion , Profits_in_Billion DESC
SELECT name FROM company WHERE Sales_in_Billion > 200 ORDER BY Sales_in_Billion , Profits_in_Billion DESC
SELECT name FROM company WHERE Sales_in_Billion > 200 ORDER BY Sales_in_Billion , Profits_in_Billion DESC
SELECT count ( DISTINCT dept_name ) FROM department where school_code = "BUS"
SELECT count ( DISTINCT dept_name ) , school_code FROM department GROUP BY school_code HAVING count ( DISTINCT dept_name ) < 5
SELECT resolution FROM song WHERE rating < 8
SELECT f_id,resolution FROM song WHERE resolution > ( SELECT max ( resolution ) FROM song WHERE rating < 8 ) 
SELECT f_id,resolution FROM song WHERE resolution > = 1080
SELECT song_name,rating FROM song WHERE resolution > = 1080
SELECT f_id FROM song WHERE resolution > ( SELECT max ( resolution ) FROM song WHERE rating < 8 ) 
SELECT t1.name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id ORDER BY t2.support_rate DESC LIMIT 1
SELECT t2.support_rate FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id where t1.name = "Vincent Montméat"
SELECT t2.oppose_rate FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id where t1.name = "Vincent Montméat"
SELECT t1.name , t1.sex FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id ORDER BY t2.support_rate DESC LIMIT 1
SELECT Account_details FROM Accounts order by Account_details desc limit 1
SELECT Account_details FROM Accounts WHERE Account_details LIKE "%5%"
SELECT Statement_ID FROM Accounts WHERE Account_details LIKE "%5%"
SELECT Account_details FROM Accounts WHERE Account_details LIKE "%9%"
SELECT Account_ID FROM Accounts WHERE Account_details LIKE "%9%"
SELECT max ( Account_details ) FROM Accounts UNION SELECT Account_details FROM Accounts WHERE Account_details LIKE "%5%"
SELECT name FROM Projects order by hours desc limit 1
SELECT code from Projects WHERE Name = 'A Magnetic Primer Designer'
SELECT Scientist from AssignedTo where Project ! = 'Bte2'
SELECT name FROM scientists EXCEPT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.hours = ( SELECT max ( hours ) FROM projects ) 
SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT ( * ) > 1
SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT ( * )  = 1
SELECT T1.Official_Name, T2.Theme FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT ( * ) = 1
SELECT T1.Census_Ranking FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID where T1.Official_Name = "Plaster Rock"
SELECT T1.Census_Ranking FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID where T2.Theme = "Carnival M is back!"
SELECT T1.Official_Name FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID HAVING COUNT ( * ) > 1
SELECT pixels FROM screen_mode
select count ( * ) from screen_mode
select * from phone where screen_mode = ( select max ( screen_mode ) from phone ) 
select chip_model from phone
SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode = t2.screen_mode WHERE t2.Accreditation_type = 'Provisional' INTERSECT SELECT t1.pixels FROM screen_mode AS t1 JOIN phone AS t2 ON t1.Graphics_mode = t2.screen_mode WHERE t2.Accreditation_type = 'Full'
SELECT dst_apid,dst_ap FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport'
SELECT * FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport'
SELECT count ( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport'
SELECT count ( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.name = 'John F Kennedy International Airport'
SELECT Product_Price FROM Products WHERE Product_Name = "Dinning"
SELECT Product_Price FROM Products WHERE Product_Name = "Trading Policy"
SELECT Product_Price FROM Products WHERE Product_Name = "Business Policy"
SELECT Product_Price FROM Products WHERE Product_Name = "Dining" OR Product_Name = "Trading Policy"
SELECT T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id = T3.part_fault_id GROUP BY T1.part_id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id = T3.part_fault_id GROUP BY T1.part_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.part_id , T1.part_name FROM Parts AS T1 JOIN Part_Faults AS T2 ON T1.part_id = T2.part_id JOIN Skills_Required_To_Fix AS T3 ON T2.part_fault_id = T3.part_fault_id GROUP BY T1.part_id ORDER BY count ( * ) DESC LIMIT 1
SELECT name FROM track WHERE year_opened > 2000
SELECT name, seating FROM track WHERE year_opened > 2000
SELECT name,location FROM track WHERE year_opened > 2000
SELECT name , seating FROM track WHERE year_opened > 2000 ORDER BY seating
SELECT T2.first_name , T2.last_name FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id ORDER BY count ( * ) DESC LIMIT 1
SELECT actor_id from actor where first_name = 'GINA' and last_name = 'DEGENERES'
SELECT last_update from actor where first_name = 'GINA' and last_name = 'DEGENERES'
SELECT T2.first_name , T2.last_name , T2.actor_id FROM film_actor AS T1 JOIN actor AS T2 ON T1.actor_id = T2.actor_id GROUP BY T2.actor_id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM member
SELECT Nationality FROM member where member_id = 4
SELECT Nationality FROM member group by Nationality order by count ( * ) desc limit 1
SELECT T2.Name , T3.Date FROM member_attendance AS T1 JOIN member AS T2 ON T1.Member_ID = T2.Member_ID JOIN performance AS T3 ON T1.Performance_ID = T3.Performance_ID ORDER BY T3.Attendance DESC
SELECT DISTINCT T2.lettergrade FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID order by T2.gradepoint limit 1
SELECT DISTINCT T3.Fname FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T2.gradepoint >= 3.8
SELECT count ( * ) FROM park
SELECT city FROM park where park_name = "Riverside Park"
SELECT state FROM park where park_name = "Columbia Park"
SELECT count ( * ) FROM home_game
SELECT count ( * ) FROM home_game where year = 1871
SELECT count ( * ) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T1.year = 1907 AND T2.park_name = 'Columbia Park';
SELECT COUNT ( * ) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id WHERE T2.subject_name = "Computer Science"
SELECT COUNT ( * ) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id WHERE T2.subject_name = "Arts"
SELECT COUNT ( * ) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id WHERE T2.subject_name = "Language"
SELECT T2.subject_name FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT ( * ) ASC
SELECT T1.subject_id , T2.subject_name , COUNT ( * ) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id ORDER BY COUNT ( * ) ASC
SELECT Police_force FROM county_public_safety WHERE LOCATION = "East"
SELECT Police_force FROM county_public_safety WHERE LOCATION = "West"
SELECT Police_force FROM county_public_safety WHERE LOCATION = "East" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION = "West"
select count ( * ) from ( SELECT Police_force FROM county_public_safety WHERE LOCATION = "East" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION = "West" ) 
SELECT Police_force FROM county_public_safety WHERE LOCATION = "East" INTERSECT SELECT Police_force FROM county_public_safety WHERE LOCATION = "West"
SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1
SELECT Headquartered_City FROM district ORDER BY city_population DESC LIMIT 1
SELECT City_Area FROM district ORDER BY city_population DESC LIMIT 1
SELECT count ( * ) FROM district where city_population > 500000
SELECT headquartered_city FROM district where city_population > 500000
SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1
SELECT min ( T1.duration ) , min ( T2.rating ) , T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is
SELECT artist_name from song
SELECT count ( * ) FROM song where artist_name = "Enrique"
SELECT min ( T1.duration ) , min ( T2.rating ) , T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is
SELECT TYPE FROM mill GROUP BY TYPE ORDER BY count ( * ) DESC LIMIT 1
SELECT TYPE, count ( * ) FROM mill GROUP BY TYPE ORDER BY count ( * ) DESC LIMIT 1
select built_year from mill where type = ( SELECT TYPE FROM mill GROUP BY TYPE ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT TYPE , count ( * ) FROM mill GROUP BY TYPE ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM exhibition
SELECT name FROM artist
SELECT age FROM artist where name = "Vijay Singh"
SELECT ticket_price FROM exhibition order by ticket_price desc limit 1
SELECT T1.theme , T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id WHERE T1.ticket_price > ( SELECT avg ( ticket_price ) FROM exhibition ) 
SELECT T1.theme , T2.name FROM exhibition AS T1 JOIN artist AS T2 ON T1.artist_id = T2.artist_id WHERE T1.ticket_price > ( SELECT avg ( ticket_price ) FROM exhibition ) 
SELECT player_name from player
SELECT T3.Player_name , T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID
SELECT T3.Player_name , T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID ORDER BY T3.Votes DESC
SELECT T3.Player_name, T3.gender, T2.coach_name, T2.gender FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID ORDER BY T3.Votes DESC
SELECT player_name, votes from player
SELECT player_name, votes from player order by votes desc
SELECT T3.Player_name , T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID ORDER BY T3.Votes DESC
SELECT count ( * ) FROM Faculty WHERE Rank = "Professor" AND building = "NEB"
SELECT count ( * ) FROM Faculty WHERE Rank = "Instructor" AND building = "NEB"
SELECT count ( * ) FROM Faculty WHERE building = "NEB"
SELECT count ( * ) FROM Faculty WHERE Rank = "Professor" AND building = "NEB"
SELECT avg ( salary ) FROM salary 
SELECT T1.name FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg ( T2.salary ) DESC LIMIT 1
SELECT T1.name FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg ( T2.salary ) ASC LIMIT 1
SELECT T1.name , T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg ( T2.salary ) ASC LIMIT 1;
SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum ( hoursperweek ) > 10
SELECT StuID FROM Sportsinfo where SportName = 'Football'
select avg ( HoursPerWeek ) from SportsInfo where SportName = 'Football'
select avg ( HoursPerWeek ) from SportsInfo
select distinct SportName from SportsInfo
select avg ( HoursPerWeek ) from SportsInfo where SportName = 'Lacrosse'
SELECT StuID FROM Sportsinfo
SELECT StuID FROM Sportsinfo GROUP BY StuID HAVING sum ( hoursperweek ) > 10
SELECT DISTINCT Name FROM Tourist_attractions
SELECT Name, Tourist_attraction_ID FROM Tourist_attractions
SELECT T1.Name , T2.Tourist_Attraction_ID , COUNT ( * ) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID
SELECT T1.Name , T2.Tourist_Attraction_ID , COUNT ( * ) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID
select ResName from Restaurant where ResID = 1
select address from Restaurant where ResID = 1
select Rating from Restaurant where ResID = 1
SELECT count ( * ) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID = Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich'
SELECT count ( * ) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID = Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich'
SELECT institution from institution where founded = 2003
SELECT T1.name from building as T1 JOIN institution as T2 on T1.building_id = T2.building_id WHERE T2.founded > 2003
SELECT T1.name from building as T1 JOIN institution as T2 on T1.building_id = T2.building_id WHERE T2.founded < 2003
SELECT name FROM building EXCEPT SELECT T1.name FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded = 2003
SELECT count ( * ) FROM STUDENT
SELECT Fname FROM STUDENT
SELECT Fname FROM STUDENT WHERE Fname LIKE "%a%"
SELECT DISTINCT Fname FROM STUDENT WHERE Fname LIKE '%a%'
SELECT address from customers where state = 'SP'
SELECT country from customers where support_rep_id = 5
SELECT name from tracks where album_id = 3
SELECT unit_price from tracks where id = 6
SELECT composer from tracks where genre_id = 1
SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = "Daan" AND T4.last_name = "Peeters";
SELECT T1.name_first , T1.name_last , T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count ( * ) DESC LIMIT 3
select name_first, name_last from player where player_id in ( SELECT T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count ( * ) DESC LIMIT 3 ) order by birth_year, birth_month, birth_day desc limit 1
SELECT T1.player_id, T2.league_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count ( * ) DESC LIMIT 3
SELECT T1.name_first , T1.name_last , T1.player_id FROM player AS T1 JOIN player_award AS T2 ON T1.player_id = T2.player_id GROUP BY T1.player_id ORDER BY count ( * ) DESC LIMIT 3;
SELECT max ( T2.price ) FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID
SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID WHERE T1.Title = "The Black Lamb"
SELECT T2.Price FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID WHERE T2.Publisher = "Wiley" and T2.Publication_Date = "June 2006"
SELECT Writer FROM book WHERE Title = "Bloody Mary"
SELECT T1.Writer FROM book AS T1 JOIN publication AS T2 ON T1.Book_ID = T2.Book_ID WHERE T2.Price > 4000000
SELECT country_name, country_id FROM country where Capital = "Dublin"
SELECT position FROM match_season where country = 4
SELECT player FROM match_season where country = 4
SELECT T1.player FROM match_season as T1 join country as T2 on T1.country = T2.country_id where T2.country_name = "Iraq"
SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Capital = "Dublin"
SELECT class_code FROM CLASS where CLASS_ROOM = 'BUS311'
SELECT PROF_NUM FROM CLASS where CRS_CODE = 'ACCT-211'
SELECT CLASS_TIME FROM CLASS where CLASS_SECTION = 3
SELECT count ( * ) , class_room FROM CLASS GROUP BY class_room HAVING count ( * )  > = 2
SELECT count ( * ) , class_room FROM CLASS GROUP BY class_room HAVING count ( * ) >= 2
SELECT DISTINCT dept_name FROM course
SELECT title FROM course WHERE dept_name = "Statistics"
SELECT title FROM course WHERE dept_name = 'Statistics' INTERSECT SELECT title FROM course WHERE dept_name = 'Psychology'
SELECT Year FROM film_market_estimation ORDER BY Year DESC
SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T2.Country = "Japan"
SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T2.Country = "Japan" ORDER BY T1.Year DESC
SELECT T1.Year FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID WHERE T2.Country = "Japan" ORDER BY T1.Year DESC
SELECT Team FROM Elimination WHERE Eliminated_By = "Orton"
SELECT Team FROM Elimination WHERE Eliminated_By = "Benjamin"
SELECT Elimination_Move FROM Elimination WHERE Eliminated_By = "Benjamin" and team = 'Team Batista'
SELECT Time FROM Elimination WHERE Eliminated_By = "Benjamin" and team = 'Team Batista'
SELECT Team FROM Elimination WHERE Eliminated_By = "Punk"
SELECT Elimination_Move FROM Elimination WHERE Eliminated_By = "Punk"
SELECT Team FROM Elimination WHERE Eliminated_By = "Orton" INTERSECT SELECT Team FROM Elimination WHERE Eliminated_By = "Benjamin"
select count ( student_id ) from Students where family_name = "Zieme"
select personal_name from Students where family_name = "Zieme"
SELECT T1.date_of_enrolment , T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.family_name = "Zieme" AND T2.personal_name = "Bernie"
SELECT T1.shipping_agent_name FROM Ref_Shipping_Agents AS T1 JOIN Documents AS T2 ON T2.shipping_agent_code = T1.shipping_agent_code GROUP BY T1.shipping_agent_code ORDER BY count ( T2.document_id ) DESC LIMIT 1
SELECT T1.shipping_agent_name FROM Ref_Shipping_Agents AS T1 JOIN Documents AS T2 ON T2.shipping_agent_code = T1.shipping_agent_code GROUP BY T1.shipping_agent_code ORDER BY count ( T2.document_id ) LIMIT 1
SELECT T2.receipt_date FROM Ref_Shipping_Agents AS T1 JOIN Documents AS T2 ON T2.shipping_agent_code = T1.shipping_agent_code WHERE T1.shipping_agent_name = "Airline"
SELECT Ref_Shipping_Agents.shipping_agent_name , count ( Documents.document_id ) FROM Ref_Shipping_Agents JOIN Documents ON Documents.shipping_agent_code = Ref_Shipping_Agents.shipping_agent_code GROUP BY Ref_Shipping_Agents.shipping_agent_code ORDER BY count ( Documents.document_id ) DESC LIMIT 1;
SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1
SELECT state FROM customer ORDER BY credit_score LIMIT 1
SELECT acc_type FROM customer ORDER BY credit_score LIMIT 1
SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1
SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT ( * ) LIMIT 1
SELECT avg ( amount_of_transaction ) FROM TRANSACTIONS WHERE transaction_type_code = "PUR"
SELECT avg ( amount_of_transaction ) FROM TRANSACTIONS WHERE transaction_type_code = "SALE"
SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T1.cust_id FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING sum ( T2.amount )  > = 5000
SELECT T1.cust_id,T1.cust_name,T1.acc_bal FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING sum ( T2.amount )  > = 5000
SELECT T1.credit_score,count ( * ) FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id where T1.cust_name = "Owen"
SELECT T1.cust_name , T1.acc_type FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name HAVING sum ( T2.amount ) > 5000
SELECT * FROM film WHERE special_features LIKE '%Deleted Scenes%'
SELECT count ( * ) FROM film WHERE special_features LIKE '%Deleted Scenes%'
SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'
SELECT title FROM film WHERE special_features LIKE '%Deleted Scenes%'
SELECT distinct StuID FROM Plays_games
SELECT distinct StuID FROM Sportsinfo
SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games
SELECT StuID FROM Sportsinfo INTERSECT SELECT StuID FROM Plays_games
SELECT name FROM roller_coaster order BY speed desc limit 1
SELECT height FROM roller_coaster order BY speed desc limit 1
SELECT status FROM roller_coaster order BY speed desc limit 1
SELECT Status FROM roller_coaster GROUP BY Status HAVING COUNT ( * ) > 2
SELECT Status FROM roller_coaster GROUP BY Status HAVING COUNT ( * ) > 2
SELECT organization_id FROM Organizations where organization_details = 'Denesik and Sons Party'
SELECT service_type_code FROM services where service_id = '10'
SELECT T2.organization_details FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id = T2.organization_id WHERE t1.service_id = '11'
SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id = T2.organization_id WHERE T2.organization_details = 'Denesik and Sons Party'
SELECT DISTINCT T1.service_type_code FROM services AS T1 JOIN organizations AS T2 ON T1.organization_id = T2.organization_id WHERE T2.organization_details = 'Denesik and Sons Party'
select max ( salary ) from instructor
SELECT T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math'
select salary from instructor where name = 'McKinnon'
select dept_name from instructor where name = 'McKinnon'
SELECT T2.name , T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math'
select custid,balance from savings
select balance from CHECKING
SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T3.balance LIMIT 1
SELECT T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid where T1.name = "Weeks"
SELECT T2.balance , T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T3.balance LIMIT 1
SELECT avg ( Population ) FROM county
SELECT county_name FROM county order by population asc limit 1
SELECT county_name FROM county order by population desc limit 1
SELECT zip_code FROM county order by population desc limit 1
SELECT max ( Population ) , min ( Population ) FROM county
SELECT name FROM manufacturers ORDER BY revenue DESC LIMIT 1
SELECT name FROM manufacturers ORDER BY revenue asc LIMIT 2,1
SELECT Founder FROM manufacturers where name = "Creative Labs"
SELECT avg ( Revenue ) FROM manufacturers
SELECT founder FROM manufacturers ORDER BY revenue DESC LIMIT 1
SELECT name , headquarter , founder FROM manufacturers ORDER BY revenue DESC LIMIT 1
SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Product_Name FROM Products WHERE Product_Type_Code = "Food"
SELECT Product_Price FROM Products WHERE Product_Type_Code = "Food"
SELECT Product_Name, Product_Price FROM Products WHERE Product_Type_Code = "Books"
SELECT Product_Name, Product_Type_Code FROM Products ORDER BY Product_Price DESC LIMIT 1
SELECT Product_Name, Product_Type_Code FROM Products WHERE Product_Price < ( SELECT AVG ( Product_Price ) FROM Products ) 
SELECT Product_Type_Code FROM Products GROUP BY Product_Type_Code ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT max ( T2.gradepoint ) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T3.city_code = "NYC"
SELECT min ( T2.gradepoint ) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T3.city_code = "NYC"
SELECT min ( T2.gradepoint ) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T3.city_code = "HKG"
SELECT max ( T2.gradepoint ) , min ( T2.gradepoint ) FROM ENROLLED_IN AS T1 JOIN GRADECONVERSION AS T2 JOIN STUDENT AS T3 ON T1.Grade = T2.lettergrade AND T1.StuID = T3.StuID WHERE T3.city_code = "NYC"
SELECT count ( * ) FROM INVOICES
SELECT count ( * ) FROM INVOICES where payment_method_code = "MasterCard"
SELECT count ( * ) FROM INVOICES where payment_method_code = "Visa"
SELECT Product_ID FROM INVOICES GROUP BY Product_ID ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT count ( * ) from student where age > 18
SELECT count ( * ) FROM Student WHERE Major = 600
SELECT Fname , Lname FROM Student WHERE Age > 18 AND Major = 600
SELECT Fname , Lname FROM Student WHERE Age > 18 AND Major = 600;
SELECT AVG ( credit_score ) FROM customer
SELECT MAX ( credit_score ) FROM customer
SELECT MAX ( acc_bal ) FROM customer
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id GROUP BY T1.cust_name ORDER BY sum ( T2.amount ) DESC LIMIT 1
SELECT count ( * ) FROM store
SELECT store_name FROM store
SELECT City_Population FROM district where Headquartered_City = "Attock City"
SELECT Area_size FROM store where store_name = "Neguac"
SELECT t3.headquartered_city , count ( * ) FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id GROUP BY t3.headquartered_city
SELECT Name FROM WINE WHERE Winery = "Brander"
SELECT Name,Year FROM WINE WHERE Winery = "Brander"
SELECT Name FROM WINE WHERE YEAR < ( SELECT min ( YEAR ) FROM WINE WHERE Winery = "Brander" ) 
SELECT Name FROM WINE WHERE YEAR < ( SELECT min ( YEAR ) FROM WINE WHERE Winery = "Brander" ) 
SELECT count ( * ) FROM trip WHERE duration > =  ( SELECT avg ( duration ) FROM trip WHERE zip_code = 94103 ) 
SELECT id FROM trip WHERE duration >= ( SELECT avg ( duration ) FROM trip WHERE zip_code = 94103 ) 
SELECT team_id, acc_percent FROM basketball_match
SELECT acc_percent FROM basketball_match order by acc_percent limit 1
SELECT acc_percent FROM basketball_match order by acc_percent desc limit 1
SELECT acc_percent FROM basketball_match ORDER BY acc_percent DESC LIMIT 1
select document_date from documents
select document_name from documents
select document_type_code from documents
SELECT T1.statement_details , T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id = T2.document_id WHERE T1.statement_details = 'Private Project'
SELECT Name FROM technician
SELECT machine_id FROM repair_assignment
SELECT technician_id, age FROM technician
SELECT Name FROM technician WHERE technician_id NOT IN ( SELECT technician_id FROM repair_assignment ) 
SELECT Name FROM technician WHERE technician_id NOT IN ( SELECT technician_id FROM repair_assignment ) 
SELECT count ( t2.section_title ) FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code WHERE t1.document_name = "David CV"
SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code WHERE t1.document_name = "David CV"
SELECT t2.section_code FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code WHERE t1.document_name = "David CV" and t2.section_title = "after"
SELECT t2.document_code FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code WHERE t1.document_name = "David CV" and t2.section_title = "after"
SELECT t2.section_title FROM documents AS t1 JOIN document_sections AS t2 ON t1.document_code = t2.document_code WHERE t1.document_name = "David CV"
SELECT document_type_code from documents where project_id = 30
SELECT statement_details from statements where statement_id = 197
SELECT document_name from documents where document_id = 42
SELECT T1.statement_details , T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id = T2.document_id WHERE T1.statement_details = 'Private Project'
SELECT T1.statement_details , T2.document_name FROM Statements AS T1 JOIN Documents AS T2 ON T1.statement_id = T2.document_id WHERE T1.statement_details = 'Private Project'
SELECT name from useracct
SELECT target_u_id from trust
SELECT T1.name FROM useracct AS T1 JOIN trust AS T2 ON T1.u_id = T2.target_u_id ORDER BY trust LIMIT 1
SELECT T1.date_incident_start , T1.date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.last_name = "Rohan"
SELECT T1.date_incident_start , date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.last_name = "Bergnaum"
SELECT T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id where T2.last_name = "Hansen"
SELECT T1.date_incident_start , date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.last_name = "Fahey"
SELECT Team FROM player ORDER BY Age LIMIT 1
SELECT Team FROM player WHERE Player = "Timothy Beckham"
SELECT Age, Position FROM player WHERE Player = "Timothy Beckham"
SELECT Position FROM player WHERE Player = "Eric Hosmer"
SELECT Team FROM player ORDER BY Age DESC LIMIT 5
SELECT T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.description, T1.rating,T1.special_features FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id ORDER BY count ( * ) DESC LIMIT 1
SELECT sum ( T2.Killed ) FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 1.84
SELECT count ( T2.Perpetrator_ID ) FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 1.84
SELECT date FROM perpetrator order by date asc limit 1
SELECT Injured FROM perpetrator order by date desc limit 1
SELECT country FROM perpetrator group by country order by sum ( Killed ) +sum ( Injured ) desc limit 1
SELECT sum ( T2.Killed ) FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Height > 1.84
SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id = T2.address_id WHERE T2.first_name = "Lyla"
SELECT T1.city FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id = T2.address_id WHERE T2.first_name = "Lyla"
SELECT last_name FROM teachers where first_name = "Lyla"
SELECT T1.zip_postcode FROM Addresses AS T1 JOIN Teachers AS T2 ON T1.address_id = T2.address_id WHERE T2.first_name = "Lyla"
SELECT count ( * ) FROM professor
SELECT count ( * ) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE DEPT_NAME = "Accounting"
SELECT count ( * ) FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE DEPT_NAME = "Accounting"
select course_id, prereq_id from prereq
SELECT course_id from prereq GROUP BY course_id HAVING count ( * ) > 1
SELECT T1.title , T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count ( * ) > 1
SELECT sum ( T3.credits ) FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id join course as T3 on T3.course_id = T2.prereq_id where T1.title = "Game Programming"
SELECT T1.title , T1.credits , T1.dept_name FROM course AS T1 JOIN prereq AS T2 ON T1.course_id = T2.course_id GROUP BY T2.course_id HAVING count ( * ) > 1
SELECT customer_first_name , customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name , T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id
SELECT T1.customer_address FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id where T2.other_account_details = 'VIP'
SELECT T2.account_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id where T1.customer_first_name like "%G%" or T1.customer_first_name like "%A%" or T1.customer_last_name like "%G%" or T1.customer_last_name like "%A%"
SELECT customer_first_name , customer_last_name FROM Customers EXCEPT SELECT T1.customer_first_name , T1.customer_last_name FROM Customers AS T1 JOIN Accounts AS T2 ON T1.customer_id = T2.customer_id
SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = "Sales Person" EXCEPT SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = "Clerical Staff"
SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = "Sales Person"
SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id EXCEPT SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = "Clerical Staff"
SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = "Sales Person" EXCEPT SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = "Clerical Staff"
SELECT COUNT ( * ) FROM phone
SELECT Company_name FROM phone
SELECT Hardware_Model_name FROM phone
SELECT chip_model FROM phone WHERE Hardware_Model_name = "XPERIA T, XPERIA J"
SELECT Hardware_Model_name , Company_name FROM phone WHERE Accreditation_type LIKE 'Full';
SELECT district FROM address
SELECT district FROM address GROUP BY district HAVING count ( * ) > = 2
SELECT district FROM address GROUP BY district HAVING count ( * ) >= 2
select track_id from track
select track_id,name from track
SELECT T2.track_id,T2.name,count ( * ) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id
SELECT T2.track_id,T2.name,count ( * ) FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id having count ( * ) > 1
SELECT T2.name FROM race AS T1 JOIN track AS T2 ON T1.track_id = T2.track_id GROUP BY T1.track_id ORDER BY count ( * ) DESC LIMIT 1
SELECT t2.station_id, count ( * ) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id
SELECT network_name FROM station
SELECT services FROM station
SELECT count ( * ) , t1.network_name , t1.services FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id
SELECT staff_name, staff_gender FROM Staff
SELECT department_id, job_title_code FROM Staff_Department_Assignments
SELECT count ( * ) FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id Where T2.job_title_code = "Sales Person" OR T2.job_title_code = "Clerical Staff"
SELECT T1.staff_id , T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1
SELECT T1.staff_id , T1.staff_name FROM staff AS T1 JOIN Staff_Department_Assignments AS T2 ON T1.staff_id = T2.staff_id ORDER BY date_assigned_to - date_assigned_from LIMIT 1
SELECT email_address FROM Students WHERE first_name = "Emma"
SELECT student_id FROM Students WHERE last_name = "Rohan"
SELECT email_address FROM Students WHERE student_id = 4
SELECT email_address FROM Students WHERE first_name = "Emma" AND last_name = "Rohan"
SELECT forename , surname FROM drivers
SELECT T1.forename , T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1
SELECT nationality FROM drivers WHERE forename = "Lewis" and surname = "Hamilton"
SELECT T1.forename , T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds LIMIT 1
SELECT avg ( age ) FROM Person WHERE gender = 'male'
SELECT job FROM Person WHERE gender = 'male'
SELECT avg ( age ) , job FROM Person WHERE gender = 'male' GROUP BY job
SELECT avg ( age ) , job FROM Person WHERE gender = 'male' GROUP BY job
select id,name from genres order by id desc limit 5
SELECT T1.id,COUNT ( * ) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count ( * ) DESC LIMIT 5
SELECT t1.id,T2.composer FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count ( * ) DESC LIMIT 5
select composer from tracks order by milliseconds
SELECT T1.name , COUNT ( * ) FROM genres AS T1 JOIN tracks AS T2 ON T2.genre_id = T1.id GROUP BY T1.id ORDER BY count ( * ) DESC LIMIT 5;
SELECT first_name , last_name FROM employees
SELECT T1.first_name , T1.last_name , T2.department_name FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id
SELECT T1.first_name , T1.last_name , T2.department_name , T3.city , T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id
SELECT T1.first_name , T1.last_name , T2.department_name , T3.city , T3.state_province FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id
select name from airports where city = 'Goroka'
select country from airports where city = 'Madang'
select distinct rid from routes where alid = '410'
SELECT T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid WHERE T1.country = 'China' GROUP BY T1.name ORDER BY count ( * ) DESC LIMIT 1
SELECT name FROM captain order by age desc limit 1
select rank from captain where name = "Captain Gilbert Pears"
select rank from captain where name = "Captain Henry Dumaresq"
SELECT avg ( age ) , min ( age ) , CLASS FROM captain GROUP BY CLASS
SELECT COUNT ( * ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T2.Election_Cycle = "Spring"
SELECT COUNT ( * ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T1.Sex = "F" AND T2.Election_Cycle = "Spring"
SELECT T1.Age FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T2.Election_Cycle = "Spring"
SELECT avg ( T1.Age ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T1.Sex = "F" AND T2.Election_Cycle = "Spring"
SELECT first_name FROM customer WHERE customer_id IN ( SELECT customer_id FROM rental WHERE rental_date < = '2005-08-23 00:00:00' ) 
SELECT customer_id FROM customer WHERE customer_id NOT IN ( SELECT customer_id FROM rental WHERE rental_date > '2005-08-23 02:06:01' ) 
SELECT first_name FROM customer WHERE customer_id NOT IN ( SELECT customer_id FROM rental WHERE rental_date > '2005-08-23 02:06:01' ) 
SELECT first_name FROM customer WHERE customer_id NOT IN ( SELECT customer_id FROM rental WHERE rental_date > '2005-08-23 02:06:01' ) 
SELECT count ( * ) FROM course
SELECT count ( * ) FROM course where dept_name = 'Mech. Eng.'
SELECT count ( * ) FROM course where dept_name = 'Mech. Eng.' and credits > 3
select distinct ( dept_name ) from course where title in ( SELECT title FROM course where dept_name = 'Mech. Eng.' and credits > 3 ) and dept_name ! = 'Mech. Eng.'
select count ( * ) from course where title in ( SELECT title FROM course where dept_name = 'Mech. Eng.' and credits > 3 ) and dept_name ! = 'Mech. Eng.'
SELECT title FROM course GROUP BY title HAVING count ( * ) > 1
SELECT count ( distinct store_id ) FROM inventory
SELECT * FROM inventory GROUP BY store_id ORDER BY count ( * ) asc LIMIT 1
SELECT * FROM inventory GROUP BY store_id ORDER BY count ( * ) desc LIMIT 1
SELECT store_id FROM inventory GROUP BY store_id ORDER BY count ( * ) DESC LIMIT 1
SELECT Birth_Place FROM people GROUP BY Birth_Place HAVING COUNT ( * )  > = 2
SELECT Name FROM people order by weight desc limit 1
SELECT Name FROM people order by weight asc limit 1
SELECT Birth_Place FROM people GROUP BY Birth_Place HAVING COUNT ( * ) >= 2
SELECT Appelation FROM WINE WHERE YEAR > 2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area = "Central Coast"
SELECT COUNT ( * ) FROM appellations WHERE Area = "Sierra Foothills"
SELECT COUNT ( * ) FROM appellations WHERE County = "Napa"
SELECT COUNT ( * ) FROM wine WHERE Appelation = "St. Helena"
SELECT Appelation FROM WINE WHERE YEAR > 2008 EXCEPT SELECT Appelation FROM APPELLATIONS WHERE Area = "Central Coast"
SELECT name FROM station
SELECT name , main_services FROM station ORDER BY total_passengers DESC LIMIT 3
SELECT t2.network_name FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id GROUP BY t1.station_id ORDER BY avg ( high_temperature ) DESC LIMIT 1
SELECT ID FROM station WHERE network_name = "Chorleywood"
SELECT local_authority FROM station WHERE network_name = "Chorleywood"
SELECT t2.id , t2.local_authority FROM weekly_weather AS t1 JOIN station AS t2 ON t1.station_id = t2.id GROUP BY t1.station_id ORDER BY avg ( high_temperature ) DESC LIMIT 1
SELECT Fname , Lname, building FROM FACULTY WHERE sex = "M"
SELECT Fname , Lname FROM FACULTY WHERE sex = "M" AND Building = "NEB"
SELECT Fname , Lname, room FROM FACULTY WHERE sex = "M" AND Building = "NEB"
SELECT Fname , Lname FROM FACULTY WHERE sex = "M" AND Building = "NEB"
SELECT count ( * ) FROM College WHERE enr > 18000
SELECT cName FROM College WHERE enr > 18000
SELECT enr FROM College WHERE cName = 'OU'
SELECT enr FROM College WHERE cName = 'LSU'
SELECT state FROM College WHERE cName = 'LSU'
SELECT state FROM College WHERE cName = 'OU'
SELECT cName FROM College WHERE enr > 18000 ORDER BY cName
SELECT T1.department_id , T1.name , count ( * ) FROM management AS T2 JOIN department AS T1 ON T1.department_id = T2.department_id GROUP BY T1.department_id HAVING count ( * ) > 1
SELECT ranking, creation from department where num_employees = ( select max ( num_employees ) from department ) 
SELECT ranking, creation from department where num_employees = ( select min ( num_employees ) from department ) 
SELECT ranking, creation from department where Budget_in_Billions = ( select max ( Budget_in_Billions ) from department ) 
SELECT T1.department_id , T1.name , count ( * ) FROM management AS T2 JOIN department AS T1 ON T1.department_id = T2.department_id GROUP BY T1.department_id HAVING count ( * ) > 1
SELECT T1.student_id , T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT ( * ) < = 2
SELECT T1.date_of_enrolment, T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT ( * ) < = 2
SELECT T2.personal_name, T2.middle_name, T2.family_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id order by T1.date_of_completion desc limit 1
SELECT T1.student_id , T2.middle_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id HAVING COUNT ( * ) <= 2
SELECT T2.product_name FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3
SELECT T2.product_type_code FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3
SELECT T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3
SELECT T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3
SELECT T1.supplier_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = 'red jeans'
SELECT T1.supplier_id,T1.total_amount_purchased FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T2.product_name = 'red jeans'
SELECT T2.product_type_code , T2.product_name , T2.product_price FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 3
SELECT region_name FROM region WHERE region_id NOT IN ( SELECT region_id FROM affected_region ) 
SELECT region_name FROM region WHERE region_id IN ( SELECT region_id FROM affected_region ) 
SELECT region_name FROM region WHERE region_id NOT IN ( SELECT region_id FROM affected_region ) 
SELECT count ( * ) from apartments
SELECT count ( * ) from apartments where apt_type_code = 'Flat'
SELECT count ( * ) from apartments where apt_type_code = 'Studio'
SELECT T1.building_address FROM Apartment_Buildings AS T1 JOIN Apartments AS T2 ON T1.building_id = T2.building_id WHERE T2.bathroom_count > 2
SELECT COUNT ( * ) FROM Customers
SELECT customer_id, COUNT ( * ) FROM Complaints GROUP BY customer_id
SELECT product_id FROM Complaints GROUP BY product_id ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id = t2.customer_id WHERE T2.product_id = 117
SELECT t1.email_address FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id = t2.customer_id GROUP BY t1.customer_id ORDER BY count ( * ) LIMIT 1
SELECT count ( * ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.President_VOTE WHERE T1.sex = "F"
SELECT distinct T1.Fname , T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.President_VOTE WHERE T1.sex = "F"
SELECT sum ( T2.President_VOTE ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.President_VOTE WHERE T1.sex = "F"
SELECT sum ( T2.Secretary_VOTE ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.President_VOTE WHERE T1.sex = "F"
SELECT sum ( T2.Vice_President_VOTE ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.President_VOTE WHERE T1.sex = "F"
SELECT DISTINCT T1.Fname , T1.LName FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = T2.President_VOTE WHERE T1.sex = "F"
SELECT creation FROM department GROUP BY creation ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM department GROUP BY creation ORDER BY count ( * ) DESC LIMIT 1
SELECT name FROM department GROUP BY creation ORDER BY count ( * ) DESC LIMIT 1
SELECT Num_Employees FROM department where name = "Treasury"
SELECT Budget_in_Billions FROM department where name = "Treasury"
SELECT creation FROM department GROUP BY creation ORDER BY count ( * ) DESC LIMIT 1
select Project_ID from Projects
select Project_ID,Project_Details from Projects
SELECT T1.project_id , T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id HAVING count ( * ) > 2
SELECT T1.project_id , T1.project_details FROM Projects AS T1 JOIN Documents AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id HAVING count ( * ) > 2
SELECT DISTINCT ( competition_type ) FROM competition
SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT ( * )  > = 5
SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT ( * ) < = 5
SELECT Competition_type FROM competition GROUP BY Competition_type HAVING COUNT ( * ) <= 5
select order_id ,customer_id from Customer_Orders where order_status = 'Cancelled'
select order_id from Order_Items order by order_quantity limit 1
select count ( customer_id ) from Customer_Orders where order_status = 'Delivered'
SELECT sum ( t2.order_quantity ) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id = t2.order_id WHERE t1.order_status = "Cancelled"
SELECT T2.Visit_Date FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID = T2.Tourist_ID WHERE T1.Tourist_Details = "Vincent"
SELECT T1.Tourist_ID FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID = T2.Tourist_ID WHERE T1.Tourist_Details = "Vincent"
SELECT T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID = T2.Tourist_ID WHERE T1.Tourist_Details = "Vincent"
SELECT T2.Visit_Date , T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID = T2.Tourist_ID WHERE T1.Tourist_Details = "Vincent"
SELECT product_id FROM order_items GROUP BY product_id ORDER BY count ( * ) DESC LIMIT 1
SELECT product_id FROM order_items GROUP BY product_id ORDER BY count ( * ) LIMIT 1
SELECT count ( * ) FROM order_items GROUP BY product_id having product_id = "2"
SELECT count ( * ) FROM order_items GROUP BY product_id having product_id = "13"
SELECT product_id FROM order_items GROUP BY product_id ORDER BY count ( * ) DESC LIMIT 1
SELECT customer_name FROM customers
SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id WHERE t3.state_province_county = "Colorado"
SELECT t1.customer_name, t3.address_content, t3.city, t3.zip_postcode FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id WHERE t3.state_province_county = "Colorado"
SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id WHERE t3.state_province_county = "Colorado"
SELECT T3.Pilot_name , T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID ORDER BY T3.Rank
SELECT Pilot_name,Nationality from pilot
SELECT distinct ( Fuel_Propulsion ) from aircraft
SELECT T3.Pilot_name , T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID ORDER BY T3.Rank
SELECT sum ( Domestic_Passengers ) FROM airport WHERE Airport_Name LIKE "%London%"
SELECT sum ( Domestic_Passengers ) FROM airport WHERE Airport_Name LIKE "%Heathrow%"
SELECT sum ( International_Passengers ) FROM airport WHERE Airport_Name LIKE "%Heathrow%"
SELECT sum ( Domestic_Passengers ) FROM airport WHERE Airport_Name LIKE "%London%"
SELECT T3.Name , COUNT ( * ) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name
SELECT T3.Name , t3.age, t3.Nationality, COUNT ( * ) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name
SELECT T3.Name , t2.name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID where t3.age = ( select max ( age ) from journalist ) 
SELECT T3.Name , COUNT ( * ) FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID GROUP BY T3.Name
SELECT COUNT ( * ) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN ( SELECT name FROM Person WHERE age > 40 ) 
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN ( SELECT name FROM Person WHERE age > 40 ) 
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN ( SELECT name FROM Person WHERE age > 40 ) EXCEPT SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend IN ( SELECT name FROM Person WHERE age < 30 ) 
select count ( * ) from ( SELECT * FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = "english" GROUP BY T2.artist_name HAVING count ( * )  > = 1 ) 
SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = "english" GROUP BY T2.artist_name HAVING count ( * )  > = 1
SELECT count ( * ) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.artist_name = "Enrique"
select count ( * ) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.artist_name = ( SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = "english" and T1.artist_name ! = "Enrique" GROUP BY T2.artist_name HAVING count ( * )  > = 1 ) 
SELECT T1.artist_name , count ( * ) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = "english" GROUP BY T2.artist_name HAVING count ( * ) >= 1
SELECT classroom FROM list GROUP BY classroom ORDER BY count ( * ) DESC LIMIT 1
SELECT grade FROM list GROUP BY classroom ORDER BY count ( * ) DESC LIMIT 1
SELECT LastName FROM list GROUP BY classroom ORDER BY count ( * ) DESC LIMIT 1
SELECT classroom FROM list GROUP BY classroom ORDER BY count ( * ) DESC LIMIT 1
SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date > ( SELECT min ( order_date ) FROM Customer_Orders WHERE order_status_code = "Cancelled" ) 
SELECT order_status_code FROM Customer_Orders WHERE order_id = 3
SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date > ( SELECT min ( order_date ) FROM Customer_Orders WHERE order_status_code = "Cancelled" ) 
SELECT count ( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor where T1.Rank = "Professor"
SELECT count ( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor where T1.Rank = "Instructor"
SELECT T1.rank , count ( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.rank
SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.Region_name = 'Afghanistan' AND T3.Dates_active = "May19–May25" INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.Region_name = 'Albania' AND T3.Dates_active = "May19–May25"
select T1.Name from Storm as T1 join affected_region as T2 on T1.Storm_ID = T2.Storm_ID where T2.Number_city_affected = 10.0 or T2.Number_city_affected = 15.0
SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.Region_name = 'Afghanistan' INTERSECT SELECT T3.Name FROM affected_region AS T1 JOIN region AS T2 ON T1.region_id = T2.region_id JOIN storm AS T3 ON T1.storm_id = T3.storm_id WHERE T2.Region_name = 'Albania'
SELECT name FROM procedures order by cost desc limit 1
SELECT count ( * ) FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment where T3.Name = 'Complete Walletectomy'
SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment where T3.Name = 'Complete Walletectomy'
SELECT T2.CertificationDate FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment where T3.Name = 'Complete Walletectomy'
SELECT T1.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment ORDER BY T3.cost DESC LIMIT 1
SELECT State FROM representative GROUP BY State HAVING COUNT ( * )  > = 2
select name from representative where state in ( SELECT state FROM representative GROUP BY State HAVING COUNT ( * )  > = 2 ) 
SELECT party from representative where state in ( select state FROM representative GROUP BY State HAVING COUNT ( * )  > = 2 ) 
SELECT State FROM representative GROUP BY State HAVING COUNT ( * ) >= 2
SELECT title FROM papers
SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid = t2.paperid WHERE t1.authorder > 2
SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid = t2.paperid WHERE t1.authorder =  ( SELECT max ( authorder ) FROM authorship ) 
SELECT t2.title FROM authorship AS t1 JOIN papers AS t2 ON t1.paperid = t2.paperid WHERE t1.authorder = ( SELECT max ( authorder ) FROM authorship ) 
SELECT * FROM products ORDER BY product_price LIMIT 1
SELECT product_id , product_type_code FROM products ORDER BY product_price LIMIT 1
SELECT product_id , product_type_code FROM products ORDER BY product_price LIMIT 1
SELECT dorm_name FROM dorm WHERE dormid NOT IN ( SELECT dormid FROM has_amenity ) 
SELECT dorm_name FROM dorm order by student_capacity desc limit 1
SELECT dorm_name FROM dorm order by student_capacity asc limit 1
SELECT avg ( student_capacity ) FROM dorm
SELECT dormid FROM dorm order by student_capacity asc limit 1
SELECT dorm_name FROM dorm WHERE dormid NOT IN ( SELECT dormid FROM has_amenity ) 
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT ( * ) DESC LIMIT 1
select count ( * ) from Student_Course_Enrolment AS T1 JOIN Courses AS T2 ON T2.course_id = T1.course_id WHERE course_name = 'French'
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT ( * ) LIMIT 1
select count ( * ) from Student_Course_Enrolment AS T1 JOIN Courses AS T2 ON T2.course_id = T1.course_id WHERE course_name = 'Chinese Painting'
select student_id from Student_Course_Enrolment AS T1 JOIN Courses AS T2 ON T2.course_id = T1.course_id WHERE course_name = 'Chinese Painting'
select distinct course_name from Student_Course_Enrolment AS T1 JOIN Courses AS T2 ON T2.course_id = T1.course_id WHERE student_id = '15' and course_name ! = 'Chinese Painting'
SELECT T1.course_name FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT COUNT ( * ) FROM Player_Attributes WHERE preferred_foot = "left"
SELECT COUNT ( * ) FROM ( SELECT player_api_id FROM Player WHERE height > = 180 AND height < = 190 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = "left" ) 
SELECT player_api_id FROM Player WHERE height > = 180 AND height < = 190 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = "left"
SELECT player_name FROM Player AS T1 JOIN Player_AttributesAS T2 ON t1.player_api_id = T2.player_api_id WHERE T2.preferred_foot = "left" order by height desc limit 1
SELECT player_api_id FROM Player WHERE height >= 180 AND height <= 190 INTERSECT SELECT player_api_id FROM Player_Attributes WHERE preferred_foot = "left"
select Name from company order by Sales_in_Billion desc limit 1
select distinct Industry from company
SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID order by count ( * ) desc limit 1
SELECT T2.Year FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID order by count ( * ) desc limit 1
SELECT T2.musical_id FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID where T1.Character = "Lou Carpenter"
SELECT T2.Name , COUNT ( * ) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID
SELECT name FROM city WHERE county_ID = ( SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1 ) 
SELECT Police_officers FROM county_public_safety WHERE County_ID = ( select County_ID from city where Name = 'Aibonito' ) 
SELECT Population FROM county_public_safety WHERE County_ID = ( select County_ID from city where Name = 'Aibonito' ) 
SELECT Crime_rate FROM county_public_safety WHERE County_ID = ( select County_ID from city where Name = 'Aibonito' ) 
SELECT Residents_per_officer FROM county_public_safety WHERE County_ID = ( select County_ID from city where Name = 'Aibonito' ) 
SELECT name FROM city WHERE county_ID = ( SELECT county_ID FROM county_public_safety ORDER BY Police_officers DESC LIMIT 1 ) 
SELECT AVG ( Max_speed ) FROM storm
SELECT MAX ( Max_speed ) FROM storm
SELECT SUM ( Number_Deaths ) FROM storm
SELECT name FROM storm WHERE storm_id NOT IN ( SELECT storm_id FROM affected_region ) 
SELECT T2.src_apid,T2.src_ap,T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T1.name
SELECT count ( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T1.name
SELECT T1.name, count ( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T1.name
SELECT count ( * ) , T1.name FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.src_apid GROUP BY T1.name
SELECT T2.product_name FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id
SELECT T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id
SELECT T2.product_details FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id
SELECT count ( * ) , T2.product_id FROM problems AS T1 JOIN product AS T2 ON T1.product_id = T2.product_id WHERE T1.date_problem_reported > "1986-11-13" GROUP BY T2.product_id
SELECT Nationality FROM journalist WHERE Name = "Jackie Waring"
SELECT * FROM journalist WHERE Name ! = "Jackie Waring" AND Nationality = "England"
SELECT AGE FROM journalist WHERE Name = "Herbert Swindells"
SELECT T3.Name , T2.Name FROM news_report AS T1 JOIN event AS T2 ON T1.Event_ID = T2.Event_ID JOIN journalist AS T3 ON T1.journalist_ID = T3.journalist_ID ORDER BY T2.Event_Attendance ASC
SELECT customer_name, payment_method FROM Customers
SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count ( * ) DESC LIMIT 1
SELECT customer_name FROM customers WHERE payment_method = ( SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id GROUP BY t2.customer_details ORDER BY count ( * ) DESC LIMIT 1
SELECT t2.customer_id, t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id GROUP BY t2.customer_details ORDER BY count ( * ) DESC LIMIT 1
SELECT t2.customer_id, t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id GROUP BY t2.customer_details ORDER BY count ( * ) DESC LIMIT 1
SELECT Policy_Type_Code FROM policies where Customer_ID = 380
SELECT Policy_Type_Code,Start_Date FROM policies where Customer_ID = 380
SELECT Policy_Type_Code,Start_Date,End_Date FROM policies where Customer_ID = 380
SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id GROUP BY t2.customer_details ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( distinct city ) frOM branch WHERE membership_amount > 100
SELECT Branch_ID FROM branch WHERE open_year = 2000
SELECT Open_year FROM branch WHERE name = "Stanley"
SELECT Address_road FROM branch WHERE name = "Stanley"
SELECT city FROM branch WHERE open_year = 2001 AND membership_amount > 100
SELECT date_complaint_raised from complaints order by date_complaint_raised desc limit 1
SELECT date_complaint_closed from complaints where date_complaint_raised = '2007-10-14 21:50:43'
SELECT customer_id from complaints where date_complaint_raised = '2007-10-14 21:50:43'
SELECT phone_number FROM customers where customer_id = 118
SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id = t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1
SELECT count ( * ) FROM Restaurant
SELECT count ( * ) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID = Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich'
SELECT ResName FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID = Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich'
SELECT Address FROM Restaurant where ResName = 'Subway'
SELECT Rating FROM Restaurant where ResName = 'Subway'
SELECT count ( * ) FROM Restaurant JOIN Type_Of_Restaurant ON Restaurant.ResID = Type_Of_Restaurant.ResID JOIN Restaurant_Type ON Type_Of_Restaurant.ResTypeID = Restaurant_Type.ResTypeID GROUP BY Type_Of_Restaurant.ResTypeID HAVING Restaurant_Type.ResTypeName = 'Sandwich'
SELECT course_name FROM Courses
SELECT T1.course_name , COUNT ( * ) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name
SELECT T1.course_name , COUNT ( * ) FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id GROUP BY T1.course_name
SELECT T1.LastName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T2.roomId = "IBS"
SELECT bedtype FROM rooms WHERE roomid = "HBB"
SELECT T1.checkin, T1.checkout FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T2.roomid = "RND"
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room ORDER BY count ( * ) DESC LIMIT 1;
SELECT Name from company where Company_ID = 1.0
SELECT T3.Name , T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID ORDER BY T1.Year_working
SELECT Company_ID from company where Headquarters = "USA"
SELECT T3.Name , T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID ORDER BY T1.Year_working
SELECT avg ( Rate ) FROM Reservations
SELECT CheckOut FROM Reservations
SELECT CheckIn FROM Reservations
SELECT count ( Adults ) FROM Reservations WHERE CheckIn = "2010-10-23" AND FirstName = "CONRAD" AND LastName = "SELBIG"
SELECT Adults FROM Reservations WHERE CheckIn = "2010-10-23" AND FirstName = "CONRAD" AND LastName = "SELBIG";
SELECT COUNT ( * ) FROM stadium
SELECT name FROM stadium
SELECT Average_Attendance FROM stadium WHERE name = "Cowboys Stadium"
SELECT Capacity_Percentage FROM stadium WHERE name = "FedExField"
SELECT name FROM stadium WHERE name LIKE "%Bank%"
SELECT t1.customer_name , t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = "Delivered"
SELECT distinct customer_id from Customer_Orders where order_status = 'Cancelled'
SELECT distinct t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_details = 'NULL'
SELECT t1.customer_name , t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id WHERE order_status = "Delivered"
SELECT name , trade_name FROM medicine
SELECT name , trade_name FROM medicine EXCEPT SELECT T1.name , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id JOIN enzyme AS T3 ON T3.id = T2.enzyme_id WHERE T3.product = 'Protoporphyrinogen IX'
select count ( * ) from body_builder
SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID
SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Total > 250
SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID WHERE T1.Total > 300
SELECT T2.customer_first_name, count ( * ) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id
SELECT T2.customer_first_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count ( * )  > = 2
SELECT T2.customer_first_name , T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count ( * ) >= 2
SELECT count ( * ) from artist
SELECT count ( * ) from song
SELECT song_name from song
SELECT artist_name from song where song_name = "My love"
SELECT country from song where artist_name = "Enrique"
SELECT T1.artist_name , T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.song_name LIKE "%love%"
SELECT name FROM products WHERE price > = 180 order by name ASC
SELECT name, price FROM products WHERE price > = 180 order by price asc
SELECT name, price, manufacturer FROM products WHERE price > = 180 order by price asc
SELECT name , price FROM products WHERE price >= 180 ORDER BY price DESC , name ASC
SELECT Builder FROM railway GROUP BY Builder ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Railway FROM railway GROUP BY Builder having Builder = "GWR Swindon" ORDER BY built DESC limit 1
SELECT Built FROM railway GROUP BY Builder having Builder = "GWR Swindon"order by Built desc limit 1
SELECT Builder FROM railway GROUP BY Builder ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Name FROM manufacturers order by revenue desc limit 1
SELECT Headquarter FROM manufacturers where name = 'Iomega'
SELECT Name FROM manufacturers where Headquarter = 'Austin'
SELECT Revenue FROM manufacturers where Name = 'Creative Labs'
SELECT count ( * ) FROM manufacturers where revenue>100.0
SELECT sum ( revenue ) FROM manufacturers where revenue>100.0
SELECT sum ( revenue ) FROM manufacturers WHERE revenue > ( SELECT min ( revenue ) FROM manufacturers WHERE headquarter = 'Austin' ) 
SELECT T1.part_id FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name
SELECT chargeable_amount FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name
SELECT T1.part_name , count ( * ) FROM Parts AS T1 JOIN Asset_Parts AS T2 ON T1.part_id = T2.part_id GROUP BY T1.part_name
SELECT count ( DISTINCT T1.county ) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id = T2.campus
SELECT count ( * ) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id = T2.campus WHERE T1.county = "Orange"
SELECT T1.campus , sum ( T2.degrees ) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id = T2.campus WHERE T1.county = "Orange" AND T2.year > = 2000 GROUP BY T1.campus
SELECT T1.campus , sum ( T2.degrees ) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id = T2.campus WHERE T1.county = "Orange" AND T2.year >= 2000 GROUP BY T1.campus
SELECT DISTINCT outcome_code FROM Project_Outcomes
SELECT outcome_description FROM research_outcomes
SELECT project_details FROM projects
SELECT outcome_details FROM project_outcomes
SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code = T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'
SELECT T1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id JOIN Research_outcomes AS T3 ON T2.outcome_code = T3.outcome_code WHERE T3.outcome_description LIKE '%Published%'
SELECT count ( * ) FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE dept_name = "Computer Info. Systems"
SELECT crs_description FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE dept_name = "Computer Info. Systems"
SELECT count ( * ) FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE dept_name = "Biology"
SELECT count ( * ) FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE dept_name = "Accounting"
SELECT t2.crs_credit FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE dept_name = "Accounting"
SELECT count ( * ) FROM department AS T1 JOIN course AS T2 ON T1.dept_code = T2.dept_code WHERE dept_name = "Computer Info. Systems"
SELECT count ( Name ) from event
SELECT count ( distinct Capacity ) from stadium
SELECT t1.name FROM stadium AS t1 JOIN event AS t2 ON t1.id = t2.stadium_id GROUP BY t2.stadium_id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.country = 'Italy'
SELECT count ( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid JOIN airlines AS T3 ON T1.alid = T3.alid WHERE T2.country = 'Italy' AND T3.name = 'American Airlines'
SELECT t1.src_ap FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid JOIN airlines AS T3 ON T1.alid = T3.alid WHERE T2.country = 'Italy' AND T3.name = 'American Airlines'
SELECT count ( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid JOIN airlines AS T3 ON T1.alid = T3.alid WHERE T2.country = 'Italy' AND T3.name = 'American Airlines'
SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count ( * ) > 1
SELECT phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count ( * ) > 1
SELECT pcp FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count ( * ) > 1
SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count ( * )  = 1
SELECT t1.start,t1.end FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count ( * )  = 1
SELECT name , phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count ( * ) > 1
SELECT T3.student_details, T1.city, T1.line_1 FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id ORDER BY date_from DESC LIMIT 3
SELECT DISTINCT T1.city FROM addresses AS T1 JOIN people_addresses AS T2 ON T1.address_id = T2.address_id JOIN students AS T3 ON T2.person_id = T3.student_id
SELECT T2.dept_store_id FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id WHERE T1.department_name = "marketing" INTERSECT SELECT T2.dept_store_id FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id WHERE T1.department_name = "managing"
SELECT T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id WHERE T1.department_name = "marketing" INTERSECT SELECT T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id WHERE T1.department_name = "managing"
SELECT T2.dept_store_id , T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id WHERE T1.department_name = "marketing" INTERSECT SELECT T2.dept_store_id , T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id WHERE T1.department_name = "managing"
SELECT T2.dept_store_id , T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id WHERE T1.department_name = "marketing" INTERSECT SELECT T2.dept_store_id , T2.store_name FROM departments AS T1 JOIN department_stores AS T2 ON T1.dept_store_id = T2.dept_store_id WHERE T1.department_name = "managing"
SELECT distinct T1.lat FROM station AS T1 JOIN trip AS T2 where T1.name = 'San Jose Diridon Caltrain Station'
SELECT distinct T1.long FROM station AS T1 JOIN trip AS T2 where T1.name = 'Santa Clara at Almaden'
SELECT distinct T1.lat FROM station AS T1 JOIN trip AS T2 where T1.name = 'San Jose Civic Center'
SELECT T1.lat , T1.long , T1.city FROM station AS T1 JOIN trip AS T2 ON T1.id = T2.start_station_id ORDER BY T2.duration LIMIT 1
SELECT count ( DISTINCT RID ) FROM Rating
SELECT DISTINCT RID FROM Rating
SELECT avg ( stars ) FROM Rating
SELECT count ( DISTINCT RID ) FROM Rating WHERE stars < 4
SELECT DISTINCT RID FROM Rating WHERE stars < 4
SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars = 4
SELECT product_name FROM products WHERE product_type_code = 'Hardware' ORDER BY product_price DESC LIMIT 1
SELECT product_price FROM products WHERE product_type_code = 'Hardware' ORDER BY product_price DESC LIMIT 1
SELECT product_id FROM products WHERE product_name = "red jeans"
SELECT distinct ( product_type_code ) FROM products WHERE product_name = "red jeans"
SELECT product_name FROM products WHERE product_type_code = 'Hardware' ORDER BY product_price DESC LIMIT 1
SELECT min ( Vote_Percent ) FROM election
SELECT max ( Vote_Percent ) FROM election
select election_id from election where votes = ( SELECT max ( votes ) FROM election ) 
select election_id from election where votes = ( SELECT min ( votes ) FROM election ) 
SELECT min ( Vote_Percent ) , max ( Vote_Percent ) FROM election
select count ( * ) from people
select count ( * ) from people where Age < 21
select Name from people where People_ID = 2
SELECT Age FROM people ORDER BY Height DESC LIMIT 1
SELECT T2.customer_first_name , T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.account_name = "900"
SELECT T2.customer_first_name , T2.customer_last_name, T2.email_address, T2.phone_number FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.account_name = "900"
SELECT DISTINCT T2.customer_first_name , T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.other_account_details =  ( SELECT other_account_details FROM Accounts WHERE account_name = 900 ) 
SELECT T2.customer_first_name , T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.account_name = "900"
select count ( distinct account_id ) from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id = T1.customer_id WHERE customer_first_name = 'John'
select count ( distinct account_id ) from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id = T1.customer_id WHERE customer_first_name = 'Meaghan' or customer_first_name = 'Jessica'
select account_name from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id = T1.customer_id WHERE customer_first_name = 'Meaghan'
select account_id from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id = T1.customer_id where customer_first_name = 'Meaghan'
select account_name from Customers AS T1 JOIN Accounts AS T2 ON T2.customer_id = T1.customer_id where customer_first_name = 'Jessica'
SELECT T1.account_id , T1.date_account_opened , T1.account_name , T1.other_account_details FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = 'Meaghan'
SELECT Product_Price FROM Products WHERE Product_Name = 'Dinning'
SELECT Product_Price FROM Products WHERE Product_Name = 'Trading Policy'
SELECT distinct Product_Type_Code FROM Products WHERE Product_Name = 'Dinning'
SELECT Product_Price FROM Products WHERE Product_Name = "Dining" OR Product_Name = "Trading Policy"
SELECT park_name FROM park where country = 'US'
SELECT state FROM park GROUP BY state HAVING count ( * ) > 2
SELECT state FROM park GROUP BY state HAVING count ( * ) > 2;
SELECT count ( * ) FROM Person WHERE job = "student"
SELECT count ( * ) FROM Person WHERE job ! = "student"
SELECT name FROM Person WHERE job ! = "student"
SELECT name FROM Person WHERE job ! = "student"
SELECT count ( * ) FROM Person WHERE age > 30 AND job = 'engineer'
SELECT count ( * ) FROM Person WHERE age > 30 AND job = 'engineer'
SELECT sum ( bathroom_count ) FROM Apartments WHERE building_id = 808
SELECT sum ( room_count ) FROM Apartments WHERE building_id = 808
SELECT apt_type_code , max ( room_count ) , min ( room_count ) FROM Apartments GROUP BY apt_type_code
SELECT count ( * ) FROM mission
SELECT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Nationality = "United States"
SELECT T1.Fate, T1.mission_id FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Nationality = "United States"
SELECT DISTINCT T1.Fate FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T2.Nationality = "United States"
SELECT pID,HS FROM Player
SELECT pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY T1.pPos order by min ( T2.HS ) limit 1
SELECT min ( T2.HS ) , T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID where ppos = 'mid' GROUP BY T1.pPos
SELECT min ( T2.HS ) , T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY T1.pPos
SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count ( * ) LIMIT 1
SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count ( * ) DESC LIMIT 1
select Institution from Institution order by Founded limit 1
SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM drivers
SELECT count ( distinct nationality ) FROM drivers
SELECT nationality FROM drivers group by nationality order by count ( * ) desc limit 1
SELECT T1.forename, T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid where T1.nationality = "British" ORDER BY fastestLapSpeed DESC LIMIT 1
SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid ORDER BY count ( * ) DESC LIMIT 1
SELECT Airport_Name FROM airport ORDER BY International_Passengers DESC LIMIT 1
SELECT International_Passengers FROM airport ORDER BY International_Passengers DESC LIMIT 1
SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1
SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1
SELECT company FROM company WHERE company_id = '1'
SELECT company , main_industry FROM company WHERE company_id IN ( SELECT company_id FROM station_company ) 
SELECT company , main_industry FROM company WHERE company_id not IN ( SELECT company_id FROM station_company ) 
SELECT company , main_industry FROM company WHERE company_id NOT IN ( SELECT company_id FROM station_company ) 
SELECT Name FROM company WHERE Industry = "Banking" OR Industry = "Retailing"
SELECT sum ( sales_in_billion ) FROM company WHERE Industry = "Banking" OR Industry = "Retailing"
SELECT sum ( Market_Value_in_Billion ) FROM company WHERE Industry = "Banking" OR Industry = "Retailing"
SELECT Name FROM company WHERE Industry = "Banking" OR Industry = "Retailing"
SELECT count ( * ) FROM Player
SELECT max ( HS ) FROM Player
SELECT min ( HS ) FROM Player
SELECT avg ( HS ) FROM Player
SELECT avg ( HS ) , max ( HS ) , min ( HS ) FROM Player
SELECT count ( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts ) 
SELECT customer_first_name FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts ) 
SELECT customer_address FROM Customers WHERE customer_first_name = "Armani"
SELECT count ( * ) FROM Customers WHERE customer_id NOT IN ( SELECT customer_id FROM Accounts ) 
SELECT T2.building_id FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.facility_code = "Gym"
SELECT sum ( T2.bathroom_count ) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.facility_code = "Gym"
SELECT sum ( T2.bedroom_count ) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.facility_code = "Gym"
SELECT sum ( T2.room_count ) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.facility_code = "Gym"
SELECT sum ( T2.room_count ) FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.facility_code = "Gym"
SELECT * FROM artist WHERE gender = "Male"
SELECT artist_name FROM artist WHERE country = "UK" AND gender = "Male"
SELECT preferred_genre FROM artist WHERE artist_name = "Michel"
SELECT count ( * ) FROM artist WHERE preferred_genre = "pop" AND gender = "Male"
SELECT count ( * ) FROM artist WHERE preferred_genre = "pop" AND gender = "Female"
SELECT preferred_genre FROM artist Group By preferred_genre order by count ( * ) desc limit 1
SELECT artist_name FROM artist WHERE country = "UK" AND gender = "Male"
SELECT lname FROM authors
SELECT t1.fname, t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t3.title = "Binders Unbound"
SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t3.title = "Binders Unbound"
SELECT t1.lname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t3.title = "Binders Unbound"
SELECT transaction_type_code from transactions where investor_id = 18
SELECT amount_of_transaction from transactions where transaction_id = 3
SELECT investor_id , COUNT ( * ) FROM TRANSACTIONS WHERE transaction_type_code = "SALE" GROUP BY investor_id
SELECT name FROM Person WHERE gender = 'male' AND age =  ( SELECT min ( age ) FROM person WHERE gender = 'male' ) 
SELECT age FROM Person WHERE gender = 'male' AND age =  ( SELECT min ( age ) FROM person WHERE gender = 'male' ) 
SELECT job FROM Person WHERE gender = 'male' AND age =  ( SELECT min ( age ) FROM person WHERE gender = 'male' ) 
SELECT name FROM Person WHERE gender = 'male' AND age = ( SELECT min ( age ) FROM person WHERE gender = 'male' ) 
SELECT number_of_platforms FROM station where Main_services = "South Western Main Line West of England Main Line"
SELECT Total_Passengers FROM station where name = "London Waterloo"
SELECT Annual_interchanges FROM station where name = "London Bridge"
SELECT LOCATION , sum ( number_of_platforms ) , sum ( total_passengers ) FROM station GROUP BY LOCATION
SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.name = 'A Puzzling Parallax'
SELECT T3.name,T2.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN
SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.name = 'Matter of Time' INTERSECT SELECT T3.name FROM assignedto AS T1 JOIN projects AS T2 ON T1.project = T2.code JOIN scientists AS T3 ON T1.scientist = T3.SSN WHERE T2.name = 'A Puzzling Parallax'
SELECT COUNT ( DISTINCT EMPLOYEE_ID ) FROM employees WHERE COMMISSION_PCT > 0
SELECT COUNT ( * ) FROM ( SELECT department_id FROM employees GROUP BY department_id HAVING COUNT ( commission_pct ) > 10 ) 
SELECT department_id FROM employees GROUP BY department_id HAVING COUNT ( commission_pct ) > 10
SELECT * FROM item WHERE i_id = 4
SELECT rating FROM review WHERE i_id = ( select i_id from item where title = "avocado" ) 
SELECT rank FROM review WHERE i_id = ( select i_id from item where title = "avocado" ) 
SELECT title FROM item WHERE i_id NOT IN ( SELECT i_id FROM review ) 
SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = "Alison"
SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = "Alison" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = "Rosalind"
SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = "Alison" EXCEPT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = "Rosalind"
SELECT count ( DISTINCT year ) FROM races
SELECT max ( T2.fastestlapspeed ) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = "Monaco Grand Prix"
SELECT max ( T2.fastestlapspeed ) FROM races AS T1 JOIN results AS T2 ON T1.raceid = T2.raceid WHERE T1.year = 2008 AND T1.name = "Monaco Grand Prix"
SELECT count ( * ) FROM tryout
SELECT count ( * ) , cName FROM tryout GROUP BY cName
SELECT count ( * ) , cName FROM tryout GROUP BY cName ORDER BY count ( * ) DESC
SELECT count ( * ) , cName FROM tryout GROUP BY cName ORDER BY count ( * ) DESC
SELECT count ( distinct Performance_ID ) from member_attendance
SELECT T2.Performance_ID,T1.Role from member as T1 join member_attendance as T2 on T1.Member_ID = T2.Member_ID group by T2.Performance_ID
SELECT name ,Nationality from member
SELECT Name FROM member WHERE Member_ID NOT IN ( SELECT Member_ID FROM member_attendance ) 
SELECT Name from Track where TrackId = '2'
SELECT UnitPrice from Track where name = 'Fast As a Shark'
SELECT Milliseconds from Track where TrackId = 1
SELECT count ( * ) from Genre
SELECT T1.Name FROM GENRE AS T1 JOIN TRACK AS T2 ON T1.GenreId = T2.GenreId GROUP BY T2.GenreId ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code = T2.document_type_code JOIN Grants AS T3 ON T1.grant_id = T3.grant_id WHERE T2.document_description = 'Regular'
SELECT T3.grant_amount FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code = T2.document_type_code JOIN Grants AS T3 ON T1.grant_id = T3.grant_id WHERE T2.document_description = 'Regular'
SELECT T1.response_received_date FROM Documents AS T1 JOIN Grants AS T2 ON T1.grant_id = T2.grant_id WHERE T2.grant_amount > 100
SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code = T2.document_type_code JOIN Grants AS T3 ON T1.grant_id = T3.grant_id WHERE T2.document_description = 'Regular' OR T3.grant_amount > 100
SELECT student_id FROM student_course_attendance WHERE course_id = 301
SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance LIMIT 1
SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1
SELECT student_id FROM student_course_attendance WHERE course_id = 301 ORDER BY date_of_attendance DESC LIMIT 1
SELECT balance FROM checking WHERE custid = 2
SELECT name FROM accounts WHERE custid = 2
SELECT balance FROM savings WHERE custid = 2
SELECT T2.balance , T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T1.name = 'Brown'
SELECT T2.balance , T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T1.name = 'Brown'
SELECT count ( * ) FROM employees WHERE job_id = 'PU_MAN'
SELECT salary FROM employees WHERE job_id = 'PU_MAN'
SELECT count ( * ) FROM employees WHERE salary > ( SELECT salary FROM employees WHERE job_id = 'PU_MAN' ) 
SELECT employee_id , first_name , last_name , job_id FROM employees WHERE salary > ( SELECT max ( salary ) FROM employees WHERE job_id = 'PU_MAN' ) 
SELECT employee_id , first_name , last_name , job_id FROM employees WHERE salary > ( SELECT max ( salary ) FROM employees WHERE job_id = 'PU_MAN' ) 
SELECT COUNT ( * ) FROM Employees
SELECT COUNT ( employee_id ) FROM circulation_history WHERE document_id = 1
SELECT T1.employee_name FROM employees as T1 JOIN circulation_history AS T2 ON T1.employee_id = T2.employee_id WHERE T2.document_id = 1
SELECT Employees.employee_name FROM Employees JOIN Circulation_History ON Circulation_History.employee_id = Employees.employee_id WHERE Circulation_History.document_id = 1;
SELECT journalist_ID FROM journalist ORDER BY Years_working DESC LIMIT 1
SELECT journalist_ID FROM journalistwhere journalist_ID not in ( SELECT journalist_ID FROM journalist ORDER BY Years_working DESC LIMIT 1 ) ORDER BY Years_working DESC LIMIT 1
SELECT Name FROM journalist where journalist_ID = 4
SELECT nationality FROM journalist where journalist_ID = 4
SELECT count ( journalist_ID ) FROM journalist where Nationality = 'England'
SELECT journalist_ID FROM journalist where Nationality = 'England' order by Years_working limit 1
SELECT journalist_ID FROM journalist order by Years_working limit 1
SELECT Nationality FROM journalist ORDER BY Years_working DESC LIMIT 1
SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate
SELECT name FROM Employee EXCEPT SELECT eid FROM Certificate
SELECT COUNT ( * ) FROM Employee EXCEPT SELECT aid FROM Certificate
SELECT eid FROM Employee EXCEPT SELECT eid FROM Certificate
SELECT ID FROM instructor WHERE id NOT IN ( SELECT id FROM teaches ) 
SELECT id, name FROM instructor WHERE id NOT IN ( SELECT id FROM teaches ) 
SELECT name, dept_name FROM instructor WHERE id NOT IN ( SELECT id FROM teaches ) 
SELECT name FROM instructor WHERE id NOT IN ( SELECT id FROM teaches ) 
SELECT Team FROM institution WHERE Institution = 'Ave Maria University'
SELECT Floors FROM building WHERE Name = 'Tampa City Hall'
SELECT Street_address FROM building WHERE Name = 'Tampa City Hall'
SELECT Type FROM institution WHERE Institution = 'Ave Maria University'
SELECT Location FROM institution WHERE Institution = 'Dakota State University'
SELECT name FROM building EXCEPT SELECT T1.name FROM building AS T1 JOIN institution AS T2 ON T1.building_id = T2.building_id WHERE T2.founded = 2003
select dept_name from student where name = "Rumat"
SELECT T2.name , T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'History'
SELECT state_province_county , country FROM addresses WHERE zip_postcode LIKE "4%"
SELECT city FROM addresses WHERE zip_postcode LIKE "4%" and state_province_county = "Colorado"
SELECT city FROM addresses WHERE zip_postcode LIKE "4%" and state_province_county = "Texas"
SELECT count ( distinct city ) FROM addresses WHERE zip_postcode LIKE "4%"
SELECT state_province_county , country FROM addresses WHERE zip_postcode LIKE "4%"
SELECT name FROM company ORDER BY Sales_in_Billion DESC LIMIT 1
SELECT headquarters FROM company where name = "Royal Dutch Shell"
SELECT Industry FROM company where name = "Royal Dutch Shell"
SELECT Headquarters FROM company ORDER BY Sales_in_Billion DESC LIMIT 1
SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = "Human Resource"
SELECT T1.Employee_Name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = "Human Resource"
SELECT T1.Employee_Name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = "Manager"
SELECT T1.Employee_Name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = "Human Resource"
SELECT T1.employee_id FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = "Human Resource" OR T2.role_name = "Manager"
SELECT T2.dept_name FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count ( * ) DESC LIMIT 1
SELECT dept_address from department where dept_name = "Accounting"
SELECT T2.stu_fname, T2.stu_lname from department as T1 join student as T2 on T1.dept_code = T2.dept_code where T1.dept_name = "Accounting" and T2.stu_GPA > 3.0
SELECT sum ( stu_transfer ) from student
SELECT T2.dept_name , T2.dept_address FROM student AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count ( * ) DESC LIMIT 1
SELECT market_share FROM browser where name = "Internet Explorer"
SELECT market_share FROM browser where name = "Firefox"
SELECT market_share FROM browser where name = "Safari"
SELECT max ( market_share ) , min ( market_share ) , avg ( market_share ) FROM browser
SELECT nationality FROM architect WHERE name = 'Zaha Hadid'
SELECT gender FROM architect WHERE name = 'Frank Gehry'
SELECT built_year FROM mill WHERE architect_id = 2
SELECT location FROM mill WHERE id = 3
SELECT count ( * ) FROM architect WHERE id NOT IN ( SELECT architect_id FROM mill WHERE built_year < 1850 ) ;
SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type = T2.organisation_type WHERE T2.organisation_type_description = 'Sponsor' ORDER BY organisation_details
SELECT organisation_id FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type = T2.organisation_type WHERE T2.organisation_type_description = 'Sponsor' ORDER BY organisation_details
SELECT count ( organisation_id ) FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type = T2.organisation_type WHERE T2.organisation_type_description = 'Sponsor' ORDER BY organisation_details
SELECT organisation_details FROM Organisations AS T1 JOIN organisation_Types AS T2 ON T1.organisation_type = T2.organisation_type WHERE T2.organisation_type_description = 'Sponsor' ORDER BY organisation_details
SELECT count ( * ) FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T1.student_id FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T1.student_id , T2.login_name FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Location FROM University
SELECT School FROM University
SELECT count ( * ) FROM University WHERE Location LIKE "%NY%"
SELECT count ( * ) FROM university WHERE LOCATION LIKE "%NY%"
SELECT product_id from products order by product_price desc limit 1
SELECT product_name from products order by product_price desc limit 1
SELECT product_name from products order by product_price limit 1
SELECT max ( product_price ) , min ( product_price ) , product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code
SELECT customer_first_name , customer_last_name FROM Customers
SELECT customer_id FROM Customers
SELECT count ( * ) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id
SELECT distinct other_account_details FROM Accounts
SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name , count ( * ) FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id
SELECT name FROM architect
SELECT * FROM architect where nationality = 'American'
SELECT T1.id , T1.name , T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id = T2.architect_id GROUP BY T1.id ORDER BY count ( * ) DESC LIMIT 1
SELECT name FROM PersonFriend GROUP BY name HAVING count ( * )  = 1
SELECT count ( * ) FROM PersonFriend where friend = 'Alice'
SELECT count ( * ) FROM PersonFriend where friend = 'Bob'
SELECT friend FROM PersonFriend where name = 'Bob'
SELECT friend FROM PersonFriend where name = 'Zach'
SELECT count ( distinct name ) FROM PersonFriend
SELECT count ( distinct friend ) FROM PersonFriend
SELECT name FROM PersonFriend GROUP BY name HAVING count ( * ) = 1
SELECT count ( * ) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id WHERE T2.dept_store_chain_name = "South"
SELECT count ( * ) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id WHERE T2.dept_store_chain_name = "West"
SELECT T1.store_address FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id WHERE T2.dept_store_chain_name = "East"
SELECT T1.store_phone FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id WHERE T2.dept_store_chain_name = "West"
SELECT T1.store_email FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id WHERE T2.dept_store_chain_name = "West"
SELECT count ( * ) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id WHERE T2.dept_store_chain_name = "South"
SELECT country FROM competition WHERE competition_type = 'Tournament' GROUP BY country ORDER BY count ( * ) DESC LIMIT 1
SELECT country FROM competition WHERE competition_type = 'Tournament' GROUP BY country ORDER BY count ( * ) asc LIMIT 1
SELECT Competition_type FROM competition WHERE country = "Russia"
SELECT country FROM competition WHERE competition_type = 'Tournament' GROUP BY country ORDER BY count ( * ) DESC LIMIT 1
select * from apartments
SELECT * FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_number = "Suite 634"
SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_number = "Suite 634"
SELECT T1.booking_status_code FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.apt_number = "Suite 634"
SELECT title , director FROM movie WHERE YEAR < = 2000 ORDER BY gross_worldwide DESC LIMIT 1
SELECT title , director FROM movie WHERE YEAR <= 2000 ORDER BY gross_worldwide DESC LIMIT 1
SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = "rem" EXCEPT SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = "aut"
SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = "rem"
SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = "aut"
SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id where T1.problem_id = 1
SELECT T3.staff_id FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id where T1.problem_id = 1
SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = "rem" EXCEPT SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = "aut"
SELECT location FROM school where School_name = "Bremen"
SELECT enrollment FROM school where School_id = "2"
SELECT Invested FROM school AS T1 JOIN budget AS T2 ON T1.school_id = T2.school_id WHERE t1.mascot = "Falcons"
SELECT T1.School_name , T1.Mascot , T1.IHSAA_Football_Class FROM school AS T1 JOIN budget AS T2 ON T1.school_id = T2.school_id WHERE Budgeted > 6000 OR YEAR < 2003 ORDER BY T2.total_budget_percent_invested , T2.total_budget_percent_budgeted
SELECT T1.School_name , T1.Mascot , T1.IHSAA_Football_Class FROM school AS T1 JOIN budget AS T2 ON T1.school_id = T2.school_id WHERE Budgeted > 6000 OR YEAR < 2003 ORDER BY T2.total_budget_percent_invested , T2.total_budget_percent_budgeted
select avg ( age ) from person
select count ( * ) from person where gender = "female"
SELECT count ( * ) FROM Person WHERE age > ( SELECT max ( age ) FROM person WHERE job = 'engineer' ) 
SELECT count ( * ) FROM Person WHERE age > ( SELECT max ( age ) FROM person WHERE job = 'engineer' ) 
SELECT count ( * ) FROM airlines
SELECT * FROM airlines WHERE name LIKE 'Private%'
SELECT country FROM airlines WHERE name LIKE 'Orbit%'
SELECT DISTINCT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Dan'
SELECT DISTINCT T1.name, T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Dan'
SELECT DISTINCT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Dan' OR T2.friend = 'Alice'
select count ( * ) from ( SELECT * FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id = T2.asset_id GROUP BY T1.asset_id HAVING count ( * )  > = 1 ) 
select count ( * ) from ( SELECT T1.asset_id , T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id = T2.asset_id GROUP BY T1.asset_id HAVING count ( * )  = 2 INTERSECT SELECT T1.asset_id , T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id = T2.asset_id GROUP BY T1.asset_id HAVING count ( * )  > = 1 ) 
SELECT T1.asset_id , T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id = T2.asset_id GROUP BY T1.asset_id HAVING count ( * )  = 2 INTERSECT SELECT T1.asset_id , T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id = T2.asset_id GROUP BY T1.asset_id HAVING count ( * ) < 2
SELECT T1.asset_id , T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id = T2.asset_id GROUP BY T1.asset_id HAVING count ( * ) = 2 INTERSECT SELECT T1.asset_id , T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id = T2.asset_id GROUP BY T1.asset_id HAVING count ( * ) < 2
select count ( * ) from journalist
select Name from journalist where journalist_ID = 2
select Nationality from journalist where journalist_ID = 1
SELECT Name FROM journalist WHERE Nationality = "England" OR Nationality = "Wales"
SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%'
SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code not LIKE '%en%'
SELECT master_customer_id FROM cmi_cross_references WHERE source_system_code = 'Electoral'
SELECT DISTINCT source_system_code FROM cmi_cross_references WHERE source_system_code LIKE '%en%'
SELECT name FROM ship
SELECT name, flag FROM ship
SELECT name FROM ship WHERE ship_id NOT IN ( SELECT ship_id FROM captain WHERE rank = 'Midshipman' ) 
SELECT flag FROM ship WHERE ship_id NOT IN ( SELECT ship_id FROM captain WHERE rank = 'Midshipman' ) 
SELECT Name, flag FROM ship WHERE ship_id NOT IN ( SELECT ship_id FROM captain WHERE rank = 'Midshipman' ) 
SELECT name , flag FROM ship WHERE ship_id NOT IN ( SELECT ship_id FROM captain WHERE rank = 'Midshipman' ) 
SELECT Nationality,count ( * ) FROM ship WHERE Nationality = 'United Kingdom' GROUP BY Nationality
SELECT Nationality FROM ship WHERE Nationality ! = 'United Kingdom' GROUP BY Nationality HAVING COUNT ( * ) > 2
SELECT distinct Type FROM ship where Nationality = 'United States'
SELECT distinct Type FROM ship where Nationality = 'United Kingdom'
SELECT Nationality FROM ship GROUP BY Nationality HAVING COUNT ( * ) > 2
SELECT dept_name, avg ( salary ) FROM instructor GROUP BY dept_name
SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg ( salary ) ASC LIMIT 1
SELECT min ( salary ) , dept_name FROM instructor GROUP BY dept_name HAVING avg ( salary ) > ( SELECT avg ( salary ) FROM instructor ) 
SELECT avg ( Price ) from wine
SELECT * from wine where price = ( select max ( price ) from wine ) 
SELECT T1.grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG ( Price ) DESC LIMIT 1
SELECT avg ( price ) FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG ( Price ) DESC LIMIT 1
SELECT color from grapes where grape = "Roussanne"
SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG ( Price ) DESC LIMIT 1
SELECT phone FROM employees WHERE first_name = "Nancy" AND last_name = "Andrews"
SELECT phone FROM employees WHERE first_name = "Nancy" AND last_name = "Edwards"
SELECT fax FROM employees WHERE first_name = "Nancy" AND last_name = "Edwards"
SELECT title FROM employees WHERE first_name = "Nancy" AND last_name = "Edwards"
SELECT count ( * ) from employees where title = "Sales Manager"
SELECT phone FROM employees WHERE first_name = "Nancy" AND last_name = "Edwards";
SELECT T1.statement_id FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.statement_id , T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.statement_id , T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY count ( * ) DESC LIMIT 1
SELECT Name , Tourist_Attraction_ID FROM Tourist_Attractions
SELECT T1.Name , T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count ( * )  > = 2
SELECT T1.Name , count ( * ) FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count ( * )  > = 2
SELECT T1.Name , T2.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count ( * ) >= 2
SELECT name , furniture_id FROM furniture ORDER BY market_rate DESC LIMIT 1
SELECT name, num_of_component FROM furniture ORDER BY num_of_component
SELECT name , furniture_id FROM furniture ORDER BY market_rate DESC LIMIT 1
SELECT balance FROM checking
SELECT balance FROM savings
SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid = T2.custid ORDER BY T1.balance + T2.balance
SELECT T1.balance + T2.balance FROM checking AS T1 JOIN savings AS T2 ON T1.custid = T2.custid ORDER BY T1.balance + T2.balance
SELECT count ( * ) FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor = T2.blockfloor AND T1.blockcode = T2.blockcode where T1.blockcode = 1
SELECT T2.roomnumber FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor = T2.blockfloor AND T1.blockcode = T2.blockcode where T1.blockcode = 1
SELECT T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor = T2.blockfloor AND T1.blockcode = T2.blockcode where T2.roomnumber = 201
SELECT roomtype from room where roomnumber = 101
SELECT count ( * ) , T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor = T2.blockfloor AND T1.blockcode = T2.blockcode GROUP BY T1.blockcode
SELECT first_name , last_name FROM actor GROUP BY first_name , last_name ORDER BY count ( * ) DESC LIMIT 1
SELECT first_name , last_name FROM actor GROUP BY first_name , last_name ORDER BY count ( * ) DESC LIMIT 1
SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id
SELECT t2.policy_id FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id where t1.customer_name = "America Jaskolski"
SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN first_notification_of_loss AS t2 ON t1.customer_id = t2.customer_id
select School_name from School
SELECT T2.school_name FROM budget AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id JOIN endowment AS T3 ON T2.school_id = T3.school_id GROUP BY T2.school_name HAVING sum ( T1.budgeted ) > 100 OR sum ( T3.amount ) > 10
SELECT T2.school_name FROM budget AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id JOIN endowment AS T3 ON T2.school_id = T3.school_id GROUP BY T2.school_name HAVING sum ( T1.budgeted ) > 100 OR sum ( T3.amount ) > 10
select count ( organization_id ) from Organizations
select organization_id from Organizations where organization_id in ( SELECT parent_organization_id FROM organizations ) 
SELECT count ( organization_id ) FROM organizations where organization_id not in ( SELECT parent_organization_id FROM organizations ) 
SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations
SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations
SELECT organization_id FROM organizations EXCEPT SELECT parent_organization_id FROM organizations
SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count ( * ) DESC LIMIT 1
SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count ( * ) asc LIMIT 1
select location_code from Document_Locations order by Date_in_Location_From desc limit 1
SELECT location_code FROM Document_locations GROUP BY location_code ORDER BY count ( * ) DESC LIMIT 1
SELECT max ( Price ) , max ( Score ) , YEAR FROM WINE GROUP BY YEAR
SELECT No FROM WINE order BY Score desc limit 1
SELECT max ( Price ) , max ( Score ) , YEAR FROM WINE GROUP BY YEAR
SELECT city FROM airports GROUP BY city HAVING count ( * ) > 1
SELECT city , count ( * ) FROM airports GROUP BY city HAVING count ( * ) > 1
SELECT city FROM airports GROUP BY city HAVING count ( * )  = 3
SELECT city FROM airports GROUP BY city HAVING count ( * )  > = 4
SELECT city, count ( * ) FROM airports GROUP BY city HAVING count ( * )  > = 4
SELECT city , count ( * ) FROM airports GROUP BY city HAVING count ( * ) > 1
SELECT T1.driverid FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1
SELECT T1.driverid, t1.dob FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1
SELECT T1.driverid , T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid ORDER BY T2.milliseconds DESC LIMIT 1
SELECT Major , count ( * ) FROM Student GROUP BY Major HAVING count ( Major ) BETWEEN 2 AND 30
SELECT Major , count ( * ) FROM Student GROUP BY Major HAVING count ( Major ) BETWEEN 2 AND 20
SELECT Major , count ( * ) FROM Student GROUP BY Major HAVING count ( Major ) BETWEEN 2 AND 30;
SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid order by T2.balance desc limit 1
SELECT T1.custid FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid order by T2.balance desc limit 1
SELECT custid FROM savings order by balance asc limit 1
SELECT count ( * ) from savings where balance > = 30000
SELECT T1.name , T2.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T3.balance LIMIT 1
select count ( staff_id ) from staff
select count ( customer_id ) from Customers
SELECT customer_details FROM customers UNION SELECT staff_details FROM staff
SELECT customer_details FROM customers UNION SELECT staff_details FROM staff
SELECT birth_country FROM player GROUP BY birth_country ORDER BY count ( * ) ASC LIMIT 1
SELECT birth_country FROM player GROUP BY birth_country ORDER BY count ( * ) ASC LIMIT 3
SELECT birth_country FROM player GROUP BY birth_country ORDER BY count ( * ) ASC LIMIT 3;
SELECT name FROM user_profiles where uid = 1
SELECT followers FROM user_profiles where name = 'Mary'
SELECT T1.partitionid, T1.name FROM user_profiles AS T1 join tweets AS T2 where T1.uid = T2.uid group by T2.uid having count ( * ) <2
SELECT T1.name , T1.partitionid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count ( * ) < 2
SELECT count ( * ) FROM Reservations WHERE FirstName = "ROY" AND LastName = "SWEAZY"
SELECT count ( DISTINCT room ) FROM Reservations
SELECT count ( adults ) , count ( kids ) FROM Reservations
SELECT checkin, checkout FROM Reservations WHERE code = 10105
SELECT count ( * ) FROM Reservations WHERE FirstName = "ROY" AND LastName = "SWEAZY";
SELECT count ( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE country = 'Canada'
SELECT count ( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE country = 'United States'
select count ( * ) from ( SELECT rid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE T1.country = 'United States' intersect SELECT rid FROM airports AS T3 JOIN routes AS T4 ON T3.apid = T4.src_apid WHERE T3.country = 'Canada' ) 
select t1.name from airports as t1 join routes as t2 on t1.apid = t2.src_apid where t1.name like 'A%'
select distinct ( t1.name ) from airports as t1 join routes as t2 on t1.apid = t2.src_apid where t1.name like 'A%' and t1.country = "Canada"
SELECT count ( * ) FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid WHERE country = 'Canada'
SELECT count ( campus ) FROM campuses WHERE YEAR > = 1935 AND YEAR < = 1939
SELECT county from campuses WHERE YEAR > = 1935 AND YEAR < = 1939
SELECT campus from campuses WHERE YEAR > = 1935 AND YEAR < = 1939
SELECT campus FROM campuses WHERE YEAR >= 1935 AND YEAR <= 1939
SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.Location FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.Main_Services FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.Station_ID FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.Annual_interchanges FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id ORDER BY count ( * ) DESC LIMIT 1
SELECT Name FROM station where Station_ID = 3
SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id ORDER BY count ( * ) DESC LIMIT 1
select name from technician
SELECT T3.Name, t1.machine_id FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID
SELECT T3.Name, t1.machine_id FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID and t1.machine_id = 2
SELECT T3.Name, t1.machine_id, quality_rank FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID and t1.machine_id = 2 order by quality_rank
SELECT T3.Name, t1.machine_id, quality_rank FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID and t1.machine_id = 1 order by quality_rank
SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID ORDER BY T2.quality_rank
SELECT T3.Name FROM repair_assignment AS T1 JOIN machine AS T2 ON T1.machine_id = T2.machine_id JOIN technician AS T3 ON T1.technician_ID = T3.technician_ID ORDER BY T2.quality_rank
SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating > ( SELECT avg ( overall_rating ) FROM Player_Attributes ) 
SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating < ( SELECT avg ( overall_rating ) FROM Player_Attributes ) 
SELECT count ( DISTINCT T1.id ) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating < ( SELECT avg ( overall_rating ) FROM Player_Attributes ) 
SELECT avg ( T1.height ) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating < ( SELECT avg ( overall_rating ) FROM Player_Attributes ) 
SELECT avg ( T1.height ) FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating > ( SELECT avg ( overall_rating ) FROM Player_Attributes ) 
SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating > ( SELECT avg ( overall_rating ) FROM Player_Attributes ) 
SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = "Editor"
SELECT role_code,role_name FROM ROLES
SELECT Employee_ID,Role_Code FROM Employees
SELECT Role_Code,Role_Description FROM Roles
SELECT T1.employee_name FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T2.role_name = "Editor"
SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Kayaking'
SELECT T1.fname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Mountain Climbing'
SELECT T1.fname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Mountain Climbing' INTERSECT SELECT T1.fname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Kayaking'
SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Canoeing' INTERSECT SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN activity AS T3 ON T2.actid = T2.actid WHERE T3.activity_name = 'Kayaking'
SELECT T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID GROUP BY T1.Festival_ID HAVING COUNT ( * )  > = 2
SELECT T3.festival_id, T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID GROUP BY T1.Festival_ID HAVING COUNT ( * )  > = 2
SELECT T2.name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID where T1.result = "Won"
SELECT T1.Festival_ID , T3.Festival_Name FROM nomination AS T1 JOIN artwork AS T2 ON T1.Artwork_ID = T2.Artwork_ID JOIN festival_detail AS T3 ON T1.Festival_ID = T3.Festival_ID GROUP BY T1.Festival_ID HAVING COUNT ( * ) >= 2
SELECT count ( * ) from people where sex = "F"
SELECT count ( * ) from people where sex = "M"
SELECT min ( oppose_rate ) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id where t1.sex = "M"
SELECT name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id where t1.sex = "M" and oppose_rate = 0.32
SELECT min ( oppose_rate ) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id where t1.sex = "F"
SELECT name FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id where t1.sex = "F" order by oppose_rate asc limit 1
SELECT t1.name , t1.sex , min ( oppose_rate ) FROM people AS t1 JOIN candidate AS t2 ON t1.people_id = t2.people_id GROUP BY t1.sex
SELECT * FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id = t2.product_id GROUP BY t2.product_id ORDER BY count ( * ) DESC LIMIT 1
SELECT sum ( product_price ) FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id = t2.product_id Where t1.product_name = 'dvds'
SELECT sum ( product_price ) FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id = t2.product_id Where t1.product_name = 'electronics'
SELECT t1.product_name , t1.product_price FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id = t2.product_id GROUP BY t2.product_id ORDER BY count ( * ) DESC LIMIT 1
SELECT customer_first_name, customer_last_name from customers where customer_id = 1
SELECT card_type_code from Customers_Cards where customer_id = 6
SELECT customer_address from Customers where customer_id = 2
SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count ( * ) > = 2
SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count ( * ) >= 2
SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.overall_rating > = 85 AND T2.overall_rating < = 90
SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot = "left" AND T2.overall_rating > = 85 AND T2.overall_rating < = 90
SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot = "right"
SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id WHERE T2.preferred_foot = "left" AND T2.overall_rating >= 85 AND T2.overall_rating <= 90
SELECT count ( * ) FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT ( * )  > = 10
SELECT T1.FirstName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT ( * ) > = 10
SELECT Company from Customer where FirstName = "Diego"
SELECT T1.FirstName , T1.SupportRepId FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId GROUP BY T1.SupportRepId HAVING COUNT ( * ) >= 10
SELECT * FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID WHERE T2.Year = 1995
SELECT director FROM film where title = 'ET the Extra-Terrestrial'
SELECT low_estimate, high_estimate FROM film_market_estimation where Year = 1995
SELECT DISTINCT T1.Director FROM film AS T1 JOIN film_market_estimation AS T2 ON T1.Film_ID = T2.Film_ID WHERE T2.Year = 1995
select count ( * ) from orders group by customer_id order by count ( * ) desc limit 1
select customer_id from orders group by customer_id order by count ( * ) desc limit 1
select T1.customer_last_name, T1.customer_id, T1.phone_number from Customers as T1 join orders as T2 on T1.customer_id = T2.customer_id group by T2.customer_id order by count ( * ) desc limit 1
SELECT T2.customer_last_name , T1.customer_id , T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT sum ( T1.attendance ) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year = 1871
SELECT count ( * ) FROM home_game WHERE team_id = "BS1"
SELECT rank FROM team WHERE team_id = "BS1"
SELECT sum ( T1.attendance ) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010;
SELECT distinct T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY potential DESC LIMIT 5
SELECT distinct T1.birthday FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY potential DESC LIMIT 5
SELECT distinct T1.weight FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY potential DESC LIMIT 5
SELECT DISTINCT T1.player_name , T1.birthday FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY potential DESC LIMIT 5
select location, count ( * ) from station group by Location order by count ( * ) desc limit 1
SELECT sum ( Total_Passengers ) from station where Location = 'London'
select sum ( Number_of_Platforms ) from station where Location = 'London'
select Name from station where Location = 'London'
select Main_Services from station where Location = 'London'
SELECT LOCATION FROM station GROUP BY LOCATION ORDER BY count ( * ) DESC LIMIT 1
SELECT product_name FROM products WHERE product_id = '1'
SELECT count ( * ) FROM products WHERE product_category_code = 'Spices'
SELECT count ( * ) FROM products WHERE product_category_code = "Spices" AND typical_buying_price > 1000
SELECT count ( * ) FROM products WHERE product_category_code = "Spices" AND typical_buying_price > 1000
SELECT name FROM user_profiles
SELECT followers FROM user_profiles where name = "Celine Dion"
SELECT followers FROM user_profiles where name = "Tyler Swift"
SELECT email FROM user_profiles where name = "Tyler Swift"
SELECT name , email FROM user_profiles WHERE name LIKE '%Swift%'
SELECT count ( * ) from Institution
SELECT count ( * ) from building
select count ( distinct team ) from institution
SELECT name FROM building WHERE building_id NOT IN ( SELECT building_id FROM institution ) 
SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count > 100
SELECT transaction_id FROM TRANSACTIONS WHERE share_count > 100
SELECT date_of_transaction FROM TRANSACTIONS WHERE amount_of_transaction > 1000
SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count > 100 OR amount_of_transaction > 1000
SELECT name FROM useracct WHERE u_id NOT IN ( SELECT u_id FROM review ) 
SELECT name FROM useracct WHERE u_id NOT IN ( SELECT u_id FROM review ) 
SELECT name FROM useracct WHERE u_id NOT IN ( SELECT u_id FROM review ) 
SELECT count ( * ) FROM review
SELECT count ( * ) FROM review WHERE rating > = 5
SELECT name FROM useracct WHERE u_id NOT IN ( SELECT u_id FROM review ) 
SELECT t3.major FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = "Bootup Baltimore"
SELECT count ( * ) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid
SELECT * FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid
SELECT count ( * ) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.sex = "F"
SELECT t3.fname , t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = "Bootup Baltimore" AND t3.major = "600"
SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID
SELECT T2.Weight FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID
SELECT T2.Weight FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Weight DESC LIMIT 1
SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Weight DESC LIMIT 1
SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Weight DESC LIMIT 1
SELECT t1.Name FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1
SELECT Manufacturer_ID FROM manufacturer where name = 'Tomorrow'
SELECT Num_of_Shops FROM manufacturer where name = 'Tomorrow'
SELECT t1.manufacturer_id , t1.num_of_shops FROM manufacturer AS t1 JOIN furniture_manufacte AS t2 ON t1.manufacturer_id = t2.manufacturer_id ORDER BY t2.Price_in_Dollar DESC LIMIT 1
SELECT languages FROM song GROUP BY languages ORDER BY count ( * ) DESC LIMIT 1
SELECT min ( resolution ) , max ( resolution ) FROM song
SELECT min ( rating ) , max ( rating ) FROM song
SELECT languages FROM song WHERE resolution < 500 GROUP BY languages ORDER BY count ( * ) DESC LIMIT 1
SELECT languages FROM song WHERE resolution > 500 GROUP BY languages ORDER BY count ( * ) DESC LIMIT 1
SELECT artist_name FROM song WHERE resolution > 500 GROUP BY languages ORDER BY count ( * ) DESC LIMIT 1
SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM Customers GROUP BY payment_method having payment_method = "Visa"
SELECT customer_email FROM Customers where payment_method = "Visa"
SELECT customer_phone FROM Customers where payment_method = "Visa"
SELECT customer_name from customers where payment_method = "Visa" order by date_became_customer limit 1
SELECT date_became_customer from customers where payment_method = "Visa" order by date_became_customer limit 1
SELECT payment_method FROM Customers GROUP BY payment_method ORDER BY count ( * ) DESC LIMIT 1
SELECT distinct location_code FROM Document_locations
SELECT distinct document_id FROM Document_locations
SELECT Date_in_Location_From FROM Document_locations WHERE Document_ID = '81'
SELECT location_code FROM Document_locations GROUP BY location_code HAVING count ( * ) >= 3
SELECT T1.title FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id GROUP BY T2.inventory_id
SELECT T1.title , T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id GROUP BY T2.inventory_id ORDER BY count ( * ) DESC LIMIT 1
SELECT special_features FROM film WHERE title = "ACADEMY DINOSAUR"
SELECT T1.title , T2.inventory_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id JOIN rental AS T3 ON T2.inventory_id = T3.inventory_id GROUP BY T2.inventory_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T1.building_id HAVING COUNT ( * ) > 1
SELECT T3.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id where T2.name = "Torre KOI"
SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id where T3.name = "JPMorgan Chase" and T2.name ! = "Torre KOI"
SELECT * FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id where T3.name = "HSBC" and T2.name = "Torre Mitikah"
SELECT name from companies where id = 4
SELECT * FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id where T3.name = "ExxonMobil" and T2.name = "Punto Chapultepec"
SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id where T3.name = "General Electric"
SELECT T3.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id where T2.name = "Corporativo BBVA Bancomer" and T3.name ! = "General Electric"
SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T1.building_id HAVING COUNT ( * ) > 1
SELECT customer_id FROM Customer_Address_History
SELECT T2.customer_name , T3.city , T1.date_from , T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id
SELECT T2.customer_name From customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id GROUP BY T2.customer_name having count ( * ) > 1
SELECT T2.customer_name , T3.city , T1.date_from , T1.date_to FROM customer_address_history AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id JOIN addresses AS T3 ON T1.address_id = T3.address_id
SELECT DISTINCT Name FROM WINE WHERE YEAR < 2000
select year from wine group by year order by count ( * ) desc limit 1
select winery from wine where year = 2007
SELECT DISTINCT Name FROM WINE WHERE YEAR > 2010
SELECT DISTINCT Name FROM WINE WHERE YEAR < 2000 OR YEAR > 2010
SELECT count ( distinct classroom ) FROM list
SELECT count ( distinct Grade ) FROM list
SELECT count ( distinct LastName ) FROM list
SELECT count ( distinct FirstName ) FROM list
SELECT Grade FROM list where LastName = 'CAR'
SELECT classroom , count ( * ) FROM list WHERE grade = "0" GROUP BY classroom
SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid JOIN Student AS T3 ON T3.Stuid = T1.Stuid WHERE T3.Lname = "Smith" AND T3.Fname = "Linda"
SELECT gtype FROM video_games WHERE Gname = "RNG Stone"
SELECT city_code FROM student WHERE Lname = "Jones" AND Fname = "Shiela"
SELECT T1.hours_played FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid WHERE Gname = "The Vanishing of Eric Calder"
SELECT T3.Fname, T3.lname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid JOIN Student AS T3 ON T3.Stuid = T1.Stuid WHERE T2.Gname = "The Vanishing of Eric Calder"
SELECT sum ( hours_played ) FROM Plays_games
SELECT Gname FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.gameid = T2.gameid JOIN Student AS T3 ON T3.Stuid = T1.Stuid WHERE T3.Lname = "Smith" AND T3.Fname = "Linda"
SELECT T2.Tourist_Attraction_ID FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = "game1"
SELECT T2.name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = "game1"
SELECT T2.How_to_Get_There FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = "game1"
SELECT T2.Opening_Hours FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = "game1"
SELECT T2.Other_Details FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = "game1"
SELECT T2.Name FROM PHOTOS AS T1 JOIN TOURIST_ATTRACTIONS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID WHERE T1.Name = "game1"
SELECT Nationality FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM employment ) 
SELECT Graduation_college FROM people WHERE name = "Reggie Lewis"
SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM employment ) 
SELECT distinct count ( * ) from detention
select count ( * ) from ( SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id = T2.teacher_id ) 
SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id = T2.teacher_id
SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id = T2.teacher_id
SELECT T1.state, T1.cName FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName
SELECT cName from Tryout where decision = "yes"
SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'
SELECT DISTINCT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.decision = 'yes'
select count ( * ) from ( SELECT * FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id GROUP BY T2.country_id HAVING count ( * ) > 1 ) 
select count ( * ) from ( SELECT * FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id GROUP BY T2.country_id HAVING count ( * )  > = 3 ) 
SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id GROUP BY T2.country_id HAVING count ( * )  > = 3
SELECT T2.country FROM city AS T1 JOIN country AS T2 ON T1.country_id = T2.country_id GROUP BY T2.country_id HAVING count ( * ) >= 3
SELECT distinct pilot FROM flight
SELECT pilot FROM flight GROUP BY pilot ORDER BY count ( * ) DESC LIMIT 1
SELECT pilot FROM flight GROUP BY pilot ORDER BY count ( * ) DESC LIMIT 1
SELECT DISTINCT college FROM match_season
SELECT college, count ( * ) FROM match_season group by college
SELECT DISTINCT draft_class FROM match_season WHERE College = "UCLA" OR College = "Duke"
Select draft_pick_number from match_season where draft_class in ( SELECT DISTINCT draft_class FROM match_season WHERE College = "UCLA" OR College = "Duke" ) 
Select player, draft_pick_number from match_season where draft_class in ( SELECT DISTINCT draft_class FROM match_season WHERE College = "UCLA" OR College = "Duke" ) 
Select position, player, draft_pick_number from match_season where draft_class in ( SELECT DISTINCT draft_class FROM match_season WHERE College = "UCLA" OR College = "Duke" ) 
SELECT DISTINCT POSITION FROM match_season WHERE College = "UCLA" OR College = "Duke"
SELECT avg ( price_in_euros ) , min ( price_in_euros ) FROM catalog_contents
SELECT avg ( price_in_euros ) , min ( price_in_euros ) FROM catalog_contents where catalog_entry_name = 'Cola'
SELECT avg ( price_in_dollars ) , min ( price_in_dollars ) FROM catalog_contents where catalog_entry_name = 'Cola'
SELECT avg ( price_in_dollars ) , min ( price_in_dollars ) FROM catalog_contents where catalog_entry_name = 'Root beer'
SELECT avg ( price_in_euros ) , min ( price_in_euros ) FROM catalog_contents
SELECT count ( * ) FROM county_public_safety
SELECT Name FROM county_public_safety ORDER BY Crime_rate ASC LIMIT 1
SELECT Name FROM county_public_safety ORDER BY Crime_rate DESC LIMIT 1
SELECT Name, Crime_rate FROM county_public_safety WHERE Name = 'Campbell River' OR Name = 'Central Saanich'
SELECT Name, Crime_rate FROM county_public_safety WHERE Name = 'Campbell River' OR Name = 'Central Saanich' ORDER BY Crime_rate ASC
SELECT min ( Crime_rate ) , max ( Crime_rate ) FROM county_public_safety
SELECT T2.city FROM address AS T1 JOIN city AS T2 ON T1.city_id = T2.city_id GROUP BY T1.city_id ORDER BY count ( * ) DESC LIMIT 1
SELECT COUNT ( * ) FROM address AS T1 JOIN city AS T2 ON T1.city_id = T2.city_id GROUP BY T1.city_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id = T2.city_id GROUP BY T1.city_id ORDER BY count ( * ) DESC LIMIT 1
SELECT address FROM address WHERE address LIKE "%S%"
SELECT T2.city , count ( * ) , T1.city_id FROM address AS T1 JOIN city AS T2 ON T1.city_id = T2.city_id GROUP BY T1.city_id ORDER BY count ( * ) DESC LIMIT 1
SELECT sum ( Number_city_affected ) from affected_region
Select region_name from region
SELECT T1.region_name , count ( * ) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id
SELECT T1.region_name , count ( * ) FROM region AS T1 JOIN affected_region AS T2 ON T1.region_id = T2.region_id GROUP BY T1.region_id
SELECT distinct country FROM people WHERE age<30
SELECT distinct country FROM people WHERE age>30
SELECT count ( * ) FROM people WHERE age > = 30 and Is_Male = 'T' and country = 'Canada'
SELECT country FROM people WHERE age < 25 INTERSECT SELECT country FROM people WHERE age > 30
SELECT avg ( T1.salary ) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'
select league_id from team where name = 'Boston Red Stockings'
select year,rank from team where name = 'Boston Red Stockings'
SELECT avg ( T1.salary ) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'
SELECT max ( product_price ) , min ( product_price ) FROM products GROUP BY product_type_code ORDER BY product_type_code
SELECT product_name FROM products
SELECT max ( product_price ) , min ( product_price ) , product_type_code FROM products GROUP BY product_type_code ORDER BY product_type_code
SELECT name FROM user_profiles
SELECT * FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid
SELECT T1.name , count ( * ) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid
SELECT T1.name , count ( * ) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid
SELECT product_id FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id = t2.order_id WHERE order_status = 'Cancelled'
SELECT order_date FROM customer_orders where customer_id = 5
SELECT avg ( order_quantity ) from order_items
SELECT sum ( t2.order_quantity ) FROM customer_orders AS t1 JOIN order_items AS t2 ON t1.order_id = t2.order_id WHERE t1.order_date < "2018-03-17 07:13:53"
SELECT first_name , last_name FROM employees WHERE first_name NOT LIKE '%M%'
SELECT first_name , last_name , hire_date , salary , department_id FROM employees WHERE first_name NOT LIKE '%M%'
SELECT first_name , last_name , hire_date , salary , department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id
SELECT first_name , last_name , hire_date , salary , department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id
SELECT customer_phone FROM customers
SELECT supplier_phone FROM suppliers
SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers
SELECT customer_phone FROM customers UNION SELECT supplier_phone FROM suppliers
SELECT Aircraft from aircraft
SELECT Description from aircraft WHERE Aircraft = 'Robinson R-22'
SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = "London Gatwick"
SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = "London Gatwick"
SELECT count ( * ) FROM ship
SELECT Nationality FROM ship
SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1
SELECT Name FROM ship ORDER BY Tonnage DESC LIMIT 1
SELECT School FROM school WHERE Founded < 1890
SELECT Denomination FROM school WHERE Founded < 1890
SELECT school FROM school WHERE Founded > 1900
SELECT denomination FROM school WHERE Founded > 1900
SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName JOIN player AS T3 ON T2.pID = T3.pID WHERE T3.pName = 'Charles'
SELECT T1.cName, T3.pID FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName JOIN player AS T3 ON T2.pID = T3.pID
SELECT HS from Player where pName = 'Charles'
SELECT cName from College
SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName JOIN player AS T3 ON T2.pID = T3.pID WHERE T3.pName = 'Charles'
SELECT school_code FROM department GROUP BY school_code HAVING count ( DISTINCT dept_name ) < 5
SELECT * FROM department where school_code = "BUS"
SELECT count ( DISTINCT dept_name ) , school_code FROM department GROUP BY school_code HAVING count ( DISTINCT dept_name ) < 5
SELECT count ( DISTINCT dept_name ) , school_code FROM department GROUP BY school_code HAVING count ( DISTINCT dept_name ) < 5
SELECT count ( * ) from students
SELECT distinct T1.student_id FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id
SELECT T1.student_id , count ( * ) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id
SELECT T1.student_id , count ( * ) FROM students AS T1 JOIN student_course_registrations AS T2 ON T1.student_id = T2.student_id GROUP BY T1.student_id
SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id GROUP BY t2.customer_details ORDER BY count ( * ) DESC LIMIT 1
SELECT t2.customer_ID FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id GROUP BY t2.customer_details ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id GROUP BY t2.customer_details ORDER BY count ( * ) DESC LIMIT 1
SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id GROUP BY t2.customer_details ORDER BY count ( * ) DESC LIMIT 1
SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT count ( * ) FROM device where Software_Platform = "Android"
SELECT count ( * ) FROM device where Software_Platform = "iOS"
SELECT device FROM device where Software_Platform = "Android"
SELECT count ( distinct carrier ) FROM device
SELECT carrier FROM device where device = "Samsung"
SELECT Software_Platform FROM device GROUP BY Software_Platform ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT avg ( t2.price ) FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County ! = 'Sonoma'
select distinct Winery from wine
select distinct Winery, price from wine
SELECT avg ( price ) FROM wine WHERE Appelation NOT IN ( SELECT T1.Appelation FROM APPELLATIONS AS T1 JOIN WINE AS T2 ON T1.Appelation = T2.Appelation WHERE T1.County = 'Sonoma' ) 
SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT project_id FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count ( * ) DESC LIMIT 1
SELECT project_details FROM Projects order by project_id limit 1
SELECT project_details FROM Projects WHERE organisation_id IN ( SELECT organisation_id FROM Projects GROUP BY organisation_id ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.formats = "mp3"
SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.formats = "mp3" INTERSECT SELECT song_name FROM song WHERE resolution < 1000
Select song_name, resolution from song where song_name in ( SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.formats = "mp3" INTERSECT SELECT song_name FROM song WHERE resolution < 1000 ) 
SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.formats = "mp3" INTERSECT SELECT song_name FROM song WHERE resolution < 1000
SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN Activity AS T3 ON T3.actid = T2.actid WHERE T1.fname = "Mark" AND T1.lname = "Giuliano"
SELECT Rank from faculty where Lname = 'Giuliano' and fname = 'Mark'
SELECT fname from faculty order by fname asc
SELECT T3.activity_name FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID JOIN Activity AS T3 ON T3.actid = T2.actid WHERE T1.fname = "Mark" AND T1.lname = "Giuliano"
SELECT name from people
SELECT T3.Name FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID
SELECT T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID
SELECT T2.Date FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID
SELECT T3.Name , T2.Date , T2.Venue FROM debate_people AS T1 JOIN debate AS T2 ON T1.Debate_ID = T2.Debate_ID JOIN people AS T3 ON T1.Affirmative = T3.People_ID
SELECT T1.Regional_Population FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.match_id = 1
SELECT gdp FROM city where city_id = 2
SELECT Hanyu_Pinyin FROM city where city = "Nanjing ( Jiangsu ) "
SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T1.city = "Taizhou ( Zhejiang ) "
SELECT T2.year FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T1.city = "Taizhou ( Zhejiang ) "
SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'CACHEbox'
SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'Fasterfox'
SELECT market_share from browser where name = "Firefox"
SELECT market_share from browser where name = "Safari"
SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'CACHEbox' INTERSECT SELECT T3.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T1.name = 'Fasterfox'
SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY count ( * ) ASC LIMIT 1
SELECT nationality FROM swimmer WHERE name = "Grant Hackett" OR name = "Craig Stevens"
SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id GROUP BY t2.swimmer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT StuID FROM Has_allergy
SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = "food" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = "animal"
SELECT age FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = "food" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = "animal" ) 
SELECT avg ( age ) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = "food" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = "animal" ) 
SELECT avg ( age ) FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = "food" INTERSECT SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = "animal" ) 
SELECT salary FROM salary WHERE YEAR = 1985
SELECT player_id FROM salary order by salary desc limit 1
SELECT salary FROM salary WHERE YEAR = 2010 UNION SELECT salary FROM salary WHERE YEAR = 2001
SELECT name FROM furniture where Num_of_Component < 6
SELECT name FROM furniture where Num_of_Component > 10
SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id = t3.manufacturer_id WHERE t1.num_of_component < 6 INTERSECT SELECT t3.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID JOIN manufacturer AS t3 ON t2.manufacturer_id = t3.manufacturer_id WHERE t1.num_of_component > 10
SELECT COUNT ( * ) FROM Physician
SELECT Name FROM Procedures
SELECT Position FROM Physician WHERE Name = "John Dorian"
SELECT Cost FROM Procedures WHERE Name = "Reverse Rhinopodoplasty"
SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = "John Wen"
SELECT count ( * ) FROM Rooms WHERE bedType = "King"
SELECT avg ( basePrice ) FROM Rooms WHERE bedType = "King"
SELECT decor , count ( * ) FROM Rooms WHERE bedType = "King" GROUP BY decor;
SELECT count ( distinct formats ) FROM files
SELECT formats, count ( * ) FROM files group by formats
SELECT formats FROM files GROUP BY formats ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT formats FROM files GROUP BY formats ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT country FROM addresses GROUP BY country HAVING count ( address_id ) > 4
SELECT zip_postcode FROM addresses where city = 'Lucasville'
SELECT count ( address_id ) FROM addresses
SELECT country FROM addresses GROUP BY country HAVING count ( address_id ) > 4
SELECT cName FROM College WHERE state = 'AZ'
SELECT cName FROM College WHERE enr > 18000 ORDER BY cName
SELECT cName FROM College WHERE enr = 22000
SELECT cName FROM College WHERE enr > 12000 ORDER BY cName , state
SELECT cName FROM College WHERE enr > 18000 ORDER BY cName
SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win'
SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Loss'
SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' INTERSECT SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Loss'
SELECT t1.name, t1.Nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' INTERSECT SELECT t1.name, t1.Nationality FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Loss'
SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Win' INTERSECT SELECT t1.name FROM swimmer AS t1 JOIN record AS t2 ON t1.id = t2.swimmer_id WHERE RESULT = 'Loss'
SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT ( * ) DESC LIMIT 3
SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT ( * ) DESC LIMIT 3
SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT ( * ) ASC LIMIT 3
SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY T2.date_of_transaction ASC LIMIT 1
SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id ORDER BY COUNT ( * ) DESC LIMIT 3
SELECT name FROM captain order by age desc limit 1
SELECT name FROM captain order by age asc limit 1
SELECT count ( * ) , rank FROM captain WHERE age < 50 GROUP BY rank
SELECT count ( * ) , rank FROM captain WHERE age < 50 GROUP BY rank
SELECT count ( * ) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id = T2.start_station_id AND T2.id = T4.id AND T3.id = T4.end_station_id WHERE T1.city = "Howard" AND T3.city = "San Fransisco"
SELECT count ( * ) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id = T2.start_station_id AND T2.id = T4.id AND T3.id = T4.end_station_id WHERE T1.city = "South Van Ness" AND T3.city = "San Fransisco"
SELECT count ( * ) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id = T2.start_station_id AND T2.id = T4.id AND T3.id = T4.end_station_id WHERE T1.city = "Mountain View" AND T3.city = "Palo Alto"
SELECT count ( * ) FROM station AS T1 JOIN trip AS T2 JOIN station AS T3 JOIN trip AS T4 ON T1.id = T2.start_station_id AND T2.id = T4.id AND T3.id = T4.end_station_id WHERE T1.city = "Mountain View" AND T3.city = "Palo Alto"
SELECT Fname , Lname FROM Student WHERE Age > 18 AND Major ! = 600 AND Sex = 'F'
SELECT Fname , Lname FROM Student WHERE Age > 18 AND Major ! = 600 AND Sex = 'M'
SELECT Fname , Lname FROM Student WHERE Major ! = 600 AND Sex = 'M' order by Age desc limit 1
SELECT Major , Advisor FROM Student WHERE LName = "Thornton" and FName = "Ian"
select Fname , Lname FROM Student where Sex = 'F' and Major = 520
SELECT Fname , Lname FROM Student WHERE Age > 18 AND Major != 600 AND Sex = 'F';
SELECT distinct interaction_type FROM medicine_enzyme_interaction
SELECT interaction_type FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( distinct interaction_type ) FROM medicine_enzyme_interaction
SELECT interaction_type , count ( * ) FROM medicine_enzyme_interaction GROUP BY interaction_type ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id HAVING count ( * )  > = 2
SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id HAVING sum ( T2.number_city_affected ) > = 10
SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id HAVING count ( * ) > = 2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id HAVING sum ( T2.number_city_affected ) > = 10
SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id HAVING count ( * ) >= 2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id HAVING sum ( T2.number_city_affected ) >= 10
SELECT count ( * ) FROM airports WHERE name LIKE '%International%'
SELECT country FROM airports GROUP BY country ORDER BY count ( * ) DESC LIMIT 1
SELECT max ( elevation ) FROM airports
SELECT min ( elevation ) FROM airports
SELECT country FROM airports WHERE elevation = ( SELECT min ( elevation ) FROM airports ) 
SELECT count ( * ) FROM airports WHERE name LIKE '%International%'
select rid from routes where dst_apid = '2990'
SELECT count ( DISTINCT dst_apid ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'
select dst_apid from routes where rid = 39
SELECT count ( DISTINCT dst_apid ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid WHERE T1.name = 'American Airlines'
SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN ( SELECT Railway_ID FROM train ) 
SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN ( SELECT Railway_ID FROM train ) AND LOCATION = "York"
SELECT ObjectNumber FROM railway WHERE Railway_ID IN ( SELECT Railway_ID FROM train ) 
SELECT builder FROM railway WHERE ObjectNumber = "1975-7006"
SELECT ObjectNumber FROM railway WHERE Railway_ID NOT IN ( SELECT Railway_ID FROM train ) 
SELECT artist_name from song where country = 'India'
SELECT f_id from song where languages = 'bangla'
SELECT rating from song where resolution = 512
SELECT song_name from song where genre_is = 'tagore'
SELECT song_name from song where country = 'Bangladesh'
SELECT song_name FROM song WHERE rating < ( SELECT min ( rating ) FROM song WHERE languages = 'english' ) 
select min_salary from jobs where JOB_TITLE = 'president'
select Max_SALARY from jobs where JOB_TITLE = 'President'
select FIRST_NAME from employees where employee_id = 100
SELECT job_title , AVG ( salary ) FROM employees AS T1 JOIN jobs AS T2 ON T1.job_id = T2.job_id GROUP BY T2.job_title
SELECT T1.organisation_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.organisation_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.organisation_id, t1.project_details FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.organisation_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.outcome_code FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id where t1.project_details = "deleniti"
SELECT T1.organisation_id , count ( * ) FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.organisation_id ORDER BY count ( * ) DESC LIMIT 1
SELECT POSITION FROM pilot WHERE Join_Year < 2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year > 2005
select age from pilot where position = "Center Team"
select nationality from pilot where position = "Forward-Center Team"
SELECT POSITION FROM pilot WHERE Join_Year	 < 2000 INTERSECT SELECT POSITION FROM pilot WHERE Join_Year	 > 2005
SELECT DISTINCT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom EXCEPT SELECT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = "OTHA" AND T2.lastname = "MOYER"
SELECT DISTINCT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.grade = 1 EXCEPT SELECT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = "OTHA" AND T2.lastname = "MOYER"
SELECT DISTINCT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.grade = 1 EXCEPT SELECT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = "OTHA" AND T2.lastname = "MOYER"
SELECT count ( DISTINCT T2.camera_lens_id ) FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id WHERE T1.country = 'Ethiopia'
SELECT count ( DISTINCT T2.camera_lens_id ) FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id WHERE T1.country ! = 'Ethiopia'
SELECT T1.name FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id WHERE T1.country ! = 'Ethiopia'
SELECT count ( DISTINCT T2.camera_lens_id ) FROM mountain AS T1 JOIN photos AS T2 ON T1.id = T2.mountain_id WHERE T1.country = 'Ethiopia'
SELECT distinct Headquarters FROM company WHERE Industry = "Banking"
SELECT distinct Headquarters FROM company WHERE Industry = "Oil and gas"
SELECT Headquarters FROM company WHERE Industry = "Banking" INTERSECT SELECT Headquarters FROM company WHERE Industry = "Oil and gas"
SELECT Headquarters FROM company WHERE Industry = "Banking" INTERSECT SELECT Headquarters FROM company WHERE Industry = "Oil and gas"
SELECT count ( distinct PROF_NUM ) FROM CLASS WHERE CRS_CODE = "ACCT-211"
SELECT EMP_FNAME, PROF_OFFICE FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num WHERE T1.CRS_CODE = "ACCT-211"
SELECT CRS_DESCRIPTION FROM COURSE WHERE CRS_CODE = "ACCT-211"
SELECT T2.emp_fname , T4.prof_office , T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num
SELECT name FROM instructor WHERE dept_name = 'Comp. Sci.' AND salary > 80000
SELECT name FROM instructor order by salary desc limit 1
SELECT dept_name FROM instructor where name = "Wieland"
SELECT avg ( salary ) from instructor where dept_name = "Pol. Sci."
SELECT avg ( salary ) from instructor where dept_name = "Cybernetics"
SELECT name, ID from instructor order by salary asc limit 1
SELECT name FROM instructor WHERE dept_name = 'Comp. Sci.' AND salary > 80000
SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id ORDER BY t2.order_date DESC LIMIT 1
SELECT count ( distinct customer_id ) FROM customer_orders where order_status = 'Cancelled'
SELECT count ( * ) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id where t1.customer_name = "Eunice Morar"
SELECT payment_method FROM customers where customer_name = "Eunice Morar"
SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id ORDER BY t2.order_date DESC LIMIT 1
SELECT school FROM university WHERE school_id NOT IN ( SELECT school_id FROM basketball_match ) 
SELECT founded FROM university WHERE school = "University of Rhode Island"
SELECT affiliation FROM university WHERE school = "University of Rhode Island"
SELECT count ( * ) FROM university WHERE school_id NOT IN ( SELECT school_id FROM basketball_match ) 
SELECT count ( * ) FROM Documents where Document_Type_Code = "BK"
SELECT count ( * ) FROM Documents where Document_Type_Code = "CV"
SELECT document_type_code FROM Documents GROUP BY document_type_code ORDER BY count ( * ) DESC LIMIT 1
SELECT length_meters from bridge where name = "Fairy Bridge"
SELECT * from bridge where name = "Xian Ren Qiao ( Fairy Bridge ) "
SELECT * from bridge as T1 join architect as T2 on T1.architect_id = T2.id where T1.name = 'Xian Ren Qiao ( Fairy Bridge ) '
SELECT * from bridge as T1 join architect as T2 on T1.architect_id = T2.id where T2.name = "Frank Lloyd Wright" and T1.name ! = "Xian Ren Qiao ( Fairy Bridge ) "
SELECT * FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id = T2.id JOIN bridge AS T3 ON T3.architect_id = T2.id WHERE T3.length_meters > 80
SELECT DISTINCT T1.name FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id = T2.id JOIN bridge AS T3 ON T3.architect_id = T2.id WHERE T3.length_meters > 80
SELECT Name FROM people WHERE Age = 35 OR Age = 36
SELECT Age FROM people WHERE name = "Luther C. Carter"
SELECT Age FROM people WHERE name = "William B. Maclay"
SELECT Name FROM people WHERE Age = 35 OR Age = 36
SELECT County_name FROM county order by County_name
SELECT T1.County_name,COUNT ( * ) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id
SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id HAVING COUNT ( * )  > = 2
SELECT T1.County_name FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District GROUP BY T1.County_id HAVING COUNT ( * ) >= 2
SELECT name FROM building
SELECT name FROM building WHERE building_id IN ( SELECT building_id FROM institution ) 
SELECT floors FROM building WHERE building_id IN ( SELECT building_id FROM institution ) 
SELECT name FROM building WHERE building_id NOT IN ( SELECT building_id FROM institution ) 
select Street_address from building where name = "Bank of America Tower"
SELECT name, street_address FROM building WHERE building_id IN ( SELECT building_id FROM institution ) 
SELECT name FROM building WHERE building_id NOT IN ( SELECT building_id FROM institution ) 
SELECT first_name FROM Staff
SELECT first_name FROM Staff where first_name LIKE "%a%"
SELECT count ( * ) , T2.first_name FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE "%a%"
SELECT count ( * ) FROM Lessons AS T1 JOIN Staff AS T2 ON T1.staff_id = T2.staff_id WHERE T2.first_name LIKE "%a%"
SELECT name FROM instructor
SELECT avg ( salary ) FROM instructor
SELECT name FROM instructor ORDER BY salary DESC LIMIT 1
SELECT name FROM instructor ORDER BY salary DESC LIMIT 1
SELECT FirstName from Reservations where Code = 10105
SELECT LastName from Reservations where Code = 10105
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room HAVING count ( * ) > 60
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId GROUP BY T1.Room HAVING count ( * ) > 60
SELECT count ( * ) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings'
SELECT count ( * ) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year = 2000
SELECT SUM ( salary ) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year = 2000
SELECT count ( * ) FROM salary AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year = 2000
SELECT count ( * ) from university
SELECT t1.school FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id ORDER BY t2.acc_percent DESC LIMIT 1
SELECT t1.school FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id ORDER BY t2.acc_percent LIMIT 1
SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id ORDER BY t2.acc_percent LIMIT 1
SELECT t1.Primary_conference FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id ORDER BY t2.acc_percent LIMIT 1
SELECT Name FROM editor WHERE Age = 24
SELECT Name FROM editor WHERE Age = 25
SELECT Name, age FROM editor WHERE Age =  ( select max ( age ) from editor ) 
SELECT Name, age FROM editor WHERE Age =  ( select min ( age ) from editor ) 
SELECT count ( * ) FROM editor WHERE Age>25 and age<45
SELECT name FROM editor WHERE Age>25 and age<45
SELECT Name FROM editor WHERE Age = 24 OR Age = 25
SELECT college_id FROM member GROUP BY college_id ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT name FROM member where college_id = 4
SELECT Country FROM member GROUP BY Country ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Country FROM member GROUP BY Country ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT cust_name FROM customer
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Mortgages'
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Auto'
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Mortgages' INTERSECT SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE loan_type = 'Auto'
SELECT first_name , last_name FROM employees WHERE department_id = 70 OR department_id = 90
SELECT PHONE_NUMBER from employees where first_name = 'Steven' and last_name = 'King'
SELECT EMPLOYEE_ID from employees where first_name = 'Steven' and last_name = 'King'
SELECT first_name , last_name FROM employees WHERE department_id = 70 OR department_id = 90
SELECT count ( distinct Payment_Method_Code ) from payments
SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count ( * ) desc LIMIT 1
SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count ( * ) ASC LIMIT 1
SELECT Payment_Method_Code, count ( * ) FROM Payments GROUP BY Payment_Method_Code having Payment_Method_Code = "American Express"
SELECT Payment_Method_Code, count ( * ) FROM Payments where Payment_Method_Code = "MasterCard"
SELECT distinct Payment_Method_Code FROM Payments
SELECT Payment_Method_Code FROM Payments GROUP BY Payment_Method_Code ORDER BY count ( * ) ASC LIMIT 1
SELECT sum ( T1.attendance ) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T1.year BETWEEN 2000 AND 2010
SELECT sum ( T1.attendance ) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010
SELECT avg ( T1.attendance ) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Cleveland Forest Citys'
SELECT avg ( T1.attendance ) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Chicago White Stockings'
SELECT T2.name,T1.span_first FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br order by T1.span_first limit 1
SELECT T2.name,T1.span_first FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br order by T1.span_first desc limit 1
SELECT sum ( T1.attendance ) FROM home_game AS T1 JOIN team AS T2 ON T1.team_id = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' AND T1.year BETWEEN 2000 AND 2010;
SELECT dept_store_chain_name from Department_Store_Chain where dept_store_chain_id = 1
SELECT store_name from Department_Stores
SELECT count ( * ) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id WHERE T2.dept_store_chain_name = "South"
SELECT count ( * ) FROM department_stores AS T1 JOIN department_store_chain AS T2 ON T1.dept_store_chain_id = T2.dept_store_chain_id WHERE T2.dept_store_chain_name = "South"
SELECT distinct payment_method_code FROM INVOICES
SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM INVOICES where payment_method_code = "MasterCard"
SELECT payment_method_code FROM INVOICES GROUP BY payment_method_code ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.SportName = "Football"
SELECT T2.lname , T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.SportName = "Football"
SELECT count ( * ) FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.SportName = "Lacrosse"
SELECT T2.lname , T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.SportName = "Lacrosse"
SELECT T2.lname , T2.fname FROM SportsInfo AS T1 JOIN Student AS T2 ON T1.StuID = T2.StuID WHERE T1.SportName = "Football" OR T1.SportName = "Lacrosse"
SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.pPos = 'striker'
SELECT T1.pName,T2.decision FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.pPos = 'striker'
SELECT T1.pName,T2.pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = "no"
SELECT T1.pName,T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T1.HS > 700
SELECT T1.pName,T2.cName,T2.pPos FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T1.HS > 700
SELECT T1.pName FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes' AND T2.pPos = 'striker'
SELECT T1.event_id , T1.service_id FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY T1.Event_ID HAVING count ( * ) > 1
SELECT T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY T1.Event_ID HAVING count ( * ) > 1
SELECT T1.event_id , T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY T1.Event_ID HAVING count ( * ) > 1
SELECT count ( * ) FROM airports
SELECT country FROM airports where city = 'Goroka'
SELECT T1.name , T1.city FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid GROUP BY T2.dst_apid ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.name , T1.city , T2.dst_apid FROM airports AS T1 JOIN routes AS T2 ON T1.apid = T2.dst_apid GROUP BY T2.dst_apid ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.date_of_enrolment , T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = "Karson"
SELECT personal_name, middle_name, family_name FROM Students
SELECT T1.date_of_enrolment , T1.date_of_completion FROM Student_Course_Enrolment AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.personal_name = "Karson"
SELECT count ( distinct Headquarters ) FROM company
SELECT Industry FROM company GROUP BY Industry ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Name FROM company order by Market_Value_in_Billion desc limit 1
SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Headquarters FROM company GROUP BY Headquarters ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Operating_system FROM Web_client_accelerator WHERE Connection = "Broadband, Satellite, Wireless, Fiber, DSL"
SELECT market_share FROM browser WHERE name = "Safari"
SELECT T2.compatible_since_year FROM Web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.accelerator_id WHERE T1.name = "CProxy"
SELECT COUNT ( * ) FROM browser
SELECT name FROM browser
SELECT name , operating_system FROM web_client_accelerator EXCEPT SELECT T1.name , T1.operating_system FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T3.name = 'Opera'
SELECT Name FROM WINE WHERE YEAR = 2006
SELECT Price FROM WINE WHERE YEAR = 2006
SELECT max ( Price ) FROM WINE WHERE YEAR = 2006
SELECT name FROM WINE WHERE price>200
SELECT Name FROM WINE WHERE Price > ( SELECT max ( Price ) FROM WINE WHERE YEAR = 2006 ) 
SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count ( * )  = 1
SELECT T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count ( * )  = 1
SELECT T1.Opening_Hours FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count ( * )  = 1
SELECT T1.Name , T1.Tourist_Attraction_ID FROM Tourist_Attractions AS T1 JOIN VISITS AS T2 ON T1.Tourist_Attraction_ID = T2.Tourist_Attraction_ID GROUP BY T2.Tourist_Attraction_ID HAVING count ( * ) <= 1
SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T2.balance + T3.balance LIMIT 1
SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid where T2.balance>3000
SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid where T3.balance>20000
select balance from SAVINGS order by balance desc limit 1
select min ( balance ) from SAVINGS
select max ( balance ) ,min ( balance ) from CHECKING
SELECT T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T2.balance + T3.balance LIMIT 1
SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = "sesame"
SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = "sesame" AND t3.characteristic_type_code = "Grade"
SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id order by t1.typical_selling_price desc limit 1
SELECT t3.characteristic_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id WHERE t1.product_name = "sesame" AND t3.characteristic_type_code = "Grade"
SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY overall_rating DESC LIMIT 3
SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY dribbling DESC LIMIT 1
SELECT birthday from Player where player_name = "Cristiano Ronaldo"
SELECT DISTINCT T1.player_name FROM Player AS T1 JOIN Player_Attributes AS T2 ON T1.player_api_id = T2.player_api_id ORDER BY overall_rating DESC LIMIT 3
SELECT count ( * ) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = "Dayana Robel"
SELECT count ( * ) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = "America Jaskolski"
SELECT count ( * ) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = "Ellsworth Paucek"
SELECT count ( * ) FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = "Dayana Robel"
SELECT count ( * ) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits ) 
SELECT Tourist_Details FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits ) 
SELECT T1.Tourist_Details FROM Visitors AS T1 JOIN Visits AS T2 ON T1.Tourist_ID = T2.Tourist_ID ORDER BY Visit_Date LIMIT 1
SELECT count ( * ) FROM Visitors WHERE Tourist_ID NOT IN ( SELECT Tourist_ID FROM Visits ) 
SELECT T2.product_name FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%'
SELECT T2.typical_buying_price FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%'
SELECT avg ( T2.typical_buying_price ) FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%'
SELECT T2.product_name FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%' AND T2.typical_buying_price = ""
SELECT T1.product_category_description FROM ref_product_categories AS T1 JOIN products AS T2 ON T1.product_category_code = T2.product_category_code WHERE T2.product_description LIKE '%t%'
SELECT count ( * ) FROM invoices AS T2 JOIN customers AS T1 ON T1.id = T2.customer_id WHERE T1.first_name = "Lucas" AND T1.last_name = "Mancini"
SELECT sum ( T2.total ) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = "Lucas" AND T1.last_name = "Mancini"
SELECT T2.invoice_date FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = "Lucas" AND T1.last_name = "Mancini" ORDER BY t2.invoice_date DESC LIMIT 1
SELECT sum ( T2.total ) FROM customers AS T1 JOIN invoices AS T2 ON T1.id = T2.customer_id WHERE T1.first_name = "Lucas" AND T1.last_name = "Mancini";
SELECT COUNT ( * ) FROM invoices WHERE billing_country = "USA"
SELECT billing_state, COUNT ( * ) FROM invoices WHERE billing_country = "USA" group by billing_state
SELECT billing_country, COUNT ( * ) FROM invoices group by billing_country
SELECT billing_city, COUNT ( * ) FROM invoices where billing_country = "USA" group by billing_city
SELECT billing_city, COUNT ( * ) FROM invoices where billing_country ! = "USA" group by billing_city
SELECT billing_state , COUNT ( * ) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state;
SELECT T2.school , T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id JOIN driver AS T3 ON T1.driver_id = T3.driver_id
SELECT T2.school , T3.name FROM school_bus AS T1 JOIN school AS T2 ON T1.school_id = T2.school_id JOIN driver AS T3 ON T1.driver_id = T3.driver_id
SELECT count ( * ) FROM rating
SELECT count ( * ) FROM ( SELECT * FROM Rating GROUP BY mID HAVING count ( * ) < 2 ) 
SELECT stars FROM Rating ORDER BY stars DESC LIMIT 1
SELECT stars FROM Rating ORDER BY stars aSC LIMIT 1
SELECT avg ( stars ) FROM Rating ORDER BY stars aSC LIMIT 1
SELECT mID , avg ( stars ) FROM Rating GROUP BY mID HAVING count ( * ) >= 2
SELECT donator_name , sum ( amount ) FROM endowment GROUP BY donator_name ORDER BY sum ( amount ) DESC
SELECT donator_name , sum ( amount ) FROM endowment GROUP BY donator_name ORDER BY sum ( amount ) DESC limit 1
SELECT donator_name , sum ( amount ) FROM endowment GROUP BY donator_name ORDER BY sum ( amount ) asc limit 1
SELECT donator_name , sum ( amount ) FROM endowment GROUP BY donator_name ORDER BY sum ( amount ) DESC
SELECT distinct aid FROM Aircraft WHERE name = "Airbus A340-300"
select sum ( distance ) from flight where aid = ( SELECT distinct aid FROM Aircraft WHERE name = "Airbus A340-300" ) 
SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T2.name = "Airbus A340-300"
SELECT T1.flno FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T2.name = "Airbus A340-300"
SELECT age from person where name = "Zach"
SELECT name from person where job = "doctor"
SELECT name from person where city = "new york city"
SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age < ( SELECT avg ( age ) FROM person ) 
SELECT DISTINCT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.age < ( SELECT avg ( age ) FROM person ) 
SELECT count ( * ) FROM Customers
SELECT count ( * ) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = "Ray"
SELECT GType from Video_games where GName = 'The Vanishing of Eric Calder'
SELECT Hours_Played FROM student as T1 JOIN Plays_Games AS T2 WHERE Lname = 'Kim' and Fname = 'Tracy'
SELECT city_code from student where Fname = 'Shiela' and Lname = 'Jones'
SELECT lname , sex FROM Student WHERE StuID IN ( SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID = T2.GameID WHERE T2.Gname = "Call of Destiny" INTERSECT SELECT T1.StuID FROM Plays_games AS T1 JOIN Video_games AS T2 ON T1.GameID = T2.GameID WHERE T2.Gname = "Works of Widenius" ) 
SELECT count ( DISTINCT name ) FROM products WHERE name NOT IN ( SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Sony' ) 
SELECT count ( DISTINCT name ) FROM products WHERE name IN ( SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Creative Labs' ) 
SELECT count ( DISTINCT name ) FROM products WHERE name NOT IN ( SELECT T1.name FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code WHERE T2.name = 'Sony' ) 
SELECT job_title_code FROM Staff_Department_Assignments WHERE department_id = 4
SELECT date_assigned_from FROM Staff_Department_Assignments WHERE staff_id = 1
SELECT distinct department_id FROM Staff_Department_Assignments WHERE job_title_code = "Sales Person"
SELECT date_assigned_to FROM Staff_Department_Assignments WHERE job_title_code = "Clerical Staff"
SELECT date_assigned_from,date_assigned_to FROM Staff_Department_Assignments where job_title_code = "Sales Person"
SELECT staff_id FROM Staff_Department_Assignments WHERE date_assigned_to < ( SELECT max ( date_assigned_to ) FROM Staff_Department_Assignments WHERE job_title_code = 'Clerical Staff' ) 
SELECT Name FROM artist
SELECT Name FROM artist WHERE age > 46
SELECT count ( * ) FROM artist WHERE age > 46 AND Year_Join > 1990
SELECT count ( * ) FROM artist WHERE age > 46 AND year_join > 1990
SELECT name , id FROM station
select count ( * ) from ( SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id GROUP BY T2.station_id HAVING avg ( T2.bikes_available ) > 14 UNION SELECT name FROM station WHERE installation_date LIKE "12/%" ) 
SELECT T1.name , T1.id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id GROUP BY T2.station_id HAVING avg ( T2.bikes_available ) > 14 UNION SELECT name , id FROM station WHERE installation_date LIKE "12/%"
SELECT T1.name , T1.id FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id GROUP BY T2.station_id HAVING avg ( T2.bikes_available ) > 14 UNION SELECT name , id FROM station WHERE installation_date LIKE "12/%"
SELECT nickname FROM Staff
SELECT date_joined_staff FROM Staff
SELECT phone_number FROM Customers
SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff
SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff
SELECT count ( * ) FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id
SELECT t1.network_name , t1.services FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id
SELECT t1.network_name , t1.services,station_id FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id
SELECT count ( * ) , t1.network_name , t1.services FROM station AS t1 JOIN route AS t2 ON t1.id = t2.station_id GROUP BY t2.station_id
SELECT roomName FROM Rooms WHERE basePrice < 160 AND beds = 2 AND decor = 'modern'
SELECT roomName, roomid FROM Rooms WHERE basePrice = ( select max ( baseprice ) from rooms ) 
SELECT baseprice, roomName, roomid FROM Rooms WHERE basePrice = ( select min ( baseprice ) from rooms ) 
SELECT roomid, roomName, decor FROM Rooms WHERE beds = ( select max ( beds ) from rooms ) 
SELECT roomName FROM Rooms WHERE basePrice < 160 AND beds = 2 AND decor = 'modern';
SELECT count ( * ) FROM Products
SELECT min ( Price ) FROM Products
SELECT name from products where price = ( select min ( Price ) FROM Products ) 
SELECT name , price FROM Products ORDER BY price ASC LIMIT 1
SELECT building_full_name FROM Apartment_Buildings WHERE building_description = 'Studio'
SELECT building_manager FROM Apartment_Buildings WHERE building_description = 'Studio'
SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name like '%Court%'
SELECT building_full_name FROM Apartment_Buildings WHERE building_full_name LIKE "%court%"
SELECT market_id, district from market
SELECT t1.market_id,t1.district,t2.phone_id from market as t1 join phone_market as t2 on t1.market_id = t2.market_id
SELECT t2.market_id, t2.district,t1.phone_id,t3.name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID
SELECT t2.market_id, t2.district,t1.phone_id,t3.name FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID order by t1.phone_id
SELECT T3.Name , T2.District FROM phone_market AS T1 JOIN market AS T2 ON T1.Market_ID = T2.Market_ID JOIN phone AS T3 ON T1.Phone_ID = T3.Phone_ID
SELECT count ( * ) FROM enzyme 
SELECT count ( distinct enzyme_id ) FROM medicine_enzyme_interaction
SELECT count ( * ) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction ) ;
SELECT count ( distinct Residence ) FROM player
SELECT distinct Residence FROM player
SELECT Residence FROM player group by Residence HAVING COUNT ( * ) > = 1
SELECT Residence FROM player GROUP BY Residence HAVING COUNT ( * ) >= 2
SELECT T1.product_id, T2.booked_amount from Products_for_Hire as T1 join Products_Booked as T2 on T1.product_id = T2.product_id
SELECT product_id FROM Products_for_hire WHERE product_id NOT IN ( SELECT product_id FROM products_booked WHERE booked_amount > 200 ) 
SELECT count ( * ) FROM Products_for_hire WHERE product_id NOT IN ( SELECT product_id FROM products_booked WHERE booked_amount > 200 ) 
SELECT count ( distinct gtype ) FROM Video_games
SELECT gtype, count ( * ) FROM Video_games GROUP BY gtype
SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count ( * ) LIMIT 1
SELECT gtype FROM Video_games GROUP BY gtype ORDER BY count ( * ) LIMIT 1
SELECT capacity, length, height, width FROM catalog_contents WHERE catalog_entry_name = "Cola"
SELECT price_in_dollars, price_in_euros, price_in_pounds FROM catalog_contents WHERE catalog_entry_name = "Cream Soda"
SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1
SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1
SELECT count ( * ) FROM professor WHERE dept_code = "HIST"
SELECT count ( * ) FROM professor WHERE dept_code = "HIST" and prof_high_degree = "Ph.D."
SELECT count ( distinct dept_code ) FROM professor
SELECT distinct dept_code from professor where dept_code = "ENG"
SELECT count ( * ) from professor where dept_code = "ENG" and prof_high_degree = "Ph.D."
SELECT prof_office from professor where dept_code = "HIST" and prof_high_degree = "Ph.D."
SELECT count ( * ) from professor where prof_high_degree = "Ph.D."
SELECT count ( * ) from professor where prof_high_degree = "Ph.D." and dept_code = "ACCT"
SELECT prof_office from professor where prof_high_degree = "Ph.D." and dept_code = "ACCT"
SELECT prof_extension from professor where prof_high_degree = "Ph.D." and dept_code = "ACCT" and prof_office = "KLR 229D"
SELECT count ( * ) , dept_code FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code
SELECT name FROM captain ORDER BY age LIMIT 1
SELECT age FROM captain ORDER BY age LIMIT 1
SELECT name FROM captain ORDER BY age desc LIMIT 1
SELECT name FROM captain ORDER BY age LIMIT 1
SELECT count ( * ) FROM student WHERE sex = 'F' AND city_code = 'BAL'
SELECT Lname FROM student WHERE sex = 'F' AND city_code = 'BAL'
SELECT Lname FROM student WHERE sex = 'M' AND age < 20
SELECT lname FROM student WHERE sex = 'F' AND city_code = 'BAL' UNION SELECT lname FROM student WHERE sex = 'M' AND age < 20
SELECT count ( * ) FROM Acceptance
SELECT scores FROM submission ORDER BY scores DESC LIMIT 1
SELECT Author FROM submission
SELECT College FROM submission WHERE Author = "Steve Niehaus"
SELECT Author FROM submission WHERE Submission_ID NOT IN ( SELECT Submission_ID FROM acceptance ) 
SELECT Author FROM submission WHERE Submission_ID NOT IN ( SELECT Submission_ID FROM acceptance ) 
SELECT max ( age ) FROM artist WHERE country = 'United States'
SELECT count ( Artist_ID ) FROM artist WHERE country = 'United States' and Year_Join>1993
SELECT year_join FROM artist WHERE Name = 'Vijay Singh'
SELECT avg ( age ) , min ( age ) FROM artist WHERE country = 'United States'
SELECT avg ( Grade ) FROM list
SELECT FirstName From teachers
SELECT FirstName From teachers WHERE FirstName LIKE "M%"
SELECT DISTINCT T1.firstname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.grade = 1 EXCEPT SELECT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = "OTHA" AND T2.lastname = "MOYER"
SELECT DISTINCT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.grade = 1 EXCEPT SELECT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = "OTHA" AND T2.lastname = "MOYER"
SELECT avg ( ticket_price ) FROM exhibition WHERE YEAR < 2009
SELECT min ( ticket_price ) FROM exhibition WHERE YEAR < 2009
SELECT max ( ticket_price ) FROM exhibition WHERE YEAR < 2009
SELECT avg ( ticket_price ) FROM exhibition WHERE YEAR = 2005
SELECT avg ( ticket_price ) FROM exhibition WHERE YEAR < 2006
SELECT avg ( ticket_price ) , min ( ticket_price ) , max ( ticket_price ) FROM exhibition WHERE YEAR < 2009
SELECT count ( * ) FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id = T2.id WHERE T2.brand = 'Olympus'
SELECT T1.name FROM photos AS T1 JOIN camera_lens AS T2 ON T1.camera_lens_id = T2.id group by T1.name having T2.brand = 'Olympus'
SELECT T2.name FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma'
SELECT count ( * ) from photos as T1 join camera_lens as T2 on T1.camera_lens_id = T2.id where T2.brand = 'Sigma'
SELECT T1.name from photos as T1 join camera_lens as T2 on T1.camera_lens_id = T2.id where T2.brand = 'Sigma'
SELECT T1.name FROM camera_lens AS T1 JOIN photos AS T2 ON T2.camera_lens_id = T1.id WHERE T1.brand = 'Sigma' OR T1.brand = 'Olympus'
SELECT count ( * ) FROM parties
SELECT count ( * ) FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id = t2.party_id WHERE t2.form_id =  ( SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id = t2.party_id WHERE t2.form_id =  ( SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT t1.party_email FROM parties AS t1 JOIN party_forms AS t2 ON t1.party_id = t2.party_id WHERE t2.form_id = ( SELECT form_id FROM party_forms GROUP BY form_id ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT count ( distinct department_id ) from Staff_Department_Assignments
SELECT job_title_code from Staff_Department_Assignments where department_id = 5
SELECT count ( * ) from Staff_Department_Assignments where job_title_code = "Department Manager"
SELECT T1.staff_name , T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.date_assigned_from LIKE "2016%"
SELECT count ( * ) FROM races
SELECT date FROM races ORDER BY date LIMIT 1
SELECT date FROM races ORDER BY date DESC LIMIT 1
SELECT name,date FROM races ORDER BY date DESC LIMIT 1
SELECT name FROM races ORDER BY date DESC LIMIT 1
SELECT T3.first_name,T3.middle_name,T3.last_name FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T1.candidate_id = 111
SELECT T3.email_address FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T3.login_name = "zops"
SELECT T2.assessment_date FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.candidate_id = 121
SELECT T3.cell_mobile_number FROM candidates AS T1 JOIN candidate_assessments AS T2 ON T1.candidate_id = T2.candidate_id JOIN people AS T3 ON T1.candidate_id = T3.person_id WHERE T2.asessment_outcome_code = "Fail"
SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Country ! = "China"
SELECT T1.Name, T2.Country FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Country ! = "China"
SELECT count ( * ) FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Country = "China"
SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Country != "China"
SELECT rank , company , market_value FROM company WHERE main_industry = 'Banking' ORDER BY sales_billion , profits_billion
SELECT company FROM company ORDER BY market_value LIMIT 1
SELECT market_value FROM company WHERE Company = "BP"
SELECT rank , company , market_value FROM company WHERE main_industry = 'Banking' ORDER BY sales_billion , profits_billion
SELECT COUNT ( * ) FROM problem_log
SELECT log_entry_date FROM problem_log ORDER BY log_entry_date asc LIMIT 1
SELECT log_entry_date FROM problem_log ORDER BY log_entry_date DESC LIMIT 1
SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1
SELECT problem_log_id FROM problem_log ORDER BY log_entry_date DESC LIMIT 1
SELECT title FROM course WHERE dept_name = 'Statistics' EXCEPT SELECT title FROM course WHERE dept_name = 'Psychology'
SELECT credits FROM course WHERE title = 'Care and Feeding of Cats'
SELECT course_id FROM course WHERE title = 'Care and Feeding of Cats'
SELECT title FROM course WHERE dept_name = 'Statistics' EXCEPT SELECT title FROM course WHERE dept_name = 'Psychology'
SELECT DISTINCT Residence FROM player
SELECT Residence, count ( * ) FROM player GROUP BY Residence
SELECT Residence, count ( * ) FROM player EXCEPT SELECT Residence, count ( * ) FROM player WHERE count ( * ) < 2
SELECT Player_name, Gender FROM player WHERE Residence = "Winnipeg"
SELECT Residence FROM player WHERE gender = "M" INTERSECT SELECT Residence FROM player WHERE gender = "F"
SELECT count ( Device_ID ) FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID where Shop_Name = 'Dinas Device'
SELECT count ( Device_ID ) FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID where Shop_Name = 'Best Buy'
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T2.Shop_Name,Location FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name = T2.name JOIN PersonFriend AS T3 ON T1.friend = T3.name JOIN PersonFriend AS T4 ON T3.friend = T4.name WHERE T2.name = 'Alice' AND T4.name ! = 'Alice'
select city from person where name = "Zach"
select name from person where city = "austin"
select friend from PersonFriend where name = "Zach"
select name, job from person where name in ( select friend from PersonFriend where name = "Zach" ) 
SELECT DISTINCT T4.name FROM PersonFriend AS T1 JOIN Person AS T2 ON T1.name = T2.name JOIN PersonFriend AS T3 ON T1.friend = T3.name JOIN PersonFriend AS T4 ON T3.friend = T4.name WHERE T2.name = 'Alice' AND T4.name != 'Alice'
SELECT name_first, name_last, name_given FROM player
SELECT T2.name_first , T2.name_last, T2.name_given FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'
SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 or T1.year = 2007
SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2005 AND T3.name = 'Washington Nationals' INTERSECT SELECT T2.name_first , T2.name_last FROM salary AS T1 JOIN player AS T2 ON T1.player_id = T2.player_id JOIN team AS T3 ON T3.team_id_br = T1.team_id WHERE T1.year = 2007 AND T3.name = 'Washington Nationals'
SELECT count ( * ) FROM Person WHERE city = "austin"
SELECT count ( * ) FROM PersonFriend WHERE name = "Alice" OR name = "Bob"
SELECT name FROM PersonFriend WHERE friend IN ( SELECT name FROM person WHERE city = 'austin' ) 
SELECT count ( DISTINCT name ) FROM PersonFriend WHERE friend NOT IN ( SELECT name FROM person WHERE city = 'Austin' ) 
SELECT T2.emp_fname , T2.emp_lname FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num = T2.emp_num ORDER BY T2.emp_fname
SELECT T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num = T2.emp_num ORDER BY T2.emp_fname
SELECT prof_high_degree from professor
SELECT T2.emp_fname , T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num = T2.emp_num ORDER BY T2.emp_fname
SELECT zip_code from county where county_id = 2
SELECT population from county where zip_code = "D21"
SELECT county_name from county where zip_code = "D02"
SELECT election_id from election where district = 2
SELECT count ( DISTINCT T2.Delegate ) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T1.Population > 50000
SELECT count ( DISTINCT T2.Delegate ) FROM county AS T1 JOIN election AS T2 ON T1.County_id = T2.District WHERE T1.Population > 50000
SELECT * FROM university ORDER BY enrollment DESC LIMIT 3
SELECT * FROM university ORDER BY enrollment DESC LIMIT 1
SELECT Primary_conference FROM university where school = "Rutgers University"
SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1
SELECT t2.fname , t2.lname FROM Has_allergy AS T1 JOIN Student as T2 on T1.StuID = T2.StuID
SELECT count ( * ) FROM Student WHERE StuID NOT IN ( SELECT t2.stuid FROM Has_allergy AS T1 JOIN Student as T2 on T1.StuID = T2.StuID ) 
SELECT lname, fname FROM Student WHERE StuID NOT IN ( SELECT t2.stuid FROM Has_allergy AS T1 JOIN Student as T2 on T1.StuID = T2.StuID ) 
SELECT fname , lname FROM Student WHERE StuID NOT IN ( SELECT T1.StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = "food" ) 
SELECT part_name from parts
SELECT part_id from parts
SELECT part_id , chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1
SELECT part_id , chargeable_amount FROM Parts ORDER BY chargeable_amount ASC LIMIT 1
SELECT count ( * ) from person where city = "new york city"
select count ( * ) from ( SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Bob' ) 
SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Bob'
SELECT T2.friend FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Bob'
SELECT weight from people where name = "Ty Conklin"
SELECT height from people where name = "Jack Campbell"
SELECT T1.total FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id = T2.people_id WHERE T2.Birth_Date LIKE "%January%";
SELECT sum ( Domestic_Passengers ) FROM airport
SELECT sum ( International_Passengers ) FROM airport
SELECT airport_name FROM airport order by Domestic_Passengers desc limit 1
SELECT sum ( Domestic_Passengers ) FROM airport WHERE Airport_Name LIKE "%London%"
SELECT sum ( Domestic_Passengers ) FROM airport WHERE Airport_Name LIKE "%London%"
SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type = 'saving'
SELECT acc_type FROM customer where acc_type ! = "saving"
select cust_name from customer order by credit_score desc limit 1
SELECT cust_name FROM customer EXCEPT SELECT cust_name FROM customer WHERE acc_type = 'saving'
SELECT date_of_latest_revision FROM Catalogs
SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count ( * ) > 1
select catalog_name from Catalogs where date_of_latest_revision in ( SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count ( * ) > 1 ) 
select catalog_name, date_of_latest_revision from Catalogs where date_of_latest_revision in ( SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count ( * ) > 1 ) 
SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count ( * ) > 1
SELECT date_of_latest_revision FROM Catalogs GROUP BY date_of_latest_revision HAVING count ( * ) > 1
SELECT avg ( age ) FROM artist
SELECT name FROM artist order by age desc limit 1
SELECT distinct Country FROM artist
SELECT count ( * ) FROM artist WHERE age > 46 AND year_join > 1990
SELECT color FROM grapes WHERE Grape = "Barbera"
SELECT DISTINCT grape FROM wine WHERE score > 90
SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = "White"
SELECT DISTINCT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = "White" AND T2.score > 90
SELECT count ( * ) FROM flight WHERE pilot = 'Thompson'
SELECT name FROM airport WHERE id NOT IN ( SELECT airport_id FROM flight WHERE pilot = 'Thompson' ) 
SELECT count ( * ) FROM airport WHERE id NOT IN ( SELECT airport_id FROM flight WHERE pilot = 'Thompson' ) ;
SELECT DISTINCT song_name FROM song WHERE resolution > ( SELECT min ( resolution ) FROM song WHERE languages = "english" ) 
SELECT country FROM song WHERE resolution > ( SELECT min ( resolution ) FROM song WHERE languages = "english" ) 
SELECT country,song_name, resolution FROM song WHERE resolution > ( SELECT min ( resolution ) FROM song WHERE languages = "english" ) 
SELECT song_name FROM song order by rating desc limit 3
SELECT song_name,artist_name FROM song order by rating desc limit 3
SELECT DISTINCT song_name FROM song WHERE resolution > ( SELECT min ( resolution ) FROM song WHERE languages = "english" ) 
SELECT count ( * ) , T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid GROUP BY T1.name
SELECT max ( balance ) from checking
SELECT min ( balance ) from checking
SELECT count ( * ) , T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid GROUP BY T1.name
SELECT * FROM CHECKING
SELECT * FROM SAVINGS
SELECT * FROM ACCOUNTS
SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T2.balance DESC LIMIT 1
SELECT T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T2.balance DESC LIMIT 1
SELECT sum ( acc_bal ) FROM customer WHERE credit_score > 100 GROUP BY state
SELECT acc_type from customer
SELECT credit_score from customer where cust_name = "Mary"
SELECT sum ( acc_bal ) , state FROM customer WHERE credit_score > 100 GROUP BY state
SELECT Category FROM music_festival
SELECT Category FROM music_festival GROUP BY Category HAVING COUNT ( * ) > 1
SELECT Category FROM music_festival GROUP BY Category HAVING COUNT ( * ) > 1
SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID ORDER BY T1.Total_Points DESC
SELECT T2.Name FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID ORDER BY T1.Total_Points DESC
SELECT Height FROM people where name = 'Paul Hamm'
SELECT Hometown FROM people where name = 'Paul Hamm'
SELECT sum ( Total_Points ) FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID where t2.Name = 'Paul Hamm'
SELECT Rings_Points FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID where t2.Name = 'Paul Hamm'
SELECT T2.Age FROM gymnast AS T1 JOIN people AS T2 ON T1.Gymnast_ID = T2.People_ID ORDER BY T1.Total_Points DESC
SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count ( * ) DESC LIMIT 1
SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count ( * ) ASC LIMIT 1
SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count ( * ) DESC LIMIT 1
SELECT TYPE FROM institution GROUP BY TYPE ORDER BY count ( * ) DESC LIMIT 1
select count ( * ) from customers
select customer_name from customers
select customer_details from customers
SELECT T2.order_status FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id where T1.customer_name = "George"
SELECT T1.customer_name FROM customers AS T1 JOIN orders AS T2 JOIN order_items AS T3 JOIN products AS T4 ON T1.customer_id = T2.customer_id AND T2.order_id = T3.order_id AND T3.product_id = T4.product_id WHERE T4.product_name = "food" GROUP BY T1.customer_id HAVING count ( * ) >= 1
SELECT * FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg ( T2.salary ) ASC LIMIT 1
SELECT avg ( salary ) from salary
SELECT count ( distinct team_id ) from salary
SELECT T1.name , T1.team_id FROM team AS T1 JOIN salary AS T2 ON T1.team_id = T2.team_id GROUP BY T1.team_id ORDER BY avg ( T2.salary ) ASC LIMIT 1;
select product_name from products
select max ( product_price ) from products
SELECT t1.product_name FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id = t2.product_id GROUP BY t2.product_id ORDER BY count ( * ) DESC LIMIT 1
select product_price from Products where product_name = 'dvds'
SELECT t1.product_name , t1.product_price FROM products AS t1 JOIN regular_order_products AS t2 ON t1.product_id = t2.product_id GROUP BY t2.product_id ORDER BY count ( * ) DESC LIMIT 1
SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'
SELECT id FROM instructor WHERE dept_name = "Psychology"
SELECT salary FROM instructor WHERE id = 22591
SELECT salary FROM instructor WHERE id = 96895
SELECT dept_name FROM instructor WHERE name LIKE '%Soisalon%'
SELECT T1.engineer_id FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.engineer_id , T1.first_name , T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count ( * ) DESC LIMIT 1
select visit_start_datetime, visit_end_datetime from engineer_visits where engineer_id = ( SELECT T1.engineer_id FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT T1.engineer_id , T1.first_name , T1.last_name FROM Maintenance_Engineers AS T1 JOIN Engineer_Visits AS T2 GROUP BY T1.engineer_id ORDER BY count ( * ) DESC LIMIT 1
select T1.state_province_county from Addresses as T1 join Employees as T2 on T1.address_id = T2.employee_address_id group by T1.state_province_county order by count ( * ) desc limit 1
select T1.state_province_county from Addresses as T1 join Employees as T2 on T1.address_id = T2.employee_address_id group by T1.state_province_county order by count ( * ) limit 1
SELECT state_province_county FROM addresses WHERE address_id NOT IN ( SELECT employee_address_id FROM Employees ) 
SELECT state_province_county FROM addresses WHERE address_id NOT IN ( SELECT employee_address_id FROM Employees ) 
SELECT count ( * ) FROM ship
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id GROUP BY t2.ship_id HAVING count ( * ) > 1
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id GROUP BY t2.ship_id HAVING count ( * )  = 1
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id GROUP BY t2.ship_id HAVING count ( * ) > 1
SELECT count ( distinct CRS_CODE ) from course
SELECT count ( DEPT_CODE ) from department
SELECT CRS_CODE from course where CRS_DESCRIPTION = 'Statistics'
SELECT CRS_DESCRIPTION from course
SELECT CRS_CODE from course where CRS_DESCRIPTION = 'Intro. to Statistics'
SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T1.crs_description = 'Intro. to Statistics'
SELECT T2.dept_name FROM course AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T1.crs_description LIKE '%Statistics%'
SELECT count ( DISTINCT T2.id ) , T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name GROUP BY T3.dept_name
SELECT count ( DISTINCT T2.id ) , count ( DISTINCT T3.id ) , T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name GROUP BY T3.dept_name
SELECT count ( * ) from student
SELECT T2.name FROM department AS T1 JOIN instructor AS T2 ON T1.dept_name = T2.dept_name where T1.dept_name = 'Astronomy'
SELECT T2.name,T2.salary FROM department AS T1 JOIN instructor AS T2 ON T1.dept_name = T2.dept_name where T1.dept_name = 'Astronomy'
SELECT count ( DISTINCT T2.id ) , count ( DISTINCT T3.id ) , T3.dept_name FROM department AS T1 JOIN student AS T2 ON T1.dept_name = T2.dept_name JOIN instructor AS T3 ON T1.dept_name = T3.dept_name GROUP BY T3.dept_name
SELECT Name FROM cinema
SELECT Name FROM cinema ORDER BY Openning_year ASC LIMIT 1
SELECT avg ( Capacity ) FROM cinema
SELECT LOCATION FROM cinema EXCEPT SELECT LOCATION FROM cinema WHERE capacity > 800
SELECT LOCATION FROM cinema EXCEPT SELECT LOCATION FROM cinema WHERE capacity > 800
SELECT Name FROM branch ORDER BY membership_amount ASC LIMIT 1
SELECT Open_year FROM branch WHERE Branch_ID = 3
SELECT open_year FROM branch GROUP BY open_year HAVING count ( * )  > = 2
SELECT open_year FROM branch GROUP BY open_year HAVING count ( * ) >= 2
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id order by Mar limit 1
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar < T2.Jul
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar > T2.Oct
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar < T2.Jul OR T2.Mar > T2.Oct
SELECT complaint_status_code , count ( * ) FROM complaints WHERE complaint_type_code = "Product Failure" GROUP BY complaint_status_code
SELECT complaint_status_code FROM complaints WHERE complaint_type_code = "Product Failure"
SELECT complaint_status_code , count ( * ) FROM complaints WHERE complaint_type_code = "Product Failure" GROUP BY complaint_status_code
select count ( * ) from investors
select count ( * ) from ( SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id HAVING COUNT ( * )  > = 2 ) 
SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id HAVING COUNT ( * )  > = 2
SELECT T2.investor_id FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id GROUP BY T2.investor_id HAVING COUNT ( * ) >= 2
SELECT marketing_region_name from marketing_regions
SELECT marketing_region_code from stores where store_name = "Rob Dinning"
SELECT T1.marketing_region_name from marketing_regions as T1 join stores as T2 on T1.marketing_region_code = T2.marketing_region_code where T2.store_name = "Rob Dinning"
SELECT * from stores where store_name = "Rob Dinning"
SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code = T2.Marketing_Region_Code WHERE T2.Store_Name = "Rob Dinning"
SELECT T1.Marketing_Region_Name FROM Marketing_Regions AS T1 JOIN Stores AS T2 ON T1.Marketing_Region_Code = T2.Marketing_Region_Code WHERE T2.Store_Name = "Rob Dinning"
SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.Name HAVING COUNT ( * )  > = 2
SELECT T2.Work_Type FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID where T1.Name = "Kamila Porczyk"
SELECT T1.Age FROM editor AS T1 where T1.Name = "Anna Powierza"
SELECT T2.Work_Type FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID where T1.Name = "Anna Powierza"
SELECT T1.Name FROM editor AS T1 JOIN journal_committee AS T2 ON T1.Editor_ID = T2.Editor_ID GROUP BY T1.Name HAVING COUNT ( * ) >= 2
SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY catalog_publisher DESC
SELECT catalog_publisher, count ( * ) FROM catalogs GROUP BY catalog_publisher
SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count ( * ) DESC LIMIT 1
SELECT catalog_publisher FROM catalogs GROUP BY catalog_publisher ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid = T2.amenid GROUP BY T2.amenid ORDER BY count ( * ) DESC LIMIT 1
select dormid from has_amenity where amenid = ( SELECT T1.amenid FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid = T2.amenid GROUP BY T2.amenid ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT T1.amenid FROM dorm_amenity AS T1 where T1.amenity_name = 'TV Lounge'
SELECT T1.amenity_name FROM dorm_amenity AS T1 JOIN has_amenity AS T2 ON T1.amenid = T2.amenid GROUP BY T2.amenid ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.fname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count ( * ) DESC LIMIT 1
SELECT rank from faculty where fname = "Mark"
SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID ORDER BY count ( * ) DESC LIMIT 1
SELECT ENROLL_GRADE from ENROLL where STU_NUM = 324257
SELECT count ( * ) from Class
SELECT count ( * ) from student
SELECT DEPT_CODE from student where STU_NUM = 324257
SELECT T1.stu_fname FROM student AS T1 JOIN enroll AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T2.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211' AND T1.stu_lname LIKE 'S%'
SELECT company FROM customers WHERE first_name = "Eduardo" AND last_name = "Martins"
SELECT phone FROM customers WHERE first_name = "Eduardo" AND last_name = "Martins"
SELECT company FROM customers WHERE first_name = "Eduardo" AND last_name = "Martins";
SELECT count ( * ) from Club as T1 join member_of_club as T2 on T1.clubid = T2.clubid where T1.clubname = "Bootup Baltimore"
SELECT T3.age from Club as T1 join member_of_club as T2 on T1.clubid = T2.clubid join student as T3 on T2.stuid = T3.stuid where T1.clubname = "Bootup Baltimore"
SELECT avg ( T3.age ) from Club as T1 join member_of_club as T2 on T1.clubid = T2.clubid join student as T3 on T2.stuid = T3.stuid where T1.clubname = "Bootup Baltimore"
SELECT T3.fname, T3.lname from Club as T1 join member_of_club as T2 on T1.clubid = T2.clubid join student as T3 on T2.stuid = T3.stuid where T1.clubname = "Bootup Baltimore" and T2.position = "President"
SELECT clublocation from club where clubname = "Bootup Baltimore"
SELECT avg ( t3.age ) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = "Bootup Baltimore"
SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = "Red" AND T2.price > 50
SELECT T2.state FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = "Red" AND T2.price > 50
SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = "Red" AND T2.price > 50
select count ( * ) from employees
select SALARY from employees where EMPLOYEE_ID = 101
select PHONE_NUMBER from employees where EMPLOYEE_ID = 102
SELECT department_id , SUM ( salary ) FROM employees GROUP BY department_id HAVING count ( * ) >= 2
SELECT capacity FROM cinema where name = "Codling"
SELECT max ( capacity ) FROM cinema
SELECT location FROM cinema where name = "Codling"
SELECT name , LOCATION FROM cinema ORDER BY capacity DESC LIMIT 1
SELECT customer_name from customers where payment_method_code = 'Credit Card'
SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.payment_method_code = 'Credit Card' GROUP BY T1.customer_id HAVING count ( * ) > 2
SELECT T1.customer_address FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.payment_method_code = 'Credit Card' GROUP BY T1.customer_id HAVING count ( * ) > 2
SELECT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T1.payment_method_code = 'Credit Card' GROUP BY T1.customer_id HAVING count ( * ) > 2
SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation = 1
SELECT departmentID from department where name = "Surgery"
SELECT DISTINCT T2.name FROM affiliated_with AS T1 JOIN department AS T2 ON T1.department = T2.departmentid WHERE PrimaryAffiliation = 1
select count ( * ) from Customer
select BirthDate from Employee where FirstName is 'Andrew' and LastName is 'Adams'
SELECT T2.FirstName , T2.LastName FROM CUSTOMER AS T1 JOIN EMPLOYEE AS T2 ON T1.SupportRepId = T2.EmployeeId WHERE T1.FirstName = "Leonie"
SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count ( * ) DESC LIMIT 1
SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID ORDER BY votes DESC
SELECT T2.Name, T2.Party FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID ORDER BY votes DESC
SELECT T2.Name, T2.State FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID ORDER BY votes DESC
SELECT T2.Name, T1.Vote_Percent FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID ORDER BY votes DESC
SELECT T2.Name, T1.date FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID ORDER BY votes DESC
SELECT T2.Name FROM election AS T1 JOIN representative AS T2 ON T1.Representative_ID = T2.Representative_ID ORDER BY votes DESC
SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = "Koby"
SELECT T1.role_code FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = "Koby"
SELECT T1.role_description FROM ROLES AS T1 JOIN Employees AS T2 ON T1.role_code = T2.role_code WHERE T2.employee_name = "Koby";
SELECT count ( * ) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID WHERE T1.cName = "OU"
SELECT cName FROM college ORDER BY enr DESC LIMIT 1
SELECT T2.pName FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID WHERE T1.cName = "OU"
SELECT T2.pName FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID WHERE T1.cName = ( SELECT cName FROM college ORDER BY enr DESC LIMIT 1 ) 
SELECT LName, age, FName FROM STUDENT WHERE stuid = 1003 or stuid = 1004
SELECT sex, city_code FROM STUDENT WHERE stuid = 1005 or stuid = 1004
SELECT sex, count ( * ) FROM STUDENT group by sex
SELECT LName FROM STUDENT WHERE Sex = "F" ORDER BY Age DESC
SELECT LName FROM STUDENT WHERE Sex = "F" ORDER BY Age DESC
SELECT major FROM Student GROUP BY major ORDER BY count ( * ) DESC LIMIT 1
select avg ( age ) from student where major = ( SELECT major FROM Student GROUP BY major ORDER BY count ( * ) DESC LIMIT 1 ) 
select sex from student where major = ( SELECT major FROM Student GROUP BY major ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT major FROM Student GROUP BY major ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) from architect as T1 join bridge as T2 on T1.id = T2.architect_id where T1.name = "Frank Lloyd Wright"
SELECT count ( * ) from architect as T1 join bridge as T2 on T1.id = T2.architect_id where T1.name = "Frank Gehry"
SELECT T1.name from architect as T1 join bridge as T2 on T1.id = T2.architect_id where T2.name = "Xian Ren Qiao ( Fairy Bridge ) "
SELECT name from architect where id = 2
SELECT T1.id , T1.name FROM architect AS T1 JOIN bridge AS T2 ON T1.id = T2.architect_id GROUP BY T1.id HAVING count ( * ) >= 3
SELECT Date FROM flight ORDER BY Date LIMIT 1
SELECT Pilot FROM flight ORDER BY Date LIMIT 1
SELECT AVG ( Altitude ) FROM flight
SELECT T1.id , T1.name , T1.IATA FROM airport AS T1 JOIN flight AS T2 ON T1.id = T2.airport_id GROUP BY T2.id ORDER BY count ( * ) DESC LIMIT 1
SELECT company_name from Third_Party_Companies
SELECT company_address from Third_Party_Companies where company_name = "Dooley and Sons"
SELECT first_name from Maintenance_Engineers where first_name like "E%"
SELECT T1.company_id , T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Engineers AS T2 ON T1.company_id = T2.company_id GROUP BY T1.company_id HAVING count ( * ) >= 2 UNION SELECT T3.company_id , T3.company_name FROM Third_Party_Companies AS T3 JOIN Maintenance_Contracts AS T4 ON T3.company_id = T4.maintenance_contract_company_id GROUP BY T3.company_id HAVING count ( * ) >= 2
SELECT count ( * ) FROM game
SELECT count ( * ) FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident ) 
SELECT count ( * ) FROM game WHERE id IN ( SELECT game_id FROM injury_accident ) 
SELECT stadium_id FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident ) 
SELECT count ( * ) FROM game WHERE id NOT IN ( SELECT game_id FROM injury_accident ) 
SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.store_name = "Blackville"
SELECT t3.City_Population FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.store_name = "Blackville"
SELECT t1.store_name FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id order by t3.city_population desc limit 1
SELECT t3.headquartered_city FROM store AS t1 JOIN store_district AS t2 ON t1.store_id = t2.store_id JOIN district AS t3 ON t2.district_id = t3.district_id WHERE t1.store_name = "Blackville"
SELECT lname, fname FROM STUDENT
SELECT count ( distinct T1.StuID ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T1.city_code = "NYC" AND T2.Election_Cycle = "Spring"
SELECT T1.lname, T1.fname FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T1.city_code = "NYC" AND T2.Election_Cycle = "Spring"
SELECT avg ( T1.Age ) FROM STUDENT AS T1 JOIN VOTING_RECORD AS T2 ON T1.StuID = SECRETARY_Vote WHERE T1.city_code = "NYC" AND T2.Election_Cycle = "Spring"
SELECT FNAME, LNAME FROM Faculty WHERE FacID = 1082
SELECT Sex FROM Faculty WHERE Rank = "Professor"
SELECT phone FROM Faculty WHERE Lname = "Goodrich"
SELECT Lname FROM Faculty WHERE Fname = "Mark"
SELECT sex , count ( * ) FROM Faculty WHERE rank = "AsstProf" GROUP BY sex
SELECT * FROM problem_log
SELECT problem_status_code FROM problem_log WHERE problem_category_code = 'Middleware'
SELECT * FROM problem_log WHERE problem_category_code ! = 'Middleware'
SELECT problem_log_id , problem_id FROM problem_log ORDER BY log_entry_date LIMIT 1
SELECT count ( * ) FROM airlines
SELECT T1.name, count ( * ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid
SELECT T1.name FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY count ( * ) DESC LIMIT 10
SELECT T1.name , T2.alid FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T2.alid ORDER BY count ( * ) DESC LIMIT 10
SELECT address FROM customers WHERE first_name = "Luís" and last_name = " Köhler"
SELECT address FROM customers WHERE id = 1
SELECT email,phone FROM customers WHERE first_name = "Astrid" and last_name = "Gruber"
SELECT postal_code FROM customers where id = 3
SELECT email , phone FROM customers WHERE first_name = "Astrid" AND last_name = "Gruber";
SELECT id from campuses where year = 1956
SELECT t2.TotalEnrollment_AY FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id = t2.campus where t1.campus = "California State University-Channel Islands"
SELECT t1.county FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id = t2.campus where t2.FTE_AY = 178
SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id = t2.campus WHERE t2.year = 1956 AND totalenrollment_ay > 400 AND FTE_AY > 200
SELECT T1.campus FROM campuses AS t1 JOIN enrollments AS t2 ON t1.id = t2.campus WHERE t2.year = 1956 AND totalenrollment_ay > 400 AND FTE_AY > 200
SELECT count ( * ) FROM Employees
SELECT Employee_Name FROM Employees
SELECT Date_of_Birth FROM Employees WHERE employee_name = "Ebba"
SELECT T2.role_name , T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T1.employee_name = "Ebba"
SELECT T2.role_name , T2.role_description FROM Employees AS T1 JOIN ROLES AS T2 ON T1.role_code = T2.role_code WHERE T1.employee_name = "Ebba"
select count ( Allergy ) from Allergy_Type where AllergyType = 'food'
select count ( Allergy ) from Allergy_Type where AllergyType = 'animal'
select count ( Allergy ) from Allergy_Type where AllergyType = 'environmental'
SELECT allergytype FROM Allergy_type GROUP BY allergytype ORDER BY count ( * ) ASC LIMIT 1
SELECT user_name , password FROM users GROUP BY role_code ORDER BY count ( * ) DESC LIMIT 1
SELECT role_code FROM users GROUP BY role_code ORDER BY count ( * ) DESC LIMIT 1
SELECT user_login FROM users GROUP BY role_code ORDER BY count ( * ) DESC LIMIT 1
SELECT user_name , password FROM users GROUP BY role_code ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.School FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT ( * ) > 1
SELECT T2.School, T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT ( * ) > 1
SELECT T2.Location FROM player AS T1 JOIN school AS T2 ON T1.School_ID = T2.School_ID GROUP BY T1.School_ID HAVING COUNT ( * ) > 1
SELECT * FROM player WHERE Points > 20
SELECT Position FROM player WHERE Points > 20
SELECT Name FROM player WHERE Points > 20
SELECT Name FROM player WHERE Points = ( Select max ( Points ) FROM player ) 
SELECT POSITION FROM player GROUP BY name HAVING avg ( Points ) >= 20
SELECT count ( * ) FROM Student WHERE sex = "M" AND StuID IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = "food" ) 
SELECT T3.Fname, T3.Lname,T2.Allergy FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy JOIN Student as T3 on T3.StuID = T1.StuID WHERE T2.allergytype = "food" and T3.sex = 'M'
SELECT count ( * ) FROM Has_allergy AS T1 JOIN Student as T2 on T2.StuID = T1.StuID WHERE T1.Allergy = "Cat" and T2.sex = 'F'
SELECT count ( * ) FROM Student WHERE sex = "M" AND StuID IN ( SELECT StuID FROM Has_allergy AS T1 JOIN Allergy_Type AS T2 ON T1.Allergy = T2.Allergy WHERE T2.allergytype = "food" ) 
SELECT T2.party_name , count ( * ) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id where T1.party_id = 2 GROUP BY T1.party_id
SELECT T1.party_id, count ( T2.party_name ) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id where T1.party_id = 1
SELECT T2.Took_office,T2.Region_ID FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id where T1.party_id = 1
SELECT T2.party_name , count ( * ) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id
SELECT T1.Customer_Event_ID FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID = T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING count ( * ) = 1
SELECT T1.Customer_Event_ID FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID = T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING count ( * ) BETWEEN 1 AND 3
SELECT T1.Customer_Event_ID , T1.property_id FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID = T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING count ( * ) BETWEEN 1 AND 3
SELECT T1.Customer_Event_ID , T1.property_id FROM Customer_Events AS T1 JOIN Customer_Event_Notes AS T2 ON T1.Customer_Event_ID = T2.Customer_Event_ID GROUP BY T1.customer_event_id HAVING count ( * ) BETWEEN 1 AND 3
SELECT count ( * ) FROM savings WHERE balance > ( SELECT avg ( balance ) FROM savings ) 
SELECT * FROM savings WHERE custid = 1339
SELECT count ( * ) FROM savings WHERE balance > ( SELECT avg ( balance ) FROM savings ) 
SELECT count ( * ) from transactions WHERE share_count > 10
SELECT T1.transaction_type_description FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10
SELECT T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10
SELECT T1.transaction_type_description , T2.date_of_transaction FROM Ref_Transaction_Types AS T1 JOIN TRANSACTIONS AS T2 ON T1.transaction_type_code = T2.transaction_type_code WHERE T2.share_count < 10
SELECT count ( * ) FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 2
select date_order_placed from Orders where customer_id in ( SELECT T1.customer_id FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1 ) order by date_order_placed desc limit 1
SELECT T2.gender FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.customer_last_name , T1.customer_id , T2.phone_number FROM Orders AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT max ( T1.duration ) , max ( T2.resolution ) , T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY T2.languages ORDER BY T2.languages
SELECT file_size,formats FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY T2.languages ORDER BY T2.languages
SELECT max ( T1.duration ) , max ( T2.resolution ) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY T2.country ORDER BY T2.country
SELECT file_size,formats FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY T2.country ORDER BY T2.country
SELECT max ( T1.duration ) , max ( T2.resolution ) , T2.languages FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY T2.languages ORDER BY T2.languages
SELECT weight from people order by weight desc limit 1
SELECT people_id, weight from people order by weight desc limit 1
SELECT people_id, name, weight from people order by weight desc limit 1
SELECT T2.Name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T2.Weight DESC LIMIT 1
SELECT count ( distinct customer_id ) from customers
SELECT * from customers where customer_details like "%Diana%"
SELECT customer_details from customers where customer_id = 263
SELECT customer_details FROM customers WHERE customer_details LIKE "%Diana%"
SELECT count ( * ) from professor
SELECT * FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count ( * ) desc LIMIT 1
SELECT * FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count ( * ) LIMIT 1
SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.dept_code ORDER BY count ( * ) LIMIT 1
SELECT name , member_id FROM member WHERE age < 30
SELECT name , member_id FROM member WHERE Membership_card = 'Black'
SELECT name , member_id FROM member WHERE Membership_card = 'Black' OR age > 30
SELECT count ( * ) FROM member WHERE Membership_card = 'Black' OR age > 30
SELECT name FROM member WHERE Membership_card = 'Black' OR age > 30
SELECT name , member_id FROM member WHERE Membership_card = 'Black' OR age < 30
SELECT count ( * ) FROM district
SELECT city_area FROM district where District_name = "Bahawalnagar District"
SELECT city_population FROM district where District_name = "Attock District"
SELECT district_name FROM district ORDER BY city_population DESC LIMIT 1
SELECT coupon_id, coupon_amount FROM Discount_Coupons
SELECT T1.coupon_id, T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.good_or_bad_customer = 'good' INTERSECT SELECT T1.coupon_id, T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.good_or_bad_customer = 'bad'
SELECT date_issued from discount_coupons where coupon_id in ( SELECT T1.coupon_id FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.good_or_bad_customer = 'good' INTERSECT SELECT T1.coupon_id FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.good_or_bad_customer = 'bad' ) 
SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.good_or_bad_customer = 'good' INTERSECT SELECT T1.coupon_amount FROM Discount_Coupons AS T1 JOIN customers AS T2 ON T1.coupon_id = T2.coupon_id WHERE T2.good_or_bad_customer = 'bad'
select max ( balance ) from savings
select min ( balance ) from savings
select name from ACCOUNTS
SELECT sum ( T2.balance ) , T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid GROUP BY T1.name
SELECT sum ( T2.balance ) , T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid GROUP BY T1.name
SELECT FacID FROM Faculty
SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID HAVING count ( * )  > = 2
SELECT T2.major FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID HAVING count ( * )  > = 2
SELECT T1.FacID FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID HAVING count ( * ) >= 2
SELECT avg ( Days_held ) FROM wrestler
SELECT name FROM wrestler order by Days_held limit 1
SELECT name FROM wrestler where Wrestler_ID = 1
SELECT Name FROM wrestler ORDER BY Days_held ASC LIMIT 1
SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id GROUP BY t3.city ORDER BY count ( * ) DESC LIMIT 1
SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id GROUP BY t3.city ORDER BY count ( * ) LIMIT 1
SELECT t3.state_province_county FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id GROUP BY t3.city ORDER BY count ( * ) LIMIT 1
SELECT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id GROUP BY t3.city ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id
SELECT T2.name FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math'
SELECT T2.name, T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math'
SELECT T2.name , T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'History'
SELECT T2.name , T2.salary FROM advisor AS T1 JOIN instructor AS T2 ON T1.i_id = T2.id JOIN student AS T3 ON T1.s_id = T3.id WHERE T3.dept_name = 'Math'
SELECT customer_address FROM customers
SELECT order_date FROM customer_orders
SELECT customer_phone FROM customers
SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status_code = "Pending" ORDER BY T2.customer_id
SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id WHERE t3.order_quantity =  ( SELECT max ( order_quantity ) FROM order_items ) 
SELECT t1.customer_name, T1.date_became_customer FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id WHERE t3.order_quantity =  ( SELECT max ( order_quantity ) FROM order_items ) 
SELECT t1.customer_name, T2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id where T2.order_status = "Cancelled"
SELECT t3.order_quantity, t2.order_date FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id WHERE t1.payment_method = "Cash"
SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id WHERE t3.order_quantity = ( SELECT max ( order_quantity ) FROM order_items ) 
SELECT ClubLocation FROM Club WHERE ClubName = "Hopkins Student Enterprises"
SELECT t3.fname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = "Hopkins Student Enterprises" AND t2.position = "CTO"
SELECT t3.fname , t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = "Hopkins Student Enterprises" AND t2.position = "CTO"
SELECT t3.fname , t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = "Hopkins Student Enterprises" AND t2.position = "CTO"
SELECT count ( * ) FROM tweets WHERE text LIKE '%intern%'
SELECT * FROM tweets order by createdate desc limit 1
SELECT * FROM tweets order by createdate limit 1
SELECT text FROM tweets WHERE text LIKE '%intern%'
SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%'
SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC
SELECT first_name,last_name FROM employees WHERE hire_date > 1987
SELECT salary FROM employees WHERE hire_date > 1987 order by salary
SELECT * FROM employees WHERE first_name LIKE '%D%' OR first_name LIKE '%S%' ORDER BY salary DESC
select count ( * ) from room
select count ( distinct blockcode ) from room
select blockcode from room order by RoomNumber desc
SELECT count ( * ) , T1.blockcode FROM BLOCK AS T1 JOIN room AS T2 ON T1.blockfloor = T2.blockfloor AND T1.blockcode = T2.blockcode GROUP BY T1.blockcode
SELECT bedType FROM Rooms where roomid = "RND"
SELECT decor FROM Rooms where roomname = "Abscond or bolster"
SELECT decor , avg ( basePrice ) , min ( basePrice ) FROM Rooms GROUP BY decor
SELECT decor , avg ( basePrice ) , min ( basePrice ) FROM Rooms GROUP BY decor;
SELECT count ( distinct Event_ID ) FROM Participants_in_Events
SELECT count ( * ) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'
SELECT Participant_Details FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'
SELECT count ( * ) FROM participants AS T1 JOIN Participants_in_Events AS T2 ON T1.Participant_ID = T2.Participant_ID WHERE T1.participant_details LIKE '%Dr.%'
SELECT dorm_name FROM dorm
SELECT avg ( T1.age ) , T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid GROUP BY T3.dorm_name
SELECT avg ( T1.age ) , T3.dorm_name, T3.student_capacity FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid GROUP BY T3.dorm_name
SELECT avg ( T1.age ) , T3.dorm_name FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid GROUP BY T3.dorm_name
SELECT document_name, access_count FROM documents
SELECT document_structure_code FROM documents
SELECT document_name,document_structure_code FROM documents where document_structure_code = ( select min ( document_structure_code ) from documents ) 
SELECT avg ( access_count )  FROM documents where document_structure_code = ( select min ( document_structure_code ) from documents ) group by document_name
SELECT avg ( access_count ) FROM documents GROUP BY document_structure_code ORDER BY count ( * ) ASC LIMIT 1
SELECT date_became_customer FROM Customers WHERE first_name = "Carole" AND last_name = "Bernhard"
SELECT amount_outstanding FROM Customers WHERE first_name = "Carole" AND last_name = "Bernhard"
SELECT customer_status_code FROM Customers WHERE first_name = "Carole" AND last_name = "Bernhard"
SELECT date_became_customer FROM Customers WHERE last_name = "Bernhard"
SELECT date_became_customer FROM Customers WHERE first_name = "Carole" AND last_name = "Bernhard";
SELECT mid FROM Movie WHERE title = 'Gone with the Wind'
SELECT year FROM Movie WHERE title = 'Star Wars'
SELECT director FROM Movie WHERE title = 'The Sound of Music'
SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR > 2000
SELECT title FROM Movie WHERE director = 'James Cameron' AND YEAR > 2000
SELECT count ( distinct login_name ) FROM Students
SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students
SELECT login_name FROM Course_Authors_and_Tutors INTERSECT SELECT login_name FROM Students
SELECT count ( distinct project_id ) FROM Project_Staff WHERE role_code = 'leader'
SELECT other_details FROM Project_Staff WHERE role_code = 'leader' and date_from < '1989-04-24 23:51:54'
SELECT count ( * ) FROM Project_Staff WHERE role_code = 'leader' OR date_from < '1989-04-24 23:51:54'
SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID
SELECT T3.visit_date FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = "Vincent" union SELECT T3.VISIT_DATE FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = "Marcelle"
SELECT T1.Name,T3.visit_date,T1.How_to_Get_There FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = "Vincent" union SELECT T1.Name,T3.VISIT_DATE,T1.How_to_Get_There FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = "Marcelle"
SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = "Vincent" INTERSECT SELECT T1.Name FROM Tourist_Attractions AS T1 JOIN VISITORS AS T2 JOIN VISITS AS T3 ON T1.Tourist_Attraction_ID = T3.Tourist_Attraction_ID AND T2.Tourist_ID = T3.Tourist_ID WHERE T2.Tourist_Details = "Marcelle"
SELECT distinct Investor FROM entrepreneur
SELECT Investor FROM entrepreneur group by investor having count ( * ) > 1
Select investor from entrepreneur where investor in ( SELECT Investor FROM entrepreneur WHERE Money_Requested > 140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested < 120000 ) group by investor having count ( * ) > 1
SELECT Investor FROM entrepreneur WHERE Money_Requested > 140000 INTERSECT SELECT Investor FROM entrepreneur WHERE Money_Requested < 120000
SELECT count ( * ) FROM song
SELECT rating FROM song ORDER BY rating DESC LIMIT 1
SELECT count ( * ) FROM song
SELECT resolution FROM song ORDER BY resolution DESC LIMIT 1
SELECT f_id , genre_is , artist_name FROM song WHERE languages = "english" ORDER BY rating
SELECT * FROM journalist WHERE Years_working > 10
SELECT name FROM journalist WHERE Years_working > 10 AND Years_working < 3
SELECT Nationality FROM journalist WHERE Years_working > 10 INTERSECT SELECT Nationality FROM journalist WHERE Years_working < 3
SELECT avg ( years_working ) FROM journalist WHERE Nationality = "England"
SELECT name FROM journalist WHERE Nationality = "England"
SELECT avg ( age ) FROM journalist WHERE Nationality = "England"
SELECT Nationality FROM journalist WHERE Years_working > 10 INTERSECT SELECT Nationality FROM journalist WHERE Years_working < 3
SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count ( * ) > 3
SELECT attribute_name FROM Attribute_Definitions WHERE attribute_data_type = "Bool"
SELECT attribute_id FROM Attribute_Definitions WHERE attribute_data_type = "Bool"
SELECT attribute_data_type FROM Attribute_Definitions GROUP BY attribute_data_type HAVING count ( * ) > 3
SELECT T2.apt_number, T1.booking_start_date, T1.booking_end_date FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = "Confirmed"
SELECT count ( * ) FROM Apartments WHERE apt_number IN ( SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = "Confirmed" ) AND bedroom_count = 3
SELECT bathroom_count FROM Apartments WHERE apt_number IN ( SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = "Confirmed" ) AND bedroom_count = 3
SELECT DISTINCT T2.apt_number FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = "Confirmed"
SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Sarah Martinez'
SELECT director, title from movie where director ! = "Victor Fleming"
select T1.director, T1.title, T2.stars from movie as T1 join rating as T2 on T1.mid = T2.mid where T1.mid in ( SELECT mID from movie where director ! = "Victor Fleming" ) 
SELECT DISTINCT T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID JOIN Reviewer AS T3 ON T1.rID = T3.rID WHERE T3.name = 'Sarah Martinez'
SELECT T1.name , T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid
SELECT avg ( balance ) FROM savings
SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid WHERE T2.balance > ( SELECT avg ( balance ) FROM savings ) 
SELECT T1.name , T2.balance + T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid WHERE T3.balance > ( SELECT avg ( balance ) FROM savings ) 
SELECT T1.id FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id GROUP BY T1.id ORDER BY count ( * ) DESC LIMIT 1
select name from browser where id = 1
select name from browser order by market_share limit 2
select t1.name from browser as T1 join accelerator_compatible_browser as T2 on T1.id = T2.browser_id order by compatible_since_year asc limit 1
SELECT T1.id , T1.name FROM browser AS T1 JOIN accelerator_compatible_browser AS T2 ON T1.id = T2.browser_id GROUP BY T1.id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T1.Attraction_Type_Description FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T2.Name FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code where Attraction_Type_Description = "gallery"
SELECT count ( * ) FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code where Attraction_Type_Description = "gallery"
SELECT Opening_Hours FROM Tourist_Attractions where Name = "haunted mansion"
SELECT T1.Attraction_Type_Description , T2.Attraction_Type_Code FROM Ref_Attraction_Types AS T1 JOIN Tourist_Attractions AS T2 ON T1.Attraction_Type_Code = T2.Attraction_Type_Code GROUP BY T2.Attraction_Type_Code ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT first_name , last_name FROM employees WHERE department_id = 70 OR department_id = 90
SELECT distinct department_id from employees
SELECT first_name , last_name FROM employees order by salary desc limit 1
SELECT first_name , last_name FROM employees WHERE department_id = 70 OR department_id = 90
SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year > 2009
SELECT count ( distinct City ) from city
SELECT avg ( GDP ) from city
SELECT max ( GDP ) from city
SELECT T1.city FROM city AS T1 JOIN hosting_city AS T2 ON T1.city_id = T2.host_city WHERE T2.year > 2010
SELECT fname , lname FROM student WHERE city_code = 'HKG'
SELECT fname , lname FROM student WHERE city_code ! = 'HKG'
SELECT avg ( age ) FROM student WHERE city_code ! = 'HKG'
SELECT fname , lname FROM student WHERE city_code != 'HKG' ORDER BY age
SELECT count ( * ) FROM Products
SELECT count ( * ) FROM Products_in_Events
SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT ( * )  > = 3
SELECT Product_Price FROM Products ORDER BY Product_PRICE DESC LIMIT 1
SELECT avg ( Product_Price ) FROM Products
SELECT T1.Product_Name FROM Products AS T1 JOIN Products_in_Events AS T2 ON T1.Product_ID = T2.Product_ID GROUP BY T1.Product_Name HAVING COUNT ( * ) >= 2
SELECT * FROM student WHERE age < 25
SELECT * FROM student WHERE sex = 'F' AND age < 25
SELECT count ( * ) FROM student WHERE sex = 'F' AND age < 25
SELECT count ( * ) FROM student WHERE sex = 'F' AND age < 25
SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count ( * ) DESC LIMIT 1
SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count ( * ) LIMIT 1
SELECT count ( * ) FROM Customers_cards where card_type_code = "Credit"
SELECT count ( * ) FROM Customers_cards where card_type_code = "Credit"
SELECT card_type_code FROM Customers_cards GROUP BY card_type_code ORDER BY count ( * ) DESC LIMIT 1
SELECT staff_id from staff where staff_first_name = "Christop"
SELECT count ( * ) FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_id = "10"
SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = "Christop"
SELECT T1.problem_description FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = "Christop"
select total_passengers from station where name = "London Waterloo"
select number_of_platforms from station where station_id = 2
select main_services from station where station_id = 3
SELECT LOCATION FROM station EXCEPT SELECT LOCATION FROM station WHERE number_of_platforms > = 15
SELECT LOCATION FROM station EXCEPT SELECT LOCATION FROM station WHERE number_of_platforms >= 15
SELECT T3.dormid, count ( T4.amenid ) FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid = T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid = T5.amenid GROUP BY T3.dormid
SELECT T1.stuid FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.dormid = 160
SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.dormid = 160
SELECT T1.fname FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid WHERE T2.dormid IN ( SELECT T2.dormid FROM dorm AS T3 JOIN has_amenity AS T4 ON T3.dormid = T4.dormid JOIN dorm_amenity AS T5 ON T4.amenid = T5.amenid GROUP BY T3.dormid ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3
SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased ASC LIMIT 3
SELECT product_id FROM product_suppliers ORDER BY total_amount_purchased DESC LIMIT 3
SELECT first_name FROM employees WHERE first_name NOT LIKE '%M%'
SELECT first_name , last_name , hire_date , salary , department_id FROM employees WHERE first_name NOT LIKE '%M%'
SELECT first_name , last_name , hire_date , salary , department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id
SELECT first_name , last_name , hire_date , salary , department_id FROM employees WHERE first_name NOT LIKE '%M%' ORDER BY department_id
SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id = T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id = T3.transaction_id WHERE T3.share_count > 100 AND T3.transaction_type_code = "PUR"
SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id = T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id = T3.transaction_id WHERE T3.share_count > 100 AND T3.transaction_type_code = "PUR" ORDER BY T3.amount_of_transaction DESC LIMIT 1
SELECT T3.date_of_transaction FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id = T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id = T3.transaction_id WHERE T3.share_count > 100 AND T3.transaction_type_code = "PUR" ORDER BY T3.amount_of_transaction DESC LIMIT 1
SELECT T3.transaction_type_code FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id = T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id = T3.transaction_id WHERE T3.share_count > 100 AND T3.transaction_type_code = "PUR" ORDER BY T3.amount_of_transaction DESC LIMIT 1
SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id = T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id = T3.transaction_id WHERE T3.share_count > 100 AND T3.transaction_type_code = "PUR"
SELECT project_id FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code = 'researcher' ) 
SELECT role_code FROM Project_Staff WHERE project_id = 5
SELECT role_code FROM Project_Staff WHERE project_id = 1
SELECT project_id FROM Project_Staff WHERE role_code = 'researcher'
SELECT organisation_id FROM Projects WHERE project_id = 1
SELECT T1.staff_id FROM Project_Staff AS T1 JOIN Projects AS T2 WHERE T1.project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code = 'researcher' ) 
SELECT project_details FROM Projects WHERE project_id = 1
SELECT count ( * ) FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code = 'researcher' ) 
SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code = 'researcher' ) 
SELECT project_details FROM Projects WHERE project_id NOT IN ( SELECT project_id FROM Project_Staff WHERE role_code = 'researcher' ) 
SELECT T1.resident_id, count ( * ) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id = T2.resident_id GROUP BY T1.resident_id ORDER BY count ( * ) DESC
SELECT T1.resident_id, count ( * ) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id = T2.resident_id GROUP BY T1.resident_id ORDER BY count ( * ) DESC
SELECT T1.resident_id, count ( * ) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id = T2.resident_id GROUP BY T1.resident_id ORDER BY count ( * ) DESC
SELECT T1.resident_id , T1.other_details , count ( * ) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id = T2.resident_id GROUP BY T1.resident_id ORDER BY count ( * ) DESC
SELECT T1.resident_id , T1.other_details , count ( * ) FROM Residents AS T1 JOIN Residents_Services AS T2 ON T1.resident_id = T2.resident_id GROUP BY T1.resident_id ORDER BY count ( * ) DESC
SELECT count ( * ) from teachers
SELECT grade from list where FirstName like "%MAUDE%"
SELECT Lastname from list where FirstName like "%STORMY%"
SELECT count ( * ) from list
SELECT T1.firstname , T1.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = "OTHA" AND T2.lastname = "MOYER"
SELECT count ( Zip_code ) FROM county
SELECT count ( County_Id ) FROM county
SELECT max ( Population ) , min ( Population ) FROM county
SELECT count ( * ) from Person where job = "student"
SELECT count ( * ) from Person
SELECT count ( distinct friend ) from PersonFriend
SELECT count ( * ) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Bob'
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Bob'
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Bob'
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Zach'
SELECT T1.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Bob'
SELECT duration from files order by duration desc limit 1
SELECT duration from files order by duration limit 1
SELECT count ( * ) from files where duration < 4
SELECT count ( * ) FROM files WHERE duration LIKE "4:%"
SELECT T2.song FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.Artist = "Gorgoroth" order by T2.Issue_Date limit 1
SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.Artist = "Gorgoroth"
SELECT T2.Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.Artist = "Gorgoroth"
SELECT course_id FROM takes
SELECT semester , YEAR FROM takes GROUP BY semester , YEAR ORDER BY count ( * ) LIMIT 1
SELECT count ( * ) FROM takes WHERE semester = 'Fall' and year = '2008'
SELECT semester , YEAR FROM takes GROUP BY semester , YEAR ORDER BY count ( * ) LIMIT 1
SELECT city_code FROM Student WHERE Fname = "Linda" AND Lname = "Smith"
SELECT fname,lname FROM Student WHERE sex = "F"
SELECT city_code FROM Student WHERE sex = "F"
SELECT fname,lname FROM Student order by age desc limit 1
SELECT city_code FROM Student WHERE Fname = "Linda" AND Lname = "Smith";
SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Grape = "Cabernet Franc"
SELECT * FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T2.price > 50
SELECT grape FROM grapes where Color = "Red"
SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = "Red" AND T2.price > 50
SELECT T2.Name FROM Grapes AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape WHERE T1.Color = "Red" AND T2.price > 50
select official_name from city
SELECT T1.Status FROM city AS T1 JOIN farm_competition AS T2 ON T1.City_ID = T2.Host_city_ID GROUP BY T2.Host_city_ID ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Room FROM Stay
SELECT T1.Name FROM Stay as T4 Join Patient as T1 where T4.Patient = T1.SSN and T4.Room = 111
SELECT distinct T4.Name, T3.Dose FROM stay AS T1 JOIN patient AS T2 ON T1.Patient = T2.SSN JOIN Prescribes AS T3 ON T3.Patient = T2.SSN JOIN Medication AS T4 ON T3.Medication = T4.Code WHERE T2.Name = 'John Smith'
SELECT T4.name FROM stay AS T1 JOIN patient AS T2 ON T1.Patient = T2.SSN JOIN Prescribes AS T3 ON T3.Patient = T2.SSN JOIN Medication AS T4 ON T3.Medication = T4.Code WHERE room = 111
SELECT count ( * ) FROM Student WHERE Sex = "F"
SELECT Age FROM Student WHERE LName = "Smith"
SELECT FName FROM Student ORDER BY Advisor DESC LIMIT 1
SELECT fname , sex FROM Student WHERE StuID IN ( SELECT StuID FROM Has_allergy WHERE Allergy = "Milk" EXCEPT SELECT StuID FROM Has_allergy WHERE Allergy = "Cat" ) 
SELECT T1.teacher_id , count ( * ) FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id GROUP BY T1.teacher_id
SELECT T1.teacher_id , count ( * ) FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id GROUP BY T1.teacher_id order by count ( * ) desc
SELECT * FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id
SELECT T2.first_name, T1.teacher_id , count ( * ) FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id GROUP BY T1.teacher_id order by count ( * ) desc
SELECT T1.teacher_id , T2.first_name FROM Assessment_Notes AS T1 JOIN Teachers AS T2 ON T1.teacher_id = T2.teacher_id GROUP BY T1.teacher_id ORDER BY count ( * ) DESC LIMIT 3
select count ( Country ) from perpetrator
SELECT Country FROM perpetrator WHERE Injured > 50
SELECT Country FROM perpetrator WHERE Injured < 20
SELECT Country FROM perpetrator WHERE Injured > 50 INTERSECT SELECT Country FROM perpetrator WHERE Injured < 20
SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Country = "China"
SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Country = "Japan"
SELECT T1.Height FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Country = "China" OR T2.Country = "Japan"
SELECT T1.Weight FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Country = "South Korea"
SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID WHERE T2.Country = "China" OR T2.Country = "Japan"
SELECT Name FROM wrestler
SELECT Team FROM Elimination
SELECT T2.Name , T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID ORDER BY T2.Days_held DESC
SELECT T2.Name , T1.Team FROM elimination AS T1 JOIN wrestler AS T2 ON T1.Wrestler_ID = T2.Wrestler_ID ORDER BY T2.Days_held DESC
SELECT T2.name , T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id
SELECT T2.name , T3.name, t1.compatible_since_year FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id
SELECT T2.name , T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id ORDER BY T1.compatible_since_year DESC
SELECT T2.name , T3.name FROM accelerator_compatible_browser AS T1 JOIN browser AS T2 ON T1.browser_id = T2.id JOIN web_client_accelerator AS T3 ON T1.accelerator_id = T3.id ORDER BY T1.compatible_since_year DESC
SELECT job_title_code from staff_department_assignments
SELECT T1.staff_id FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = "Department Manager"
SELECT T1.staff_id , T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = "Department Manager"
SELECT T1.staff_id , T1.staff_gender FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id WHERE T2.job_title_code = "Department Manager"
SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3
SELECT membership_amount FROM branch ORDER BY membership_amount DESC LIMIT 3
SELECT Open_year FROM branch ORDER BY membership_amount DESC LIMIT 3
SELECT Address_road FROM branch ORDER BY membership_amount DESC LIMIT 3
SELECT Address_road FROM branch ORDER BY membership_amount DESC LIMIT 1
SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3
SELECT T1.name FROM architect AS T1 JOIN mill AS T2 ON T1.id = T2.architect_id GROUP BY T1.id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.id , T1.name , T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id = T2.architect_id GROUP BY T1.id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.name FROM architect AS T1 JOIN mill AS T2 ON T1.id = T2.architect_id where T1.name = 'Frank Lloyd Wright'
SELECT T1.id , T1.name , T1.nationality FROM architect AS T1 JOIN mill AS T2 ON T1.id = T2.architect_id GROUP BY T1.id ORDER BY count ( * ) DESC LIMIT 1
SELECT avg ( Age ) from Student
SELECT sex,avg ( Age ) FROM student group by Sex
SELECT count ( StuID ) FROM student where Age<17
select count ( StuID ) from student where Fname in ( SELECT Fname FROM student group by Fname having count ( * ) >1 ) 
select count ( ClubID ) from Club where ClubLocation = 'AKW'
select count ( ClubID ) from Club where ClubLocation = 'HHH'
SELECT DISTINCT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.city_code = "BAL"
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id WHERE t2.rank = 'Midshipman'
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id WHERE t2.rank = 'Lieutenant'
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id WHERE t2.rank = 'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id WHERE t2.rank = 'Lieutenant'
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id WHERE t2.rank = 'Midshipman' INTERSECT SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id WHERE t2.rank = 'Lieutenant'
SELECT AVG ( FacID ) FROM Faculty
SELECT Rank FROM faculty GROUP BY Rank order by count ( * ) desc limit 1
SELECT COUNT ( * ) FROM faculty where rank = "Professor"
SELECT rank FROM Faculty GROUP BY rank ORDER BY count ( * ) ASC LIMIT 1
SELECT T3.location , T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3
SELECT Representative_Name from gas_station where Location = "Newport Rd"
SELECT T3.location , T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3
SELECT Location from gas_station order by open_year limit 1
SELECT T3.location , T3.Representative_Name FROM station_company AS T1 JOIN company AS T2 ON T1.company_id = T2.company_id JOIN gas_station AS T3 ON T1.station_id = T3.station_id ORDER BY T2.Assets_billion DESC LIMIT 3
SELECT maintenance_contract_id FROM Maintenance_Contracts
SELECT T1.maintenance_contract_id, T2.asset_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id = T2.maintenance_contract_id
SELECT count ( * ) , T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id = T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id
SELECT count ( * ) , T1.maintenance_contract_id FROM Maintenance_Contracts AS T1 JOIN Assets AS T2 ON T1.maintenance_contract_id = T2.maintenance_contract_id GROUP BY T1.maintenance_contract_id
SELECT Name,age FROM manager ORDER BY Age DESC LIMIT 1
SELECT Working_year_starts FROM manager where name = "Todd Hamilton"
SELECT Name FROM manager ORDER BY Age DESC LIMIT 1
SELECT Price FROM publication ORDER BY Price ASC LIMIT 3
SELECT Publisher FROM publication ORDER BY Price ASC LIMIT 3
SELECT Publication_Date FROM publication ORDER BY Price ASC LIMIT 3
SELECT Publication_Date FROM publication ORDER BY Price ASC LIMIT 3
SELECT order_id, from Order_Items group by order_id order by sum ( order_quantity ) desc limit 1
SELECT count ( DISTINCT t3.product_id ) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id WHERE t1.customer_name = "Rodrick Heaney"
SELECT * FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id group by T2.customer_id order by sum ( T3.order_quantity ) desc limit 1
SELECT count ( DISTINCT t3.product_id ) FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id JOIN order_items AS t3 ON t2.order_id = t3.order_id WHERE t1.customer_name = "Rodrick Heaney"
SELECT budget from department where building = "Chandler"
SELECT count ( * ) from department
SELECT count ( distinct building ) from department
SELECT dept_name from department where building = "Taylor"
SELECT budget from department where dept_name = "Biology"
SELECT sum ( budget ) FROM department WHERE dept_name = 'Marketing' OR dept_name = 'Finance'
SELECT * FROM LOTS WHERE lot_details = "i"
SELECT * FROM LOTS WHERE lot_details = "l"
SELECT T2.lot_details FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = "l"
SELECT T1.investor_id, T2.lot_details FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = "l"
SELECT T2.lot_details FROM INVESTORS AS T1 JOIN LOTS AS T2 ON T1.investor_id = T2.investor_id WHERE T1.Investor_details = "l"
SELECT claim_id FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1
SELECT policy_id FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1
SELECT date_claim_made FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1
SELECT Amount_Settled , Amount_Claimed FROM Claims ORDER BY Amount_Claimed DESC LIMIT 1
SELECT location FROM school where school_id = 1
SELECT amount FROM endowment where donator_name = "Distrito Nacional"
SELECT school_name FROM school WHERE school_id NOT IN ( SELECT school_id FROM endowment ) 
SELECT course_id, title FROM course
SELECT name FROM instructor WHERE salary > 80000
SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id = T2.id JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.title = 'C Programming'
SELECT T1.name FROM instructor AS T1 JOIN teaches AS T2 ON T1.id = T2.id JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T3.title = 'C Programming'
SELECT avg ( age ) FROM HOST
SELECT count ( * ) FROM HOST where Nationality = "United States" and age < 40
SELECT Name , Nationality FROM HOST ORDER BY Age DESC LIMIT 1
SELECT Name from country
SELECT T1.Name , avg ( T2.Speed ) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name
SELECT T2.Name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID where T1.Name = 'Sweden'
SELECT T1.Name , avg ( T2.Speed ) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name
SELECT roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3
SELECT bedType FROM Rooms ORDER BY basePrice DESC LIMIT 3
SELECT bedType FROM Rooms ORDER BY basePrice LIMIT 3
SELECT RoomId FROM Rooms ORDER BY basePrice desc LIMIT 3
SELECT RoomId FROM Rooms ORDER BY basePrice LIMIT 3
SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 3;
SELECT customer_id FROM Customers_cards GROUP BY customer_id having count ( * ) >1
SELECT customer_id, count ( * ) FROM Customers_cards GROUP BY customer_id having count ( * ) >1
SELECT customer_id , count ( * ) FROM Customers_cards GROUP BY customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT country FROM stadium GROUP BY country HAVING count ( * )  > = 1
SELECT count ( DISTINCT city ) FROM stadium
SELECT country FROM stadium GROUP BY country HAVING count ( * ) < = 3
SELECT country FROM stadium GROUP BY country HAVING count ( * ) <= 3
select low_temperature from weekly_weather
select max ( low_temperature ) from weekly_weather
select wind_speed_mph from weekly_weather
select wind_speed_mph from weekly_weather order by wind_speed_mph
select min ( wind_speed_mph ) , max ( wind_speed_mph ) from weekly_weather order by wind_speed_mph
select day_of_week, min ( wind_speed_mph ) from weekly_weather order by wind_speed_mph
SELECT min ( low_temperature ) , max ( wind_speed_mph ) FROM weekly_weather
SELECT count ( * ) FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = "Germany"
SELECT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = "Germany"
SELECT T1.Address,T1.FirstName,T1.LastName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = "Germany"
SELECT DISTINCT T1.Address FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = "Germany"
SELECT count ( distinct allergy ) FROM Has_allergy
SELECT ALLERGY FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.STUID = T2.STUID GROUP BY ALLERGY ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT COUNT ( * ) FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.STUID = T2.STUID where ALLERGY = "Tree Pollen" and t1.sex = "M"
SELECT count ( * ) FROM Student WHERE StuID IN ( SELECT StuID FROM Has_allergy WHERE Allergy = "Soy" ) 
SELECT count ( * ) FROM Student WHERE StuID NOT IN ( SELECT StuID FROM Has_allergy WHERE Allergy = "Soy" ) 
SELECT fname , major FROM Student WHERE StuID NOT IN ( SELECT StuID FROM Has_allergy WHERE Allergy = "Soy" ) 
SELECT fname , major FROM Student WHERE StuID NOT IN ( SELECT StuID FROM Has_allergy WHERE Allergy = "Soy" ) 
SELECT Name, people_id FROM people
SELECT Name, people_id FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM entrepreneur ) 
SELECT sum ( money_requested ) from entrepreneur
SELECT Name FROM people WHERE People_ID NOT IN ( SELECT People_ID FROM entrepreneur ) 
SELECT StuID , count ( * ) FROM Sportsinfo GROUP BY StuID
SELECT StuID , count ( * ) , sum ( gamesplayed ) FROM Sportsinfo GROUP BY StuID
SELECT count ( distinct stuid ) FROM SportsInfo WHERE OnScholarship = "Y"
SELECT SportName FROM SportsInfo GROUP BY SportName ORDER BY count ( * ) DESC LIMIT 1
SELECT SportName FROM SportsInfo ORDER BY HoursPerWeek DESC LIMIT 1
SELECT StuID , count ( * ) , sum ( gamesplayed ) FROM Sportsinfo GROUP BY StuID
SELECT complaint_id FROM complaints GROUP BY complaint_id HAVING count ( * ) > 3
SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count ( * ) > 3
SELECT complaint_status_code,complaint_type_code FROM complaints GROUP BY complaint_status_code HAVING count ( * ) > 3
SELECT complaint_outcome_code FROM complaints GROUP BY complaint_status_code HAVING count ( * ) > 3
SELECT complaint_status_code FROM complaints GROUP BY complaint_status_code HAVING count ( * ) > 3
SELECT count ( * ) FROM driver WHERE age > 40
SELECT count ( * ) FROM driver WHERE home_city = 'Hartford' AND age > 40
SELECT party FROM driver WHERE home_city = 'Hartford' AND age > 40
SELECT party FROM driver WHERE home_city = 'Hartford' AND age > 40
SELECT Program_id from program
SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id = t2.program_id GROUP BY t2.program_id ORDER BY count ( * ) DESC LIMIT 1
SELECT t1.name FROM program AS t1 JOIN broadcast AS t2 ON t1.program_id = t2.program_id GROUP BY t2.program_id ORDER BY count ( * ) DESC LIMIT 1
SELECT Name FROM mountain WHERE Height > 5000
SELECT Name FROM mountain WHERE Height > 5000 AND prominence > 1000
SELECT range FROM mountain WHERE Height > 5000 AND prominence > 1000
SELECT Name FROM mountain WHERE Height > 5000 OR Prominence > 1000
SELECT DISTINCT YEAR FROM degrees
SELECT sum ( degrees ) , YEAR FROM degrees GROUP BY YEAR
SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum ( degrees ) DESC LIMIT 1
SELECT YEAR FROM degrees GROUP BY YEAR ORDER BY sum ( degrees ) DESC LIMIT 1
SELECT count ( * ) FROM Project_Staff
SELECT date_from FROM Project_Staff where staff_id = 779.0
SELECT role_code FROM Project_Staff where staff_id = 674810.0
SELECT date_to FROM Project_Staff ORDER BY date_to DESC LIMIT 1
SELECT T1.pName , T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.pPos = 'goalie'
SELECT hs FROM PLAYER WHERE pID = "10001"
SELECT T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.Pid = '10001'
SELECT T1.pName , T2.cName FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes'
SELECT Num_of_shaff_in_charge FROM happy_hour where Month = "June"
SELECT count ( distinct shop_id ) FROM happy_hour
SELECT shop_id FROM happy_hour group by shop_id order by count ( * ) asc limit 1
SELECT MONTH FROM happy_hour GROUP BY MONTH ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.name , count ( * ) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id
SELECT T1.name , count ( * ) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id ORDER BY count ( * ) 
SELECT T2.name FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id where T1.brand = "Olympus"
SELECT T1.name , count ( * ) FROM camera_lens AS T1 JOIN photos AS T2 ON T1.id = T2.camera_lens_id GROUP BY T1.id ORDER BY count ( * ) 
SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t2.color_description = "white"
SELECT t1.product_name,t1.typical_selling_price FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t2.color_description = "white"
select product_category_code, avg ( typical_buying_price ) from Products group by product_category_code
SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t2.color_description = "white"
SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff
SELECT first_name FROM Staff group by first_name order by count ( * ) desc limit 1
SELECT last_name FROM Staff group by first_name order by count ( * ) desc limit 1
SELECT first_name FROM Staff where last_name = 'Mertz'
SELECT first_name FROM staff where last_name = 'Mertz'
SELECT last_name FROM Customers INTERSECT SELECT last_name FROM Staff
SELECT name FROM races
SELECT name , date FROM races ORDER BY date DESC LIMIT 1
SELECT name , circuitid FROM races ORDER BY date DESC LIMIT 1
SELECT name , date FROM races ORDER BY date DESC LIMIT 1
SELECT count ( * ) from artist where country = "India"
SELECT count ( * ) from artist where preferred_genre = "folk"
SELECT count ( * ) from artist where country = "Bangladesh"
SELECT artist_name FROM artist WHERE country = "UK" INTERSECT SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = "english"
SELECT T1.artist_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = "english" GROUP BY T2.artist_name HAVING count ( * ) > = 1
select T1.country from artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = 'english' group by T1.artist_name having count ( * ) > = 1
select T1.gender from artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = 'english' group by T1.artist_name having count ( * ) > = 1
select T2.rating from artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = 'english' group by T1.artist_name having count ( * ) > = 1
SELECT T1.artist_name , count ( * ) FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.languages = "english" GROUP BY T2.artist_name HAVING count ( * ) >= 1
SELECT cName FROM college
SELECT cName FROM college
SELECT cName, enr FROM college WHERE enr > ( SELECT max ( enr ) FROM college WHERE state = 'FL' ) 
SELECT cName FROM college WHERE enr > ( SELECT max ( enr ) FROM college WHERE state = 'FL' ) 
SELECT T2.Speed FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID where T1.Name = "Austria"
SELECT T2.opened FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID where T1.Name = "Austria" order by T2.speed desc limit 1
SELECT T2.name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID where T1.Name = "Austria" order by T2.speed desc limit 1
SELECT T2.Park FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID where T1.Name = "Austria" order by T2.speed desc limit 1
SELECT T2.Height FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID where T1.Name = "Austria" order by T2.speed desc limit 1
SELECT T2.length FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID where T1.Name = "Austria" order by T2.speed desc limit 1
SELECT T1.Name , avg ( T2.Speed ) FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID GROUP BY T1.Name
SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = "Packing"
SELECT DISTINCT T2.date_order_placed FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = "Packing"
SELECT order_id FROM orders WHERE order_status = "Packing"
SELECT customer_id FROM orders WHERE order_status = "Packing"
SELECT order_id FROM orders WHERE order_status = "On Road"
SELECT DISTINCT T1.customer_name FROM customers AS T1 JOIN orders AS T2 ON T1.customer_id = T2.customer_id WHERE T2.order_status = "Packing"
SELECT * FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id GROUP BY T1.id HAVING count ( * ) > 1
SELECT * FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id GROUP BY T1.id order by count ( * ) limit 3
SELECT Principal_activities FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id GROUP BY Principal_activities order by count ( * ) limit 1
SELECT * FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id where T1.Principal_activities = "Cargo" group BY T1.name order by count ( * ) limit 3
SELECT T1.id , T1.name FROM operate_company AS T1 JOIN flight AS t2 ON T1.id = T2.company_id GROUP BY T1.id HAVING count ( * ) > 1
SELECT COUNT ( * ) FROM ( SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid' ) 
SELECT COUNT ( * ) FROM ( SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos ! = 'goalie' ) 
SELECT cName from Tryout where pPos = "goalie"
SELECT COUNT ( * ) FROM ( SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'mid' EXCEPT SELECT T1.state FROM college AS T1 JOIN tryout AS T2 ON T1.cName = T2.cName WHERE T2.pPos = 'goalie' ) 
SELECT T1.id , T1.score , T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id = T1.id GROUP BY T1.id HAVING count ( * ) < = 2
SELECT count ( distinct Competition ) FROM game
SELECT count ( distinct Home_team ) FROM game
SELECT T1.id , T1.score , T1.date FROM game AS T1 JOIN injury_accident AS T2 ON T2.game_id = T1.id GROUP BY T1.id HAVING count ( * ) >= 2
SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code = t4.color_code WHERE t4.color_description = "red"
SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code = t4.color_code WHERE t3.characteristic_name = "fast"
SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code = t4.color_code WHERE t4.color_description = "red" AND t3.characteristic_name = "fast"
SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code = t4.color_code WHERE t3.characteristic_name = "slow"
SELECT t4.color_description FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code = t4.color_code WHERE t3.characteristic_name = "slow"
SELECT product_name FROM products AS t1 JOIN product_characteristics AS t2 ON t1.product_id = t2.product_id JOIN CHARACTERISTICS AS t3 ON t2.characteristic_id = t3.characteristic_id JOIN ref_colors AS t4 ON t1.color_code = t4.color_code WHERE t4.color_description = "red" AND t3.characteristic_name = "fast"
SELECT Country FROM manager WHERE Age > 50 INTERSECT SELECT Country FROM manager WHERE Age < 46
select name from manager
select min ( age ) ,max ( age ) from manager
SELECT Country FROM manager WHERE Age > 50 INTERSECT SELECT Country FROM manager WHERE Age < 46
SELECT T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID WHERE T3.Sales_in_Billion > 200
SELECT avg ( T2.age ) FROM employment AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID WHERE T3.Sales_in_Billion > 200
SELECT T2.Name FROM employment AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID JOIN company AS T3 ON T1.Company_ID = T3.Company_ID WHERE T3.Sales_in_Billion > 200
SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus = t2.id WHERE t2.campus = "San Jose State University" AND t1.year = 2000
SELECT id FROM campuses WHERE campus = "San Jose State University"
SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus = t2.id WHERE t2.campus = "San Jose State University"
SELECT t1.Year FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus = t2.id WHERE t2.campus = "San Jose State University"
SELECT County FROM campuses WHERE campus = "San Jose State University"
SELECT Location FROM campuses WHERE campus = "San Jose State University"
SELECT t1.campusfee FROM csu_fees AS t1 JOIN campuses AS t2 ON t1.campus = t2.id WHERE t2.campus = "San Jose State University" AND t1.year = 2000
SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( StuID ) FROM Has_allergy where Allergy = 'Tree Pollen'
SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count ( * ) asc LIMIT 1
SELECT Allergy FROM Has_allergy GROUP BY Allergy ORDER BY count ( * ) DESC LIMIT 1
SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT ( * )  > = 2
SELECT built FROM railway GROUP BY LOCATION HAVING COUNT ( * )  > = 2
SELECT LOCATION FROM railway order by built desc limit 1
SELECT builder FROM railway order by built asc limit 1
SELECT built FROM railway order by built asc limit 1
SELECT LOCATION FROM railway GROUP BY LOCATION HAVING COUNT ( * ) > 1
select clubid from Member_of_club where stuid = 1001
select clubname from club where clublocation = "AKW"
select position from Member_of_club where clubid = 1
select clubname from club where clublocation = "HHH"
SELECT t1.clubname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.sex = "F" GROUP BY t1.clubname ORDER BY count ( * ) DESC LIMIT 1
SELECT price FROM Products where Name = 'Memory' order by price limit 1
SELECT Manufacturer FROM Products where Name = 'ZIP drive'
SELECT Manufacturer FROM Products where Name = 'Hard drive'
SELECT name , price FROM Products ORDER BY price ASC LIMIT 1
SELECT count ( * ) from gas_station where open_year > 2000
SELECT manager_name FROM gas_station WHERE open_year > 2000 GROUP BY manager_name ORDER BY count ( * ) DESC LIMIT 1
select location from gas_station where manager_name = ( SELECT manager_name FROM gas_station WHERE open_year > 2000 GROUP BY manager_name ORDER BY count ( * ) DESC LIMIT 1 ) 
select location, vice_manager_name from gas_station where manager_name = ( SELECT manager_name FROM gas_station WHERE open_year > 2000 GROUP BY manager_name ORDER BY count ( * ) DESC LIMIT 1 ) 
select location, open_year from gas_station where manager_name = ( SELECT manager_name FROM gas_station WHERE open_year > 2000 GROUP BY manager_name ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT manager_name FROM gas_station WHERE open_year > 2000 GROUP BY manager_name ORDER BY count ( * ) DESC LIMIT 1
SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t1.fname = "Aaron" AND t1.lname = "Turon"
SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t1.fname = "Ralf" AND t1.lname = "Hinze"
SELECT t3.title,t3.paperID FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t1.fname = "Ralf" AND t1.lname = "Hinze"
SELECT t1.lname,t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid group by t1.authID order by count ( * ) desc limit 1
SELECT t1.lname,t1.fname FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid group by t1.authID having count ( * ) = 1
SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid WHERE t1.fname = "Aaron" AND t1.lname = "Turon"
SELECT COUNT ( * ) FROM ( SELECT T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count ( * ) < = 30 ) 
SELECT T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count ( * ) < = 30
SELECT T1.driverid,count ( * ) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid
SELECT T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid having t2.rank < 3
SELECT T1.driverid , count ( * ) FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid JOIN races AS T3 ON T2.raceid = T3.raceid GROUP BY T1.driverid HAVING count ( * ) <= 30
SELECT T1.claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.Date_Claim_Settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.claim_id , T1.date_claim_made , count ( * ) FROM Claims AS T1 JOIN Settlements AS T2 ON T1.claim_id = T2.claim_id GROUP BY T1.claim_id ORDER BY count ( * ) DESC LIMIT 1
SELECT Pilot_name from pilot
SELECT Pilot_ID from pilot
SELECT T2.Fleet_Series FROM pilot_record AS T1 JOIN aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN pilot AS T3 ON T1.Pilot_ID = T3.Pilot_ID WHERE T3.Age < 34
SELECT count ( * ) , gender FROM dorm GROUP BY gender
SELECT dorm_name FROM dorm
SELECT dorm_name FROM dorm order by student_capacity desc limit 1
SELECT count ( * ) , sum ( student_capacity ) , gender FROM dorm GROUP BY gender
SELECT min ( Order_Quantity ) FROM INVOICES
SELECT max ( Order_Quantity ) FROM INVOICES
SELECT avg ( Order_Quantity ) FROM INVOICES
SELECT order_id, product_id, order_quantity FROM INVOICES
SELECT min ( Order_Quantity ) , avg ( Order_Quantity ) , max ( Order_Quantity ) FROM INVOICES
SELECT count ( distinct EMPLOYEE_ID ) from employees
SELECT T1.first_name , T1.last_name , T3.city ,T3.COUNTRY_ID FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id WHERE T1.first_name LIKE '%z%'
SELECT T1.first_name , T1.last_name , T3.city ,T3.COUNTRY_ID,T3.STREET_ADDRESS,T3.STATE_PROVINCE FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id WHERE T1.first_name LIKE '%z%' and T1.FIRST_NAME = 'Elizabeth'
SELECT T1.first_name , T1.last_name , T3.city FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id JOIN locations AS T3 ON T2.location_id = T3.location_id WHERE T1.first_name LIKE '%z%'
SELECT name FROM physician
SELECT T1.name , count ( * ) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid
SELECT name FROM physician WHERE name NOT IN ( SELECT T1.name FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP ) 
SELECT T1.name , count ( * ) FROM physician AS T1 JOIN patient AS T2 ON T1.employeeid = T2.PCP GROUP BY T1.employeeid
SELECT name from church
SELECT T4.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id = T2.people_id JOIN people AS T3 ON T1.female_id = T3.people_id JOIN church AS T4 ON T4.church_id = T1.church_id WHERE T2.age > 30 OR T3.age > 30
SELECT T4.name, T4.Open_Date FROM wedding AS T1 JOIN people AS T2 ON T1.male_id = T2.people_id JOIN people AS T3 ON T1.female_id = T3.people_id JOIN church AS T4 ON T4.church_id = T1.church_id WHERE T2.age > 30 OR T3.age > 30
SELECT T4.name FROM wedding AS T1 JOIN people AS T2 ON T1.male_id = T2.people_id JOIN people AS T3 ON T1.female_id = T3.people_id JOIN church AS T4 ON T4.church_id = T1.church_id WHERE T2.age > 30 OR T3.age > 30
SELECT name FROM enzyme WHERE name LIKE "%PBG%"
SELECT Product FROM enzyme WHERE name = "ALA synthase"
SELECT name FROM enzyme WHERE name LIKE "%ALA%"
SELECT min ( T2.HS ) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID and T1.pPos = 'goalie' GROUP BY T1.pPos
SELECT min ( T2.HS ) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID and T1.pPos = 'striker' GROUP BY T1.pPos
SELECT min ( T2.HS ) FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID where T1.ppos = "mid" GROUP BY T1.pPos
SELECT min ( T2.HS ) , T1.pPos FROM tryout AS T1 JOIN player AS T2 ON T1.pID = T2.pID GROUP BY T1.pPos
SELECT count ( * ) FROM customers
SELECT customer_name FROM customers
SELECT customer_name FROM customers order by customer_name
SELECT customer_name FROM customers WHERE customer_name LIKE "%Alex%"
select distinct transaction_type_code from Transactions
select distinct share_count from Transactions
SELECT T2.investor_id , T1.Investor_details FROM INVESTORS AS T1 JOIN TRANSACTIONS AS T2 ON T1.investor_id = T2.investor_id WHERE T2.transaction_type_code = "SALE" GROUP BY T2.investor_id HAVING COUNT ( * ) >= 2
SELECT count ( artist_name ) from artist
SELECT T2.song_name FROM song AS T2 WHERE T2.releasedate LIKE "%Mar%"
SELECT T1.artist_name , T1.gender,T2.song_name FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.releasedate LIKE "%Mar%"
SELECT T1.artist_name , T1.gender FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T2.releasedate LIKE "%Mar%"
SELECT School_Code FROM Department WHERE Dept_Name = 'Accounting'
SELECT Dept_Address FROM Department WHERE Dept_Name = 'Accounting'
SELECT T3.prof_office FROM professor AS T3 JOIN department AS T4 ON T4.dept_code = T3.dept_code WHERE T4.dept_name = 'Accounting'
SELECT T3.prof_high_degree FROM professor AS T3 JOIN department AS T4 ON T4.dept_code = T3.dept_code WHERE T4.dept_name = 'Accounting'
SELECT class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN professor AS T3 ON T2.emp_num = T3.emp_num JOIN department AS T4 ON T4.dept_code = T3.dept_code WHERE T1.Crs_Code = "ACCT-211" AND T1.Class_Time LIKE '%T%'
SELECT T2.emp_fname , T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN professor AS T3 ON T2.emp_num = T3.emp_num JOIN department AS T4 ON T4.dept_code = T3.dept_code WHERE T4.dept_name = 'Accounting'
SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1
SELECT Name FROM technician ORDER BY Age DESC LIMIT 1
SELECT Starting_Year FROM technician ORDER BY Age DESC LIMIT 1
SELECT T1.personal_name, t1.middle_name, t1.family_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = "operating system" OR T2.course_name = "data structure"
SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = "operating system" OR T2.course_name = "data structure"
SELECT T1.personal_name, t1.middle_name, t1.family_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = "advanced database"
SELECT T1.address_line_1 FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = "operating system" OR T2.course_name = "data structure"
SELECT TIME FROM elimination WHERE Eliminated_By = "Punk" OR Eliminated_By = "Orton"
SELECT TIME FROM elimination WHERE Eliminated_By = "Benjamin"
SELECT avg ( TIME ) FROM elimination
SELECT TIME FROM elimination WHERE Eliminated_By = "Punk" OR Eliminated_By = "Orton"
SELECT * FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id ORDER BY count ( * ) DESC LIMIT 1
SELECT Total_Passengers FROM station where name = "London Waterloo"
SELECT Number_of_Platforms FROM station where name = "London Waterloo"
SELECT location FROM station where name = "London Waterloo"
SELECT T2.name FROM train_station AS T1 JOIN station AS T2 ON T1.station_id = T2.station_id GROUP BY T1.station_id ORDER BY count ( * ) DESC LIMIT 1
SELECT party_email FROM parties WHERE party_id = "1"
SELECT party_phone FROM parties WHERE party_id = "2"
SELECT service_id FROM Party_Services WHERE customer_id = "10"
SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id = t2.customer_id GROUP BY t1.party_email ORDER BY count ( * ) DESC LIMIT 1
SELECT t1.party_email FROM parties AS t1 JOIN party_services AS t2 ON t1.party_id = t2.customer_id GROUP BY t1.party_email ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY T1.stars DESC LIMIT 3
SELECT T2.title , T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY T1.stars DESC LIMIT 3
SELECT T2.title , T2.year, T2.DIRECTOR FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY T1.stars DESC LIMIT 3
SELECT T2.title , T2.year, T2.DIRECTOR, t1.stars FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY T1.stars DESC LIMIT 3
SELECT avg ( stars ) from rating
SELECT T2.title , T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY T1.stars DESC LIMIT 3
SELECT count ( customer_id ) FROM Customers
SELECT date_became_customer FROM Customers order by date_became_customer desc limit 1
SELECT date_became_customer FROM Customers order by date_became_customer limit 1
SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5
SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5
SELECT roomId FROM Rooms WHERE decor = 'modern'
SELECT count ( * ) FROM Rooms WHERE bedtype = 'King'
SELECT roomName FROM Rooms WHERE bedtype = 'King' 
SELECT roomName , decor FROM Rooms WHERE bedtype = 'King' ORDER BY basePrice;
SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id JOIN available_policies AS t3 ON t2.policy_id = t3.policy_id WHERE t1.customer_name = "Dayana Robel"
SELECT DISTINCT Customer_Phone FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id JOIN available_policies AS t3 ON t2.policy_id = t3.policy_id WHERE t1.customer_name = "Dayana Robel"
SELECT t2.date_opened FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id JOIN available_policies AS t3 ON t2.policy_id = t3.policy_id WHERE t1.customer_name = "Dayana Robel"
SELECT DISTINCT t3.policy_type_code FROM customers AS t1 JOIN customers_policies AS t2 ON t1.customer_id = t2.customer_id JOIN available_policies AS t3 ON t2.policy_id = t3.policy_id WHERE t1.customer_name = "Dayana Robel"
SELECT * FROM party WHERE Party_Theme = "Spring"
SELECT First_year , Last_year FROM party WHERE Party_Theme = "Teqnology"
SELECT First_year , Last_year FROM party WHERE Party_Theme = "Spring" OR Party_Theme = "Teqnology"
SELECT First_year , Last_year FROM party WHERE Party_Theme = "Spring" OR Party_Theme = "Teqnology"
SELECT Winery FROM WINE
select count ( * ) from ( SELECT Winery FROM WINE GROUP BY Winery HAVING count ( * )  > = 4 ) 
SELECT Winery FROM WINE GROUP BY Winery HAVING count ( * )  > = 4
SELECT Winery FROM WINE GROUP BY Winery HAVING count ( * ) >= 4
SELECT billing_country , AVG ( total ) FROM invoices GROUP BY billing_country
SELECT billing_country FROM invoices order by total desc limit 1
SELECT billing_country , total FROM invoices ORDER BY total DESC LIMIT 10
SELECT billing_country , AVG ( total ) FROM invoices GROUP BY billing_country ORDER BY AVG ( total ) DESC LIMIT 10;
select building from classroom order by capacity desc limit 1
select credits from course where title = 'Accounting'
select capacity from classroom where building = 'Whitman'
SELECT T3.title , T3.credits FROM classroom AS T1 JOIN SECTION AS T2 ON T1.building = T2.building AND T1.room_number = T2.room_number JOIN course AS T3 ON T2.course_id = T3.course_id WHERE T1.capacity = ( SELECT max ( capacity ) FROM classroom ) 
SELECT avg ( amount_of_transaction ) FROM TRANSACTIONS
SELECT T2.lot_id , avg ( amount_of_transaction ) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id
SELECT T2.lot_id , avg ( amount_of_transaction ) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id ORDER BY avg ( amount_of_transaction ) desc limit 1
SELECT T2.lot_id , avg ( amount_of_transaction ) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id ORDER BY avg ( amount_of_transaction ) limit 1
SELECT T2.lot_id , avg ( amount_of_transaction ) FROM TRANSACTIONS AS T1 JOIN Transactions_Lots AS T2 ON T1.transaction_id = T2.transaction_id GROUP BY T2.lot_id ORDER BY avg ( amount_of_transaction ) 
SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T3.name = "Firefox"
SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T3.market_share > 15
SELECT DISTINCT T2.name from accelerator_compatible_browser as T1 join Web_client_accelerator as T2 on T1.accelerator_id = T2.id where compatible_since_year > = 1996
SELECT DISTINCT T2.name from accelerator_compatible_browser as T1 join Web_client_accelerator as T2 on T1.accelerator_id = T2.id join browser as T3 on T3.id = T1.browser_id where T1.compatible_since_year > = 1996 and T3.market_share > 25
SELECT DISTINCT T1.name FROM web_client_accelerator AS T1 JOIN accelerator_compatible_browser AS T2 ON T2.accelerator_id = T1.id JOIN browser AS T3 ON T2.browser_id = T3.id WHERE T3.market_share > 15;
SELECT country FROM competition WHERE competition_type = 'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type = 'Tournament'
SELECT Competition_ID FROM competition WHERE country = "Russia"
SELECT Competition_ID, year FROM competition WHERE country = "Russia"
SELECT country FROM competition WHERE competition_type = 'Friendly' INTERSECT SELECT country FROM competition WHERE competition_type = 'Tournament'
SELECT count ( distinct City ) from city
SELECT Regional_Population from city WHERE City = "Hangzhou ( Zhejiang ) "
SELECT City_ID from city WHERE City = "Nanjing ( Jiangsu ) "
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id ORDER BY T2.Feb DESC LIMIT 1
SELECT sales_details FROM sales
SELECT purchase_details FROM Purchases
SELECT sales_details FROM sales UNION SELECT purchase_details FROM purchases
SELECT sales_transaction_id, sales_details FROM sales UNION SELECT purchase_transaction_id, purchase_details FROM purchases
SELECT sales_details FROM sales UNION SELECT purchase_details FROM purchases
SELECT avg ( age ) , city_code FROM student WHERE sex = 'M' GROUP BY city_code
SELECT count ( * ) , city_code FROM student WHERE sex = 'M' GROUP BY city_code
SELECT Age FROM student WHERE city_code = 'ATL'
SELECT avg ( age ) , city_code FROM student WHERE sex = 'F' GROUP BY city_code
SELECT count ( * ) , avg ( age ) , city_code FROM student WHERE sex = 'M' GROUP BY city_code
select count ( teacher_id ) from Teachers
SELECT count ( distinct T2.teacher_id ) FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id = T2.teacher_id
SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id = T2.teacher_id
SELECT last_name ,teacher_id FROM Teachers EXCEPT SELECT T1.last_name ,T1.teacher_id FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id = T2.teacher_id
SELECT last_name FROM Teachers EXCEPT SELECT T1.last_name FROM Teachers AS T1 JOIN Detention AS T2 ON T1.teacher_id = T2.teacher_id
SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = "Dameon" AND T2.staff_last_name = "Frami"
SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = "Jolie" AND T2.staff_last_name = "Weber"
SELECT problem_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id GROUP BY problem_id ORDER BY count ( * ) DESC LIMIT 1
SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = "Dameon" AND T2.staff_last_name = "Frami" UNION SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = "Jolie" AND T2.staff_last_name = "Weber"
SELECT COUNT ( * ) FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN ) 
SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN ) 
SELECT T1.Fname, T1.Lname FROM STUDENT AS T1 JOIN Enrolled_in AS T2 ON T1.STUID = T2.STUID WHERE T2.GRADE = "A"
SELECT Stuid FROM enrolled_in WHERE Grade = "A"
SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN ) 
SELECT count ( DISTINCT name ) FROM PersonFriend WHERE friend NOT IN ( SELECT name FROM person WHERE city = 'Austin' ) 
SELECT count ( DISTINCT name ) FROM PersonFriend WHERE friend NOT IN ( SELECT name FROM person WHERE city = 'new york city' ) 
SELECT count ( DISTINCT name ) FROM PersonFriend WHERE friend NOT IN ( SELECT name FROM person WHERE city = 'salt lake city' ) 
SELECT distinct name FROM PersonFriend WHERE friend NOT IN ( SELECT name FROM person WHERE city = 'salt lake city' ) 
SELECT distinct name FROM PersonFriend WHERE friend NOT IN ( SELECT name FROM person WHERE city = 'new york city' ) 
select count ( * ) from Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE Person.city = 'new york city'
SELECT count ( DISTINCT name ) FROM PersonFriend WHERE friend NOT IN ( SELECT name FROM person WHERE city = 'Austin' ) 
select distinct ( name ) from phone
SELECT T2.Name FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name HAVING sum ( T1.Num_of_stock ) > 2000
SELECT T2.Name FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name HAVING sum ( T1.Num_of_stock ) > 2000 ORDER BY sum ( T1.Num_of_stock ) DESC
SELECT T2.Name FROM phone_market AS T1 JOIN phone AS T2 ON T1.Phone_ID = T2.Phone_ID GROUP BY T2.Name HAVING sum ( T1.Num_of_stock ) >= 2000 ORDER BY sum ( T1.Num_of_stock ) DESC
SELECT total_passengers FROM station ORDER BY total_passengers DESC LIMIT 3
SELECT name, main_services FROM station ORDER BY total_passengers DESC LIMIT 3
SELECT name, main_services FROM station ORDER BY total_passengers asc LIMIT 3
SELECT name , main_services FROM station ORDER BY total_passengers DESC LIMIT 3
SELECT t1.color_code FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t1.product_name = "chervil"
SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t1.product_name = "chervil"
SELECT t1.product_id FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t1.product_name = "chervil"
SELECT t1.color_code , t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t1.product_name = "chervil"
SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id = T2.id WHERE T2.dept_name = 'History'
SELECT count ( i_id ) FROM advisor AS T1 JOIN student AS T2 ON T1.s_id = T2.id WHERE T2.dept_name = 'History'
SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id = T2.id WHERE T2.dept_name = 'History'
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T2.beds = 2
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T1.Adults = 1
SELECT T2.roomName, T1.Checkin FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T1.Adults = 1
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T1.Adults = 1 AND T1.checkin LIKE "%OCT%"
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE T1.firstname = "ROY"
SELECT T2.roomName FROM Reservations AS T1 JOIN Rooms AS T2 ON T1.Room = T2.RoomId WHERE firstname LIKE '%ROY%'
SELECT activity_name FROM Activity
SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( distinct T2.stuid ) FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID = T2.actID where T1.activity_name = 'Soccer'
SELECT T1.activity_name FROM Activity AS T1 JOIN Participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID ORDER BY count ( * ) DESC LIMIT 1
select count ( * ) from hotels WHERE price_range > 10000
select max ( star_rating_code ) from hotels WHERE price_range > 10000
SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code = T2.star_rating_code WHERE T1.price_range > 10000
SELECT T2.star_rating_description FROM HOTELS AS T1 JOIN Ref_Hotel_Star_Ratings AS T2 ON T1.star_rating_code = T2.star_rating_code WHERE T1.price_range > 10000
SELECT advisor FROM Student GROUP BY advisor ORDER BY count ( * ) DESC LIMIT 1
SELECT advisor FROM Student GROUP BY advisor ORDER BY count ( * ) asc LIMIT 1
SELECT advisor FROM Student WHERE advisor = ( SELECT advisor FROM Student GROUP BY advisor ORDER BY count ( * ) asc LIMIT 1 ) OR advisor = ( SELECT advisor FROM Student GROUP BY advisor ORDER BY count ( * ) desc LIMIT 1 ) GROUP BY advisor
SELECT advisor FROM Student GROUP BY advisor ORDER BY count ( * ) DESC LIMIT 1
select Festival_Name,Location from festival_detail ORDER BY YEAR DESC LIMIT 3
select Chair_Name from festival_detail where festival_name = "LA Awards"
select Num_of_Audience from festival_detail where Festival_Name = 'LA Awards' and Year = 2010
SELECT Festival_Name FROM festival_detail ORDER BY YEAR DESC LIMIT 3
SELECT T1.product_name FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code = T2.color_code WHERE product_category_code = "Herbs"
SELECT T1.product_name , T2.color_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code = T2.color_code WHERE product_category_code = "Herbs"
SELECT T1.product_name , T2.color_description , T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code = T2.color_code WHERE product_category_code = "Herbs"
SELECT T1.typical_selling_price FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code = T2.color_code WHERE product_category_code = "Herbs"
SELECT avg ( typical_buying_price ) FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code = T2.color_code WHERE product_category_code = "Herbs"
SELECT T1.product_name , T2.color_description , T1.product_description FROM products AS T1 JOIN Ref_colors AS T2 ON T1.color_code = T2.color_code WHERE product_category_code = "Herbs"
SELECT T1.name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id WHERE interaction_type = 'inhibitor'
SELECT T1.name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id WHERE interaction_type = 'activitor'
SELECT T1.name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id WHERE interaction_type = 'inhibitor' INTERSECT SELECT T1.name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id WHERE interaction_type = 'activitor'
SELECT T1.name , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id WHERE interaction_type = 'inhibitor' INTERSECT SELECT T1.name , T1.trade_name FROM medicine AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.medicine_id = T1.id WHERE interaction_type = 'activitor'
SELECT customer_id FROM customers EXCEPT SELECT t1.customer_id FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id WHERE t3.state_province_county = 'California'
select t1.customer_id, t3.city, t3.state_province_county FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id WHERE t3.state_province_county ! = 'California'
SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id WHERE t3.state_province_county = 'California'
SELECT Product_Type_Code FROM Products
SELECT Product_Type_Code FROM Products WHERE Product_Price > 4500 INTERSECT SELECT Product_Type_Code FROM Products WHERE Product_Price < 3000
SELECT Product_Price FROM Products WHERE Product_Type_Code = "Food"
SELECT Product_Type_Code FROM Products WHERE Product_Price > 4500 INTERSECT SELECT Product_Type_Code FROM Products WHERE Product_Price < 3000
SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID
SELECT T2.Name, T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID
SELECT T1.company FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID
SELECT T2.name FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID order by T2.weight desc limit 1
SELECT T2.Weight FROM entrepreneur AS T1 JOIN people AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Money_Requested DESC
SELECT service_name FROM services
SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id = t2.service_id GROUP BY t1.service_id HAVING count ( * ) > 1
SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id = t2.service_id GROUP BY t1.service_id HAVING count ( * ) > 2
SELECT t2.service_name, count ( * ) FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id = t2.service_id GROUP BY t1.service_id HAVING Service_name = "New policy application"
SELECT t2.service_name FROM first_notification_of_loss AS t1 JOIN services AS t2 ON t1.service_id = t2.service_id GROUP BY t1.service_id HAVING count ( * ) > 2
SELECT Location_ID FROM Tourist_Attractions WHERE Tourist_Attraction_ID = '2113'
SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT ( * ) LIMIT 1
SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT city , count ( * ) FROM branch WHERE open_year < 2010 GROUP BY city
SELECT open_year FROM branch WHERE open_year < 2010
SELECT name FROM branch WHERE open_year < 2010
SELECT city , count ( * ) FROM branch WHERE open_year < 2010 GROUP BY city
SELECT COUNT ( * ) FROM BOOKINGS
SELECT COUNT ( distinct customer_id ) FROM BOOKINGS
SELECT T1.customer_id , T1.first_name , count ( * ) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id
SELECT T1.customer_id , T1.first_name , count ( * ) FROM Customers AS T1 JOIN bookings AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id
SELECT avg ( product_price ) FROM products
SELECT product_name FROM products WHERE product_price > ( SELECT avg ( product_price ) FROM products ) 
SELECT count ( * ) FROM products WHERE product_price > ( SELECT avg ( product_price ) FROM products ) 
SELECT count ( * ) FROM products WHERE product_price > ( SELECT avg ( product_price ) FROM products ) 
select count ( * ) from storm
select count ( * ) from ( SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id HAVING count ( * )  > = 2 ) 
SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id HAVING count ( * ) >= 2 INTERSECT SELECT T1.name FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id HAVING sum ( T2.number_city_affected ) >= 10
SELECT * FROM person EXCEPT SELECT * FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.job = 'student'
SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.job = 'student' INTERSECT SELECT T3.name FROM Person AS T4 JOIN PersonFriend AS T3 ON T4.name = T3.friend
SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend order by name desc
SELECT name FROM person EXCEPT SELECT T2.name FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.friend WHERE T1.job = 'student'
SELECT LName FROM Student where Fname = 'Linda'
SELECT Age FROM Student where Fname = 'Linda'
SELECT Age FROM Student where Lname = 'Kim'
SELECT distinct sex FROM Student where age = 18
SELECT major , avg ( age ) , min ( age ) , max ( age ) FROM Student GROUP BY major
SELECT Carrier FROM phone WHERE Memory_in_G < 32
SELECT Carrier FROM phone WHERE Memory_in_G > 64
SELECT Carrier FROM phone WHERE Memory_in_G < 32 INTERSECT SELECT Carrier FROM phone WHERE Memory_in_G > 64
SELECT Carrier FROM phone WHERE Memory_in_G < 32 INTERSECT SELECT Carrier FROM phone WHERE Memory_in_G > 64
SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rating ) DESC LIMIT 1
SELECT i_id from item where title = 'cup'
SELECT T1.title , T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rating ) DESC LIMIT 1
SELECT count ( * ) from employee
SELECT count ( * ) from professor where DEPT_CODE = "ENG"
SELECT prof_high_degree from professor where DEPT_CODE = "HIST"
SELECT T2.emp_fname , T1.prof_office FROM professor AS T1 JOIN employee AS T2 ON T1.emp_num = T2.emp_num ORDER BY T2.emp_fname
SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1
SELECT catalog_entry_id,product_stock_number FROM catalog_contents WHERE catalog_entry_name = "Cola"
SELECT catalog_entry_name FROM catalog_contents ORDER BY height DESC LIMIT 1
SELECT count ( * ) FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.City_Town = "Feliciaberg"
SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.City_Town = "Feliciaberg"
SELECT T1.State_County FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.City_Town = "Feliciaberg"
SELECT T1.line_1 FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.City_Town = "Feliciaberg"
SELECT T2.Store_Name FROM Addresses AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Address_ID = T2.Address_ID WHERE T1.City_Town = "Feliciaberg"
SELECT T1.name , T2.course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID WHERE T1.dept_name = 'Art'
select name from instructor where dept_name = 'Art'
select ID from instructor where dept_name = 'Statistics'
SELECT name , course_id FROM instructor AS T1 JOIN teaches AS T2 ON T1.ID = T2.ID WHERE T1.dept_name = 'Art'
SELECT count ( * ) FROM STUDENTS WHERE student_id IN ( SELECT student_id FROM Behavior_Incident ) 
SELECT count ( * ) FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident ) 
SELECT first_name, middle_name, last_name FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident ) 
SELECT count ( * ) FROM STUDENTS WHERE student_id NOT IN ( SELECT student_id FROM Behavior_Incident ) 
SELECT count ( * ) FROM invoices
SELECT * FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY COUNT ( * ) DESC LIMIT 10
SELECT COUNT ( * ) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY COUNT ( * ) DESC LIMIT 10
SELECT count ( * ) FROM customers
SELECT count ( * ) FROM ( SELECT * FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id having count ( * ) > = 7 ) 
SELECT T1.first_name , T1.last_name , COUNT ( * ) FROM customers AS T1 JOIN invoices AS T2 ON T2.customer_id = T1.id GROUP BY T1.id ORDER BY COUNT ( * ) DESC LIMIT 10;
select count ( distinct country ) from market
SELECT count ( director ) FROM film WHERE film_id NOT IN ( SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id = T2.Market_ID WHERE country = 'China' ) 
SELECT count ( title ) FROM film WHERE film_id NOT IN ( SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id = T2.Market_ID WHERE country = 'China' ) 
SELECT title , director FROM film WHERE film_id NOT IN ( SELECT film_id FROM film_market_estimation AS T1 JOIN market AS T2 ON T1.market_id = T2.Market_ID WHERE country = 'China' ) 
SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id = t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1
SELECT t1.first_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id = t2.staff_id ORDER BY t2.date_complaint_raised desc LIMIT 1
SELECT t1.last_name FROM staff AS t1 JOIN complaints AS t2 ON t1.staff_id = t2.staff_id ORDER BY t2.date_complaint_raised LIMIT 1
SELECT min ( T1.duration ) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.formats = "mp3" AND T2.resolution < 800
SELECT max ( T1.duration ) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.formats = "mp3" AND T2.resolution < 800
SELECT avg ( T1.duration ) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.formats = "mp3" AND T2.resolution < 800
SELECT avg ( T1.duration ) FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.formats = "mp3" AND T2.resolution < 800
SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId GROUP BY T2.Name ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId GROUP BY T2.Name ORDER BY COUNT ( * ) ASC LIMIT 1
SELECT T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId GROUP BY T2.Name ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T1.ArtistId FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId GROUP BY T2.Name ORDER BY COUNT ( * ) ASC LIMIT 1
SELECT T2.Name FROM ALBUM AS T1 JOIN ARTIST AS T2 ON T1.ArtistId = T2.ArtistId GROUP BY T2.Name ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT fname , lname FROM Faculty
SELECT T2.fname, T2.lname FROM student as T1 JOIN faculty as T2 on T2.FacID = T1.advisor where T1.sex = "F"
SELECT T2.fname, T2.lname FROM student as T1 JOIN faculty as T2 on T2.FacID = T1.advisor where T1.Fname = "Linda" and T1.Lname = "Smith"
SELECT T1.fname , T1.lname FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor WHERE T2.fname = "Linda" AND T2.lname = "Smith"
SELECT count ( * ) FROM Rooms 
SELECT baseprice FROM Rooms 
SELECT roomid FROM Rooms where baseprice = 250
SELECT roomname FROM Rooms where baseprice = 250
SELECT RoomId , roomName FROM Rooms ORDER BY basePrice DESC LIMIT 1;
SELECT count ( * ) FROM event
SELECT event_id FROM event ORDER BY Event_Attendance DESC
SELECT event_id, event_attendance, name FROM event ORDER BY Event_Attendance DESC
SELECT venue , name FROM event ORDER BY Event_Attendance DESC LIMIT 2
SELECT count ( * ) FROM school
SELECT school_name FROM school
SELECT location FROM school where school_name = "Bremen"
SELECT avg ( enrollment ) , max ( enrollment ) , min ( enrollment ) FROM school
SELECT COUNT ( * ) FROM FACULTY WHERE sex = "M" AND Building = "NEB"
SELECT rank FROM FACULTY WHERE fname = "Mark" AND lname = "Giuliano"
SELECT COUNT ( * ) FROM FACULTY WHERE rank = "Professor"
SELECT Fname , Lname FROM FACULTY WHERE sex = "M" AND Building = "NEB"
SELECT * FROM SECTION WHERE semester = 'Fall' AND YEAR = 2009 INTERSECT SELECT course_id FROM SECTION WHERE semester = 'Spring' AND YEAR = 2010
SELECT building FROM SECTION WHERE semester = 'Spring' AND YEAR = 2010
SELECT building FROM SECTION WHERE sec_id = 443
SELECT building FROM SECTION WHERE course_id = 443
SELECT course_id FROM SECTION WHERE semester = 'Fall' AND YEAR = 2009 INTERSECT SELECT course_id FROM SECTION WHERE semester = 'Spring' AND YEAR = 2010
select author_id from Courses group by author_id having count ( author_id ) >1
SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count ( * ) > = 2
SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count ( * ) > = 1
SELECT T1.address_line_1 , T2.author_id FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id GROUP BY T2.author_id HAVING Count ( * ) >= 2
SELECT T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count ( * ) > = 2
SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count ( * ) > = 2
SELECT T2.customer_address FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.card_type_code = "Credit"
SELECT T2.customer_email FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.date_valid_from = ( SELECT MIN ( date_valid_from ) FROM Customers_Cards ) 
SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id HAVING count ( * ) >= 2
SELECT distinct payment_method FROM customers
SELECT count ( * ) FROM customers where payment_method = "Credit Card"
SELECT count ( * ) FROM customers where payment_method = "Cash"
SELECT count ( * ) FROM customers where payment_method = "Cheque"
SELECT payment_method FROM customers GROUP BY payment_method ORDER BY count ( * ) DESC LIMIT 1
SELECT dorm_name FROM dorm WHERE student_capacity > 300
SELECT dormid FROM dorm WHERE student_capacity > 300
SELECT student_capacity FROM dorm WHERE student_capacity > 300
SELECT dorm_name , gender FROM dorm WHERE student_capacity > 300 OR student_capacity < 100
SELECT billing_country FROM invoices GROUP BY billing_country ORDER BY count ( * ) DESC LIMIT 5
SELECT billing_country,COUNT ( * ) FROM invoices GROUP BY billing_country ORDER BY count ( * ) DESC LIMIT 5
SELECT billing_country , COUNT ( * ) FROM invoices GROUP BY billing_country ORDER BY count ( * ) LIMIT 5
SELECT billing_country,billing_postal_code FROM invoices GROUP BY billing_country ORDER BY count ( * ) LIMIT 5
SELECT billing_country , COUNT ( * ) FROM invoices GROUP BY billing_country ORDER BY count ( * ) DESC LIMIT 5;
SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id = T2.category_id JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.title = 'HUNGER ROOF'
SELECT count ( * ) FROM category AS T1 JOIN film_category AS T2 ON T1.category_id = T2.category_id JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.name = "Foreign"
SELECT count ( * ) FROM category AS T1 JOIN film_category AS T2 ON T1.category_id = T2.category_id JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.name = "Foreign" and T3.special_features = "Deleted Scenes"
SELECT count ( * ) FROM category AS T1 JOIN film_category AS T2 ON T1.category_id = T2.category_id JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.name = "Foreign" and T3.special_features = "Trailers"
SELECT count ( * ) FROM category AS T1 JOIN film_category AS T2 ON T1.category_id = T2.category_id JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T1.name = "Foreign" and T3.special_features = "Action"
SELECT T1.name FROM category AS T1 JOIN film_category AS T2 ON T1.category_id = T2.category_id JOIN film AS T3 ON T2.film_id = T3.film_id WHERE T3.title = 'HUNGER ROOF'
SELECT pid FROM Player WHERE pName LIKE '%a%'
SELECT count ( * ) FROM Player WHERE pName LIKE '%a%' and yCard = "yes"
SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%' and yCard = "yes"
SELECT DISTINCT pName FROM Player WHERE pName LIKE '%a%'
SELECT FirstName, LastName from Customer where customerid in ( select customerid from Customer intersect select customerid from Invoice ) 
SELECT DISTINCT T1.FirstName, T1.customerid FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = "Brazil"
SELECT DISTINCT T1.FirstName FROM CUSTOMER AS T1 JOIN INVOICE AS T2 ON T1.CustomerId = T2.CustomerId WHERE T1.country = "Brazil"
SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = 'Smith Hall'
SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = 'Smith Hall' ORDER BY T3.amenity_name
SELECT T2.amenid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = 'Smith Hall' ORDER BY T3.amenity_name
SELECT T2.dormid FROM has_amenity AS T2 where T2.amenid = 901
SELECT T2.dormid FROM has_amenity AS T2 where T2.amenid = 904
SELECT T2.dormid FROM has_amenity AS T2 where T2.amenid = 922
SELECT T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = 'Smith Hall' ORDER BY T3.amenity_name
select count ( distinct author ) from submission
select distinct author from submission
SELECT T2.Author , COUNT ( DISTINCT T1.workshop_id ) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID GROUP BY T2.Author
SELECT T2.Author , COUNT ( DISTINCT T1.workshop_id ) FROM acceptance AS T1 JOIN submission AS T2 ON T1.Submission_ID = T2.Submission_ID GROUP BY T2.Author
SELECT avg ( transaction_amount ) FROM Financial_transactions
SELECT sum ( transaction_amount ) FROM Financial_transactions
SELECT avg ( transaction_amount ) , sum ( transaction_amount ) FROM Financial_transactions
SELECT count ( * ) FROM catalog_contents
SELECT parent_entry_id FROM catalog_contents where catalog_entry_name = "Cola"
SELECT product_stock_number FROM catalog_contents where catalog_entry_name = "Cream Soda"
SELECT catalog_entry_name FROM catalog_contents ORDER BY price_in_dollars DESC LIMIT 1
SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t1.product_name = "catnip"
SELECT t1.product_name FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t2.color_description = "red"
SELECT t1.product_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t2.color_description = "green"
SELECT t1.product_name, t1.product_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t2.color_description = "green"
SELECT t2.color_description FROM products AS t1 JOIN ref_colors AS t2 ON t1.color_code = t2.color_code WHERE t1.product_name = "catnip"
SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = "stop"
SELECT T2.Workshop_Group_ID FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = "stop"
SELECT T2.Address_ID FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = "stop"
SELECT T2.Store_Name FROM Bookings AS T1 JOIN Drama_Workshop_Groups AS T2 ON T1.Workshop_Group_ID = T2.Workshop_Group_ID WHERE T1.Status_Code = "stop"
SELECT T2.contract_start_date FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id = T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1
SELECT T2.maintenance_contract_id FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id = T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1
SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id = T2.maintenance_contract_company_id WHERE t2.maintenance_contract_id = 9
SELECT T1.company_name FROM Third_Party_Companies AS T1 JOIN Maintenance_Contracts AS T2 ON T1.company_id = T2.maintenance_contract_company_id ORDER BY T2.contract_start_date ASC LIMIT 1
SELECT T1.asset_id , T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id = T2.asset_id GROUP BY T1.asset_id HAVING count ( * )  = 2 INTERSECT SELECT T1.asset_id , T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id = T2.asset_id GROUP BY T1.asset_id HAVING count ( * ) < 2
SELECT asset_make,asset_model from assets where asset_id = 2
SELECT asset_acquired_date,asset_disposed_date from assets where asset_id = 2
SELECT count ( * ) from assets where other_asset_details = "Bad condition"
SELECT maintenance_contract_id,supplier_company_id from assets where asset_id = 2
SELECT T1.asset_id , T1.asset_details FROM Assets AS T1 JOIN Asset_Parts AS T2 ON T1.asset_id = T2.asset_id GROUP BY T1.asset_id HAVING count ( * ) = 2 INTERSECT SELECT T1.asset_id , T1.asset_details FROM Assets AS T1 JOIN Fault_Log AS T2 ON T1.asset_id = T2.asset_id GROUP BY T1.asset_id HAVING count ( * ) < 2
SELECT T2.musical_id FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT ( * )  > = 3
SELECT DISTINcT ( T2.Year ) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.musical_ID = 6
SELECT DISTINCT ( T2.Name ) FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID WHERE T2.musical_ID = 6
SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT ( * ) >= 3
SELECT count ( * ) from phone
SELECT count ( distinct carrier ) from phone
select phone_id from phone where Carrier = 'Sprint' or Carrier = 'TMobile'
select phone_id, Name from phone where Carrier = 'Sprint' or Carrier = 'TMobile'
SELECT Name FROM phone WHERE Carrier = "Sprint" OR Carrier = "TMobile"
SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID WHERE T2.Age > 50
SELECT number_of_hosts from party where party_theme = "Spring"
SELECT count ( * ) from party where location = "Hemkade 48 Zaandam"
SELECT count ( * ) from host where nationality = "United States"
SELECT T3.Location FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID WHERE T2.Age > 50
SELECT employee_id , salary FROM employees WHERE manager_id =  ( SELECT employee_id FROM employees WHERE first_name = 'Payam' ) 
SELECT * from employees order by salary desc limit 1
SELECT * from employees order by salary limit 1
SELECT employee_id, first_name, last_name from employees where phone_number = "515.123.4569"
SELECT first_name, hire_date from employees order by hire_date limit 1
SELECT employee_id , salary FROM employees WHERE manager_id = ( SELECT employee_id FROM employees WHERE first_name = 'Payam' ) 
SELECT Date FROM performance
SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1
SELECT Performance_ID FROM performance ORDER BY Attendance DESC LIMIT 1
SELECT Date FROM performance ORDER BY Attendance DESC LIMIT 1
SELECT count ( distinct dept_name ) from student
SELECT count ( i_ID ) from advisor
SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id = T2.id WHERE T2.dept_name = 'History'
SELECT i_id FROM advisor AS T1 JOIN student AS T2 ON T1.s_id = T2.id WHERE T2.dept_name = 'History'
SELECT count ( * ) FROM BOOKINGS
SELECT count ( distinct status_code ) FROM BOOKINGS
SELECT status_code FROM BOOKINGS group by status_code order by count ( * ) desc limit 1
SELECT Status_Code FROM BOOKINGS GROUP BY Status_Code ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = "Democratic"
SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = "Liberal"
SELECT T1.delegate FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = "Liberal" and T1.committee = "Appropriations"
SELECT T1.delegate FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = "Liberal" and T1.committee = "Economic Matters"
SELECT T1.delegate FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = "Democratic" and T1.committee = "Economic Matters"
SELECT T1.Committee FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID WHERE T2.Party = "Democratic"
SELECT title FROM film WHERE LENGTH > 100
SELECT title FROM film WHERE LENGTH < = 100
SELECT title FROM film WHERE rating = 'PG' EXCEPT SELECT title FROM film WHERE replacement_cost > 200
SELECT title FROM film WHERE LENGTH > 100 OR rating = 'PG' EXCEPT SELECT title FROM film WHERE replacement_cost > 200
SELECT count ( DISTINCT T2.amenid ) , T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid WHERE T1.student_capacity > 100 GROUP BY T1.dormid
SELECT count ( * ) , T1.dormid FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid WHERE T1.student_capacity > 100 GROUP BY T1.dormid
SELECT T2.Date FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Height DESC LIMIT 1
SELECT T2.Location FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Height DESC LIMIT 1
SELECT Country FROM perpetrator where location = 'Kaio'
SELECT sum ( Killed ) FROM perpetrator where country = 'Japan'
SELECT sum ( Injured ) FROM perpetrator where country = 'Japan'
SELECT T2.Date FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Height DESC LIMIT 1
SELECT distinct city FROM branch
SELECT count ( branch_id ) FROM branch where city = 'London'
SELECT count ( Branch_ID ) FROM branch WHERE city = 'Oxford'
SELECT city FROM branch EXCEPT SELECT city FROM branch WHERE membership_amount > 100
SELECT count ( * ) FROM complaints
SELECT count ( * ) FROM customers
SELECT count ( * ) FROM customers WHERE customer_id IN ( SELECT customer_id FROM complaints ) 
SELECT count ( * ) FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM complaints ) 
SELECT phone_number FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM complaints ) 
SELECT email_address FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM complaints ) 
SELECT email_address , phone_number FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM complaints ) 
SELECT count ( * ) FROM postseason
SELECT * FROM postseason ORDER BY wins DESC LIMIT 1
SELECT T2.name , T1.team_id_winner FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T1.year = 2008 GROUP BY T1.team_id_winner ORDER BY count ( * ) DESC LIMIT 1;
SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rating ) DESC LIMIT 1
SELECT T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rating ) DESC LIMIT 1
SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rating ) LIMIT 1
SELECT T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rating ) LIMIT 1
SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id where rating = 5
SELECT T1.title , T1.i_id FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id GROUP BY T2.i_id ORDER BY avg ( T2.rating ) DESC LIMIT 1
SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid
SELECT Fname from Student where LName = "Smith"
SELECT t3.lname FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = "Bootup Baltimore"
SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "Spanish"
SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "database"
SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "advanced database"
SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "operating system"
SELECT T2.date_of_completion FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "advanced database"
SELECT T2.date_of_enrolment FROM Courses AS T1 JOIN Student_Course_Enrolment AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "Spanish"
SELECT SUM ( enr ) FROM college WHERE state = 'FL'
SELECT DISTINCT cName FROM college WHERE enr > ( SELECT min ( enr ) FROM college WHERE state = 'FL' ) 
SELECT DISTINCT cName FROM college WHERE enr > ( SELECT min ( enr ) FROM college WHERE state = 'OK' ) 
SELECT DISTINCT cName FROM college WHERE enr < ( SELECT max ( enr ) FROM college WHERE state = 'OK' ) 
SELECT DISTINCT cName FROM college WHERE enr < ( SELECT max ( enr ) FROM college WHERE state = 'FL' ) 
SELECT DISTINCT cName FROM college WHERE enr > ( SELECT min ( enr ) FROM college WHERE state = 'FL' ) 
SELECT name FROM Patient
SELECT name FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count ( * ) > 1
SELECT name , phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count ( * ) > 1
SELECT name , phone FROM appointment AS T1 JOIN patient AS T2 ON T1.patient = T2.ssn GROUP BY T1.patient HAVING count ( * ) > 1
SELECT Settlement_ID, settlement_amount FROM settlements
SELECT sum ( settlement_amount ) , avg ( settlement_amount ) FROM settlements
SELECT Effective_Date FROM settlements order by Effective_Date limit 1
SELECT sum ( settlement_amount ) , avg ( settlement_amount ) FROM settlements
SELECT customer_name FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM customer_address_history ) 
SELECT customer_name ,customer_address FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM customer_address_history ) 
SELECT customer_name FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM customer_address_history ) 
SELECT customer_name , customer_phone FROM customers WHERE customer_id NOT IN ( SELECT customer_id FROM customer_address_history ) 
SELECT distinct policy_type_code FROM available_policies
SELECT policy_type_code FROM available_policies where Policy_ID = 257
SELECT Policy_ID FROM available_policies where policy_type_code = "Life Insurance"
SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count ( * ) DESC LIMIT 1
SELECT policy_type_code FROM available_policies GROUP BY policy_type_code ORDER BY count ( * ) DESC LIMIT 1
select count ( * ) from ( SELECT * FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id GROUP BY T2.station_id HAVING avg ( bikes_available ) > 10 ) 
select count ( * ) from ( SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id GROUP BY T2.station_id HAVING avg ( bikes_available ) > 10 EXCEPT SELECT name FROM station WHERE city = "San Jose" ) 
SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id GROUP BY T2.station_id HAVING avg ( bikes_available ) > 10 EXCEPT SELECT name FROM station WHERE city = "San Jose"
SELECT T1.name FROM station AS T1 JOIN status AS T2 ON T1.id = T2.station_id GROUP BY T2.station_id HAVING avg ( bikes_available ) > 10 EXCEPT SELECT name FROM station WHERE city = "San Jose"
SELECT Shop_Name FROM shop
SELECT T2.Shop_Name,T1.Quantity FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID
SELECT T2.Shop_Name,T1.quantity FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM ( T1.quantity ) DESC LIMIT 1
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM ( T1.quantity ) DESC LIMIT 1
SELECT count ( * ) FROM skills
SELECT skill_description FROM skills
SELECT fault_short_name FROM part_faults
SELECT skill_code FROM skills where skill_description = "Mechanical"
SELECT T1.fault_short_name , T3.skill_description FROM Part_Faults AS T1 JOIN Skills_Required_To_Fix AS T2 ON T1.part_fault_id = T2.part_fault_id JOIN Skills AS T3 ON T2.skill_id = T3.skill_id
SELECT count ( * ) FROM professor
SELECT DISTINCT T4.dept_name FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN professor AS T3 ON T2.emp_num = T3.emp_num JOIN department AS T4 ON T4.dept_code = T3.dept_code
SELECT count ( * ) FROM Professor WHERE Dept_code = "ACCT"
SELECT count ( DISTINCT t3.emp_num ) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN professor AS T3 ON T2.emp_num = T3.emp_num JOIN department AS T4 ON T4.dept_code = T3.dept_code WHERE T3.dept_code = 'ACCT'
SELECT count ( DISTINCT t3.emp_num ) FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN professor AS T3 ON T2.emp_num = T3.emp_num JOIN department AS T4 ON T4.dept_code = T3.dept_code WHERE T3.dept_code = 'ACCT'
SELECT T2.emp_fname , T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN professor AS T3 ON T2.emp_num = T3.emp_num JOIN department AS T4 ON T4.dept_code = T3.dept_code WHERE T4.dept_name = 'Accounting'
SELECT T2.emp_fname , T1.class_room FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN professor AS T3 ON T2.emp_num = T3.emp_num JOIN department AS T4 ON T4.dept_code = T3.dept_code WHERE T4.dept_name = 'Accounting'
SELECT artist_name FROM artist
SELECT artist_name, rating FROM song
SELECT song_name, languages FROM song
SELECT T1.country FROM artist AS T1 JOIN song AS T2 ON T1.artist_name = T2.artist_name WHERE T1.gender = "Female" AND T2.languages = "bangla"
SELECT * FROM student_course_registrations WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance ) 
SELECT * FROM student_course_registrations WHERE student_id IN ( SELECT student_id FROM student_course_attendance ) 
SELECT registration_date FROM student_course_registrations
SELECT * FROM student_course_registrations WHERE student_id NOT IN ( SELECT student_id FROM student_course_attendance ) 
SELECT airport_name, international_passengers FROM airport
SELECT airport_name FROM airport order by international_passengers desc limit 1
SELECT * from airport where airport_name = "London Heathrow"
SELECT * FROM airport ORDER BY International_Passengers DESC LIMIT 1
SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT ( * ) > 3
SELECT T2.Name FROM actor AS T1 JOIN musical AS T2 ON T1.Musical_ID = T2.Musical_ID GROUP BY T1.Musical_ID HAVING COUNT ( * ) >= 3
SELECT T1.fname , T1.lname , count ( * ) , T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID
SELECT count ( * ) FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.Fname = "Naiman"
SELECT T1.fname , T1.lname , count ( * ) , T1.FacID FROM Faculty AS T1 JOIN Faculty_participates_in AS T2 ON T1.facID = T2.facID GROUP BY T1.FacID
SELECT T1.emp_lname , T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num WHERE T2.prof_office = 'DRE 102'
SELECT T1.emp_lname , T2.prof_high_degree FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num WHERE T2.prof_office = 'DRE 102'
SELECT T1.emp_lname , T1.emp_hiredate FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num WHERE T2.prof_office = 'DRE 102'
SELECT name FROM instructor WHERE dept_name = 'Statistics'
SELECT count ( ID ) FROM instructor
SELECT salary FROM instructor where id = 78699
SELECT dept_name FROM instructor where name = 'McKinnon'
SELECT name FROM instructor WHERE name LIKE '%dar%'
SELECT name FROM student WHERE dept_name = 'History' ORDER BY tot_cred DESC LIMIT 1
SELECT count ( name ) FROM student WHERE dept_name = 'History'
SELECT avg ( tot_cred ) FROM student WHERE dept_name = 'History'
SELECT name FROM student WHERE dept_name = 'History' ORDER BY tot_cred DESC LIMIT 1
SELECT count ( * ) FROM Apartments WHERE apt_number = "Suite 645"
SELECT building_id FROM Apartments WHERE apt_number = "Apt. 585"
SELECT min ( bathroom_count ) , max ( bathroom_count ) FROM Apartments
SELECT min ( bathroom_count ) , max ( bathroom_count ) FROM Apartments
SELECT T2.Name FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id = T2.people_id
SELECT HEIGHT FROM PEOPLE WHERE NAME = "Jack Campbell"
SELECT T2.weight FROM body_builder AS T1 JOIN people AS T2 ON T1.people_id = T2.people_id WHERE T1.snatch > 140 OR T2.height > 200;
SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg ( salary ) DESC LIMIT 1
SELECT avg ( salary ) FROM instructor WHERE dept_name = 'Physics'
SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg ( salary ) ASC LIMIT 1
SELECT dept_name FROM instructor GROUP BY dept_name ORDER BY avg ( salary ) DESC LIMIT 1
SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.country ORDER BY count ( * ) LIMIT 1
SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.country ORDER BY count ( * ) DESC LIMIT 1
SELECT t1.country,count ( * ) FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid where country = "USA"
SELECT t1.country FROM inst AS t1 JOIN authorship AS t2 ON t1.instid = t2.instid JOIN papers AS t3 ON t2.paperid = t3.paperid GROUP BY t1.country ORDER BY count ( * ) DESC LIMIT 1
SELECT t2.interaction_type FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id WHERE name = "ALA synthase"
SELECT product FROM enzyme where id = 1
SELECT T1.id , T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id WHERE T2.interaction_type = 'activitor' GROUP BY T1.id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.id , T1.name FROM enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T1.id = T2.enzyme_id WHERE T2.interaction_type = 'activitor' GROUP BY T1.id ORDER BY count ( * ) DESC LIMIT 1
SELECT distinct member_name FROM member
SELECT distinct member_name, T2.Event_Name FROM member as T1 join party_events as T2 on T1.Member_ID = T2.Member_in_charge_ID
SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id
SELECT member_name FROM member EXCEPT SELECT T1.member_name FROM member AS T1 JOIN party_events AS T2 ON T1.member_id = T2.member_in_charge_id
SELECT * , count ( * ) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count ( * )  > = 2
SELECT count ( * ) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id where T2.customer_name = "George"
SELECT count ( * ) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id where T2.customer_name = "Beulah"
SELECT T2.customer_name , count ( * ) FROM orders AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T2.customer_id HAVING count ( * ) >= 2
SELECT count ( * ) from professor
SELECT count ( * ) from professor where DEPT_CODE = "ENG"
SELECT dept_code from professor where emp_num = 103
SELECT count ( * ) , dept_code FROM professor WHERE prof_high_degree = 'Ph.D.' GROUP BY dept_code
SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id = T2.lot_id
SELECT transaction_id FROM Transactions_Lots WHERE lot_id = 11
SELECT T1.investor_id FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id = T2.lot_id WHERE T2.transaction_id = 3
SELECT lot_details FROM Lots EXCEPT SELECT T1.lot_details FROM Lots AS T1 JOIN transactions_lots AS T2 ON T1.lot_id = T2.lot_id
SELECT Name FROM member WHERE Hometown LIKE "%Kentucky%"
SELECT Card_Number FROM member
SELECT COUNT ( * ) FROM member
SELECT card_number FROM member WHERE Hometown LIKE "%Kentucky%"
SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = "Christop" AND T2.staff_last_name = "Berge" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = "Ashley" AND T2.staff_last_name = "Medhurst"
SELECT count ( * ) from Staff
SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.reported_by_staff_id = T2.staff_id WHERE T2.staff_first_name = "Christop" AND T2.staff_last_name = "Berge" INTERSECT SELECT product_id FROM problems AS T1 JOIN staff AS T2 ON T1.closure_authorised_by_staff_id = T2.staff_id WHERE T2.staff_first_name = "Ashley" AND T2.staff_last_name = "Medhurst"
SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code = T2.document_type_code JOIN Grants AS T3 ON T1.grant_id = T3.grant_id WHERE T2.document_description = 'Regular'
SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code = T2.document_type_code JOIN Grants AS T3 ON T1.grant_id = T3.grant_id WHERE T3.grant_amount > 100
SELECT count ( * ) FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code = T2.document_type_code JOIN Grants AS T3 ON T1.grant_id = T3.grant_id WHERE T2.document_description = 'Initial Application'
SELECT T3.grant_start_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code = T2.document_type_code JOIN Grants AS T3 ON T1.grant_id = T3.grant_id WHERE T2.document_description = 'Initial Application'
SELECT T3.grant_amount FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code = T2.document_type_code JOIN Grants AS T3 ON T1.grant_id = T3.grant_id WHERE T2.document_description = 'Initial Application'
SELECT T1.response_received_date FROM Documents AS T1 JOIN Document_Types AS T2 ON T1.document_type_code = T2.document_type_code JOIN Grants AS T3 ON T1.grant_id = T3.grant_id WHERE T2.document_description = 'Regular' OR T3.grant_amount > 100
SELECT COUNT ( * ) FROM course
SELECT title FROM course
SELECT credits FROM course WHERE title = "C Programming"
SELECT name FROM student
SELECT name FROM student WHERE id NOT IN ( SELECT T1.id FROM takes AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.dept_name = 'Biology' ) 
SELECT count ( * ) FROM Party
SELECT party_name FROM party
SELECT count ( * ) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id
SELECT T2.party_name , count ( * ) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id
SELECT T2.party_name , count ( * ) FROM party_events AS T1 JOIN party AS T2 ON T1.party_id = T2.party_id GROUP BY T1.party_id
SELECT transaction_type_code FROM TRANSACTIONS
SELECT avg ( amount_of_transaction ) FROM TRANSACTIONS
SELECT share_count FROM TRANSACTIONS
SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT ( * ) ASC LIMIT 1
SELECT transaction_type_code FROM TRANSACTIONS GROUP BY transaction_type_code ORDER BY COUNT ( * ) ASC LIMIT 1
SELECT T2.bname, max ( T1.amount ) FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id = T2.branch_id JOIN customer AS T3 ON T1.cust_id = T3.cust_id GROUP BY T2.bname
SELECT T2.credit_score FROM loan AS T1 JOIN customer AS T2 ON T1.cust_id = T2.cust_id ORDER BY T1.amount DESC limit 1
SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id = T2.branch_id JOIN customer AS T3 ON T1.cust_id = T3.cust_id GROUP BY T2.bname ORDER BY sum ( T1.amount ) DESC limit 1
SELECT T2.bname FROM loan AS T1 JOIN bank AS T2 ON T1.branch_id = T2.branch_id JOIN customer AS T3 ON T1.cust_id = T3.cust_id WHERE T3.credit_score < 100 GROUP BY T2.bname ORDER BY sum ( T1.amount ) DESC LIMIT 1
SELECT course_id FROM courses where course_name = "English"
SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "statistics" ORDER BY T2.date_of_attendance
SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "English" intersect SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "French"
SELECT T2.student_id FROM courses AS T1 JOIN student_course_attendance AS T2 ON T1.course_id = T2.course_id WHERE T1.course_name = "statistics" ORDER BY T2.date_of_attendance
SELECT count ( T3.first_name ) FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id = T3.engineer_id
SELECT T3.first_name , T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id = T3.engineer_id
SELECT T1.staff_name , T3.first_name , T3.last_name FROM Staff AS T1 JOIN Engineer_Visits AS T2 ON T1.staff_id = T2.contact_staff_id JOIN Maintenance_Engineers AS T3 ON T2.engineer_id = T3.engineer_id
SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count ( * )  > = 5
SELECT card_id FROM Customers_cards
SELECT card_type_code FROM Customers_cards where customer_id = 14
SELECT card_type_code FROM Customers_cards where customer_id = 6
SELECT card_type_code FROM Customers_cards GROUP BY card_type_code HAVING count ( * ) >= 5
SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID = T2.Address_ID
SELECT distinct T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID = T2.Address_ID
SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID = T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID = T2.Address_ID
SELECT T1.City_Town FROM Addresses AS T1 JOIN Customers AS T2 ON T1.Address_ID = T2.Address_ID EXCEPT SELECT T1.City_Town FROM Addresses AS T1 JOIN Performers AS T2 ON T1.Address_ID = T2.Address_ID
SELECT share_count FROM TRANSACTIONS
SELECT share_count, amount_of_transaction FROM TRANSACTIONS
SELECT share_count, amount_of_transaction FROM TRANSACTIONS where share_count > = 100 or amount_of_transaction > = 100
SELECT date_of_transaction,share_count, amount_of_transaction FROM TRANSACTIONS where share_count > = 100 or amount_of_transaction > = 100
SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count > = 100 OR amount_of_transaction > = 100
SELECT date_of_transaction FROM TRANSACTIONS WHERE share_count >= 100 OR amount_of_transaction >= 100
SELECT count ( distinct composer ) from track
SELECT COUNT ( * ) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId WHERE T1.Name = "MPEG audio file"
select max ( Milliseconds ) from track
select name from track order by milliseconds desc limit 1
select albumid from track where name = "Occupation / Precipice"
SELECT COUNT ( * ) FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId WHERE T1.Name = "AAC audio file"
select subject_name from subjects
select author_id from courses
select course_id from courses
SELECT T1.subject_id , T2.subject_name , COUNT ( * ) FROM Courses AS T1 JOIN Subjects AS T2 ON T1.subject_id = T2.subject_id GROUP BY T1.subject_id
select Tourist_Attraction_ID,Location_ID,Name from Tourist_Attractions where How_to_Get_There = 'bus'
select Location_ID from Tourist_Attractions
select Location_ID,Attraction_Type_Code from Tourist_Attractions
SELECT How_to_Get_There FROM Tourist_Attractions GROUP BY How_to_Get_There ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT COUNT ( DISTINCT director ) FROM Movie
SELECT COUNT ( * ) FROM ( SELECT director FROM Movie GROUP BY director HAVING count ( * ) = 1 ) 
SELECT director FROM Movie GROUP BY director HAVING count ( * ) = 1
SELECT director FROM Movie GROUP BY director HAVING count ( * ) = 1
SELECT email FROM user_profiles WHERE name LIKE '%Swift%'
SELECT name FROM user_profiles WHERE name LIKE '%Swift%'
SELECT name , email FROM user_profiles WHERE name LIKE '%Swift%'
SELECT count ( * ) from products
SELECT count ( * ) from orders
SELECT product_name from products where product_id = 1
SELECT T3.product_name , count ( * ) FROM orders AS T1 JOIN order_items AS T2 JOIN products AS T3 ON T1.order_id = T2.order_id AND T2.product_id = T3.product_id GROUP BY T3.product_id
SELECT count ( * ) FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000
SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000
SELECT T1.Planned_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000
SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000
SELECT T1.Order_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID JOIN Products AS T3 ON T2.Product_ID = T3.Product_ID WHERE T3.Product_price > 1000
SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Capital = "Dublin"
SELECT DISTINCT T2.Position FROM country AS T1 JOIN match_season AS T2 ON T1.Country_id = T2.Country WHERE T1.Capital = "Dublin"
SELECT payment_method FROM customers WHERE customer_name = "Dr. Julia Wuckert MD"
SELECT COUNT ( customer_id ) FROM customers WHERE payment_method = "Credit Card"
SELECT T1.active_from_date FROM Customer_Contact_Channels AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_name = "Rodrick Heaney"
SELECT DISTINCT channel_code FROM customers AS t1 JOIN customer_contact_channels AS t2 ON t1.customer_id = t2.customer_id WHERE t1.customer_name = "Tillman Ernser"
SELECT count ( * ) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction ) 
select name from enzyme order by name
select distinct name from enzyme AS T1 JOIN medicine_enzyme_interaction AS T2 ON T2.enzyme_id = T1.id WHERE interaction_type = 'inhibitor'
SELECT count ( * ) FROM enzyme WHERE id NOT IN ( SELECT enzyme_id FROM medicine_enzyme_interaction ) ;
SELECT Lieutenant_Governor FROM party WHERE year = "1998.0"
SELECT Delegate FROM election WHERE Election_ID = "1"
SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T2.Party FROM election AS T1 JOIN party AS T2 ON T1.Party = T2.Party_ID GROUP BY T1.Party ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT guest_id FROM Guests WHERE gender_code = "Female"
SELECT T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = "Female"
SELECT T1.booking_start_date , T1.booking_end_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = "Female"
SELECT T1.apt_id FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = "Female"
SELECT T1.booking_start_date , T1.booking_start_date FROM Apartment_Bookings AS T1 JOIN Guests AS T2 ON T1.guest_id = T2.guest_id WHERE T2.gender_code = "Female"
SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count ( * ) ASC LIMIT 1
SELECT category FROM hall_of_fame where yearid = 1944
SELECT sum ( votes ) FROM hall_of_fame where category = "Pioneer/Executive"
SELECT yearid FROM hall_of_fame GROUP BY yearid ORDER BY count ( * ) ASC LIMIT 1;
SELECT T2.firstname , T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom GROUP BY T2.firstname , T2.lastname ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.Classroom FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom GROUP BY T2.firstname , T2.lastname ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.firstname , T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom GROUP BY T2.firstname , T2.lastname ORDER BY count ( * ) DESC LIMIT 1
SELECT Start FROM Appointment ORDER BY Start asc LIMIT 1
SELECT Patient FROM Appointment WHERE Start = '2008-04-24 10:00'
SELECT Patient FROM Appointment WHERE AppointmentID = 93216548 OR AppointmentID = 86213939
SELECT DISTINCT ( T1.name ) FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient WHERE T2.patient = 100000004 OR T2.patient = 100000002
SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1
SELECT u_id FROM useracct where name = "Helen"
SELECT T2.rating FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id where T1.name = 'Helen'
SELECT T2.rank FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id where T1.name = 'Helen'
SELECT T2.i_id FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id where T1.name = 'Helen'
SELECT T2.a_id FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id where T1.name = 'Helen'
SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.rank FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id WHERE T1.name = 'Mark'
SELECT u_id FROM useracct WHERE name = 'Mark'
SELECT T2.a_id FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id WHERE T1.name = 'Mark'
SELECT T1.name FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id ORDER BY count ( * ) DESC LIMIT 1
SELECT title FROM course WHERE dept_name = 'Statistics'
SELECT title FROM course WHERE dept_name = 'Psychology'
SELECT title FROM course WHERE dept_name = 'Statistics' EXCEPT SELECT title FROM course WHERE dept_name = 'Psychology'
SELECT title FROM course WHERE dept_name = 'Statistics' EXCEPT SELECT title FROM course WHERE dept_name = 'Psychology'
SELECT * FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE building = 'Chandler'
SELECT * FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE building = 'Chandler' AND semester = 'Fall' AND YEAR = 2010
SELECT credits FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE building = 'Chandler' AND semester = 'Fall' AND YEAR = 2010
SELECT T1.title FROM course AS T1 JOIN SECTION AS T2 ON T1.course_id = T2.course_id WHERE building = 'Chandler' AND semester = 'Fall' AND YEAR = 2010
SELECT campus FROM campuses where id = '1'
SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = T2.campus WHERE T2.year = 2003 ORDER BY T2.faculty LIMIT 1
SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = T2.campus WHERE T2.year = 2003 ORDER BY T2.faculty DESC LIMIT 1
SELECT T1.campus FROM campuses AS T1 JOIN faculty AS T2 ON T1.id = T2.campus WHERE T2.year = 2003 ORDER BY T2.faculty DESC LIMIT 1
SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 2
SELECT avg ( T2.product_price ) FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 2
SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 2 AND T2.product_price > ( SELECT avg ( T2.product_price ) FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 2 ) 
SELECT T1.product_id FROM product_suppliers AS T1 JOIN products AS T2 ON T1.product_id = T2.product_id WHERE T1.supplier_id = 2 AND T2.product_price > ( SELECT avg ( product_price ) FROM products ) 
SELECT count ( DISTINCT customer_name ) FROM Customers WHERE payment_method = 'Visa'
SELECT customer_name FROM Customers WHERE payment_method = 'Visa'
SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5
SELECT customer_name FROM Customers ORDER BY date_became_customer LIMIT 5
SELECT id FROM trip WHERE zip_code = 94002
SELECT bike_id FROM trip WHERE zip_code = 94002 GROUP BY bike_id ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT COUNT ( * ) FROM trip WHERE zip_code = 94002 and bike_id = '252'
SELECT bike_id FROM trip WHERE zip_code = 94002 GROUP BY bike_id ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.age < = 23
SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.age > = 24
SELECT count ( weeks_on_top ) FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.age > = 24
SELECT Issue_Date FROM artist AS T1 JOIN volume AS T2 ON T1.Artist_ID = T2.Artist_ID WHERE T1.age <= 23
SELECT DISTINCT T1.EMP_FNAME FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE CRS_CODE = "ACCT-211"
SELECT DISTINCT T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE CRS_CODE = "ACCT-211"
SELECT DISTINCT T1.EMP_FNAME , T1.EMP_DOB FROM employee AS T1 JOIN CLASS AS T2 ON T1.EMP_NUM = T2.PROF_NUM WHERE CRS_CODE = "ACCT-211"
SELECT T1.uid FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count ( * ) > 1
SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count ( * ) > 1
SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count ( * ) > 1 order by T1.name
SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count ( * ) > 1
SELECT count ( id ) FROM buildings
SELECT count ( * ) , T1.company_id, T1.building_id FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T1.building_id
SELECT T1.company_id, count ( distinct T1.building_id ) FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T1.company_id
SELECT T1.company_id, t3.name, count ( distinct T1.building_id ) FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T1.company_id
SELECT T2.name FROM Office_locations AS T1 JOIN buildings AS T2 ON T1.building_id = T2.id JOIN Companies AS T3 ON T1.company_id = T3.id GROUP BY T1.building_id ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT name FROM Person
SELECT name, job FROM Person
SELECT name, job FROM Person WHERE job = 'student'
SELECT name, job FROM Person WHERE job = 'student' ORDER BY age DESC LIMIT 1
SELECT name FROM Person WHERE job = 'student' AND age = ( SELECT max ( age ) FROM person WHERE job = 'student' ) 
SELECT count ( T2.id ) FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = "Rock"
SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = "Rock"
SELECT avg ( T2.unit_price ) FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = "Rock"
SELECT count ( T2.name ) FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = "Jazz"
SELECT T2.milliseconds FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = "Rock" and T2.name = 'Balls to the Wall'
SELECT T2.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id WHERE T1.name = "Rock";
SELECT phone FROM Faculty WHERE Fname = "Jerry" AND Lname = "Prince"
SELECT room FROM Faculty WHERE Fname = "Jerry" AND Lname = "Prince"
SELECT building FROM Faculty WHERE Fname = "Jerry" AND Lname = "Prince"
SELECT phone , room , building FROM Faculty WHERE Fname = "Jerry" AND Lname = "Prince"
SELECT Rank FROM captain WHERE name like '%Conway%'
SELECT avg ( age ) FROM captain WHERE Rank = 'Midshipman'
SELECT Class FROM captain WHERE name = 'Lieutenant Hugh Bolitho'
SELECT name FROM captain WHERE rank = 'Midshipman' OR rank = 'Lieutenant'
SELECT count ( DISTINCT t1.title ) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = "Tokohu University"
SELECT count ( DISTINCT t1.title ) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = "University of Oxford"
SELECT t3.name,count ( DISTINCT t1.title ) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid group by t3.name
SELECT count ( DISTINCT t1.title ) FROM papers AS t1 JOIN authorship AS t2 ON t1.paperid = t2.paperid JOIN inst AS t3 ON t2.instid = t3.instid WHERE t3.name = "Tokohu University"
SELECT count ( distinct Publisher ) FROM publication
SELECT Publisher, Price FROM publication WHERE Price > 10000000 or Price < 5000000
SELECT Publisher FROM publication WHERE Price > 10000000 INTERSECT SELECT Publisher FROM publication WHERE Price < 5000000
SELECT avg ( capacity ) FROM stadium
SELECT count ( * ) FROM stadium where capacity < ( SELECT avg ( capacity ) FROM stadium ) 
SELECT name FROM stadium where capacity < ( SELECT avg ( capacity ) FROM stadium ) 
SELECT name FROM stadium WHERE capacity < ( SELECT avg ( capacity ) FROM stadium ) 
SELECT avg ( room_count ) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = "Provisional"
SELECT * FROM Apartments where bathroom_count > 1 and bedroom_count > 3
SELECT * FROM Apartments order by bedroom_count desc limit 1
SELECT count ( * ) FROM apartment_bookings where booking_start_date like "%2016%"
SELECT count ( * ) FROM apartment_bookings as T1 join apartments as T2 on T1.apt_id = T2.apt_id where T1.booking_start_date like "%2016%" and T2.apt_type_code = "Studio"
SELECT avg ( room_count ) FROM Apartment_Bookings AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T1.booking_status_code = "Provisional"
SELECT name from ACCOUNTS
SELECT T2.balance , T3.balance FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T2.balance + T3.balance DESC
SELECT T2.balance , T3.balance , T1.name FROM accounts AS T1 JOIN checking AS T2 ON T1.custid = T2.custid JOIN savings AS T3 ON T1.custid = T3.custid ORDER BY T2.balance + T3.balance DESC
SELECT document_name FROM documents
SELECT document_name FROM documents WHERE document_name LIKE "%CV%"
SELECT document_name FROM documents WHERE document_name LIKE "%CV%"
SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.attribute_value =  ( SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT t1.product_stock_number FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.attribute_value =  ( SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count ( * ) DESC LIMIT 1 ) 
SELECT t1.catalog_entry_name FROM Catalog_Contents AS t1 JOIN Catalog_Contents_Additional_Attributes AS t2 ON t1.catalog_entry_id = t2.catalog_entry_id WHERE t2.attribute_value = ( SELECT attribute_value FROM Catalog_Contents_Additional_Attributes GROUP BY attribute_value ORDER BY count ( * ) DESC LIMIT 1 ) 
select * from products
SELECT * FROM order_items AS t1 JOIN products AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_id ORDER BY sum ( order_quantity ) DESC
SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN ) 
SELECT Fname FROM STUDENT WHERE StuID IN ( SELECT StuID FROM ENROLLED_IN ) 
SELECT Fname FROM STUDENT WHERE StuID NOT IN ( SELECT StuID FROM ENROLLED_IN ) 
SELECT DISTINCT room FROM reservations
SELECT avg ( beds ) FROM rooms WHERE roomid IN ( SELECT DISTINCT room FROM reservations ) 
SELECT avg ( beds ) FROM rooms WHERE roomid NOT IN ( SELECT DISTINCT room FROM reservations ) 
SELECT count ( * ) FROM rooms WHERE roomid NOT IN ( SELECT DISTINCT room FROM reservations ) 
SELECT count ( * ) FROM rooms WHERE roomid NOT IN ( SELECT DISTINCT room FROM reservations ) 
SELECT Age FROM Student WHERE Fname = "Linda" AND Lname = "Smith"
SELECT Fname, Lname FROM Student ORDER BY age DESC LIMIT 1
SELECT Advisor FROM Student ORDER BY age LIMIT 1
SELECT Age FROM Student WHERE Fname = "Linda" AND Lname = "Smith";
SELECT count ( * ) , T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' GROUP BY T1.year
SELECT team_id_winner FROM postseason
SELECT team_id_loser FROM postseason
SELECT count ( * ) , T1.year FROM postseason AS T1 JOIN team AS T2 ON T1.team_id_winner = T2.team_id_br WHERE T2.name = 'Boston Red Stockings' GROUP BY T1.year
SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id = t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1
SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id = t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1
SELECT t1.address_line_1, t1.address_line_2 FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id = t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1
SELECT t1.phone_number FROM customers AS t1 JOIN complaints AS t2 ON t1.customer_id = t2.customer_id ORDER BY t2.date_complaint_raised DESC LIMIT 1
select appointmentid from appointment order by start desc limit 1
select patient from appointment order by start desc limit 1
SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1
SELECT T1.name FROM patient AS T1 JOIN appointment AS T2 ON T1.ssn = T2.patient ORDER BY T2.start DESC LIMIT 1
SELECT * FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'omnis'
select count ( * ) from ( SELECT T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'omnis' intersect SELECT T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.project_id HAVING count ( * ) > 2 ) 
SELECT count ( T2.project_id ) FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.project_id HAVING count ( * ) > 2
SELECT T1.task_details , T1.task_id , T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'omnis' UNION SELECT T1.task_details , T1.task_id , T2.project_id FROM Tasks AS T1 JOIN Projects AS T2 ON T1.project_id = T2.project_id JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.project_id HAVING count ( * ) > 2
SELECT T1.Service_Type_Description FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T1.Parent_Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT T1.Service_Type_Description , T1.Service_Type_Code FROM Ref_Service_Types AS T1 JOIN Services AS T2 ON T1.Service_Type_Code = T2.Service_Type_Code GROUP BY T1.Service_Type_Code ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT room_count FROM Apartments order by room_count DESC LIMIT 3
SELECT apt_type_code, avg ( bathroom_count ) , avg ( bedroom_count ) , avg ( room_count ) FROM Apartments GROUP BY apt_type_code
SELECT apt_type_code, avg ( room_count ) FROM Apartments GROUP BY apt_type_code
SELECT apt_type_code, avg ( room_count ) FROM Apartments GROUP BY apt_type_code order by avg ( room_count ) desc
SELECT apt_type_code FROM Apartments GROUP BY apt_type_code order by avg ( room_count ) desc
SELECT apt_type_code FROM Apartments GROUP BY apt_type_code ORDER BY avg ( room_count ) DESC LIMIT 3
SELECT T1.customer_id FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.customer_first_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.customer_id , T2.customer_first_name , T2.customer_last_name FROM Accounts AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT cName FROM Tryout WHERE decision = "yes"
SELECT avg ( T1.HS ) , max ( T1.HS ) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes'
SELECT avg ( T1.HS ) , max ( T1.HS ) , T1.pid, T2.cname FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes'
SELECT avg ( T1.HS ) , max ( T1.HS ) FROM player AS T1 JOIN tryout AS T2 ON T1.pID = T2.pID WHERE T2.decision = 'yes'
SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1
SELECT city FROM stadium where name = "Nou Mestalla"
SELECT country FROM stadium where name = "Nou Mestalla"
SELECT name FROM stadium ORDER BY capacity DESC LIMIT 1
SELECT count ( * ) FROM orders
SELECT date_order_placed FROM orders where order_id = 2
SELECT count ( * ) FROM Order_Items
SELECT T1.order_id FROM orders AS T1 JOIN order_items AS T2 ON T1.order_id = T2.order_id GROUP BY T1.order_id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM furniture
SELECT t1.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID order by T2.Price_in_Dollar desc limit 1
SELECT Num_of_Component FROM furniture order by Num_of_Component desc limit 1
SELECT t1.name FROM furniture AS t1 JOIN furniture_manufacte AS t2 ON t1.Furniture_ID = t2.Furniture_ID WHERE t2.Price_in_Dollar < ( SELECT max ( Price_in_Dollar ) FROM furniture_manufacte ) 
SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.formats = "mp3" INTERSECT SELECT song_name FROM song WHERE resolution < 1000
SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.formats = "mp3"
SELECT resolution from song where song_name = "Just beat it"
SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.formats = "mp4" INTERSECT SELECT song_name FROM song WHERE resolution < 1000
SELECT resolution from song where song_name = 'Aj ei akash'
SELECT song_name from song order by resolution desc limit 1
SELECT resolution from song where song_name = 'Tumi robe nirobe'
SELECT T2.song_name FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id WHERE T1.formats = "mp3" INTERSECT SELECT song_name FROM song WHERE resolution < 1000
SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name
SELECT T2.name , avg ( T1.stars ) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name
SELECT T2.name FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name ORDER BY avg ( T1.stars ) ASC
SELECT T1.mID FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T2.name = "Brittany Harris"
SELECT T1.mID, T1.ratingDate FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T2.name = "Brittany Harris"
SELECT avg ( T1.stars ) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID WHERE T2.name = "Brittany Harris"
SELECT T2.name , avg ( T1.stars ) FROM Rating AS T1 JOIN Reviewer AS T2 ON T1.rID = T2.rID GROUP BY T2.name
SELECT T1.year FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T2.park_name = "Riverside Park"
SELECT T2.park_name FROM park as t2 WHERE T2.city = "Anaheim"
SELECT sum ( T1.attendance ) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T2.park_name = "Columbia Park"
SELECT T2.park_name FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T1.year = 2008 ORDER BY T1.attendance DESC LIMIT 1
SELECT T2.park_name FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T1.year = 2008 ORDER BY T1.attendance DESC LIMIT 1;
SELECT school FROM university ORDER BY enrollment DESC LIMIT 1
SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1
SELECT location FROM university ORDER BY enrollment DESC LIMIT 1
SELECT enrollment FROM university ORDER BY enrollment DESC LIMIT 1
SELECT nickname FROM university ORDER BY enrollment DESC LIMIT 1
SELECT founded FROM university ORDER BY enrollment DESC LIMIT 1
SELECT count ( * ) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos ) 
SELECT name FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos ) 
SELECT max_aperture FROM camera_lens WHERE name = "Olympus M.Zuiko Digital ED 45mm f/1.8"
SELECT count ( * ) FROM camera_lens WHERE id NOT IN ( SELECT camera_lens_id FROM photos ) 
SELECT T1.lot_id, T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id = T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id = T3.transaction_id WHERE T3.share_count < 50
SELECT Count ( T1.lot_id ) FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id = T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id = T3.transaction_id WHERE T3.share_count < 50
SELECT T1.lot_details FROM LOTS AS T1 JOIN TRANSACTIONS_LOTS AS T2 ON T1.lot_id = T2.transaction_id JOIN TRANSACTIONS AS T3 ON T2.transaction_id = T3.transaction_id WHERE T3.share_count < 50
SELECT Major, count ( * ) FROM STUDENT GROUP BY major
SELECT distinct ( Major ) FROM STUDENT
SELECT Major, LName FROM STUDENT
SELECT Major, FName FROM STUDENT
SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * ) DESC LIMIT 1
SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * ) ASC LIMIT 1
SELECT Major FROM STUDENT GROUP BY major ORDER BY count ( * ) DESC LIMIT 1
SELECT f_id FROM files ORDER BY duration DESC LIMIT 1
SELECT artist_name FROM files ORDER BY duration DESC LIMIT 1
SELECT duration FROM files ORDER BY duration DESC LIMIT 1
SELECT duration FROM files ORDER BY duration LIMIT 1
SELECT avg ( duration ) FROM files
SELECT f_id FROM files ORDER BY duration DESC LIMIT 1
SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3
SELECT Poll_Source FROM candidate ORDER BY support_rate DESC LIMIT 3
SELECT Date FROM candidate ORDER BY support_rate DESC LIMIT 3
SELECT Unsure_rate FROM candidate ORDER BY support_rate DESC LIMIT 3
SELECT Consider_rate FROM candidate ORDER BY support_rate DESC LIMIT 3
SELECT Oppose_rate FROM candidate ORDER BY support_rate DESC LIMIT 3
SELECT support_rate FROM candidate ORDER BY support_rate DESC LIMIT 3
SELECT claim_id, amount_claimed FROM Claims
SELECT claim_id FROM Claims WHERE Amount_Claimed > ( SELECT avg ( Amount_Claimed ) FROM Claims ) 
SELECT claim_id FROM Claims order by amount_claimed desc limit 1
SELECT Date_Claim_Made , Date_Claim_Settled FROM Claims WHERE Amount_Claimed > ( SELECT avg ( Amount_Claimed ) FROM Claims ) 
SELECT max ( Length ) FROM roller_coaster
SELECT * FROM roller_coaster order by Speed desc limit 1
SELECT Height FROM roller_coaster where Name = 'Boardwalk Bullet'
SELECT count ( * ) FROM country WHERE country_id NOT IN ( SELECT country_id FROM roller_coaster WHERE LENGTH > 3000 ) 
SELECT T1.event_id , T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY T1.Event_ID HAVING count ( * ) > 1
SELECT T1.event_id , T1.event_details FROM EVENTS AS T1 JOIN Participants_in_Events AS T2 ON T1.Event_ID = T2.Event_ID GROUP BY T1.Event_ID HAVING count ( * ) > 1
SELECT ratingDate FROM Rating WHERE mID = 101
SELECT year FROM Movie WHERE title = "The Sound of Music"
SELECT director FROM Movie WHERE title = "Star Wars"
SELECT avg ( T1.stars ) , T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T2.year = ( SELECT min ( YEAR ) FROM Movie ) 
SELECT avg ( T1.stars ) , T2.title FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID WHERE T2.year = ( SELECT min ( YEAR ) FROM Movie ) 
SELECT County_name FROM county ORDER BY Population DESC LIMIT 1
SELECT County_name FROM county ORDER BY Population ASC LIMIT 1
SELECT population FROM county where county_name = "Baltimore County"
SELECT zip_code FROM county where county_name = "Baltimore County"
SELECT County_name FROM county ORDER BY Population DESC LIMIT 1
SELECT count ( * ) FROM Customers_cards
SELECT customer_id , count ( * ) FROM Customers_cards GROUP BY customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT customer_id , count ( * ) FROM Customers_cards GROUP BY customer_id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( * ) FROM Student_Tests_Taken where test_result = 'Fail'
SELECT count ( * ) FROM Student_Tests_Taken where test_result = 'Pass'
SELECT test_result , COUNT ( * ) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT ( * ) DESC
SELECT registration_id FROM Student_Tests_Taken where test_result = 'Pass'
SELECT test_result , COUNT ( * ) FROM Student_Tests_Taken GROUP BY test_result ORDER BY COUNT ( * ) DESC
SELECT mascot FROM school WHERE enrollment > ( SELECT avg ( enrollment ) FROM school ) 
SELECT mascot FROM school WHERE enrollment > ( SELECT avg ( enrollment ) FROM school ) 
SELECT mascot FROM school WHERE enrollment > ( SELECT avg ( enrollment ) FROM school ) 
SELECT max ( booked_count ) FROM products_booked
SELECT max ( booked_count ) , min ( booked_count ) FROM products_booked
SELECT max ( booked_count ) , min ( booked_count ) , avg ( booked_count ) FROM products_booked
SELECT max ( booked_count ) , min ( booked_count ) , avg ( booked_count ) FROM products_booked
SELECT T1.date_incident_start FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.last_name = "Fahey"
SELECT T1.incident_type_code FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.last_name = "Fahey"
SELECT T2.date_left_university FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.last_name = "Fahey"
SELECT count ( * ) from Behavior_Incident where incident_type_code = "VIOLENCE"
SELECT T2.first_name , T2.last_name FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T1.incident_type_code = "VIOLENCE"
SELECT T1.date_incident_start , date_incident_end FROM Behavior_Incident AS T1 JOIN Students AS T2 ON T1.student_id = T2.student_id WHERE T2.last_name = "Fahey"
SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT TYPE FROM ship GROUP BY TYPE ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT count ( * ) FROM student
SELECT count ( * ) FROM dorm
SELECT dorm_name FROM dorm
SELECT count ( * ) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall'
SELECT count ( * ) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' AND T1.sex = 'F'
SELECT count ( * ) FROM student AS T1 JOIN lives_in AS T2 ON T1.stuid = T2.stuid JOIN dorm AS T3 ON T3.dormid = T2.dormid WHERE T3.dorm_name = 'Smith Hall' AND T1.sex = 'F'
SELECT T2.customer_name , T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.outcome_code = 'Order' INTERSECT SELECT T2.customer_name , T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.outcome_code = 'No Response'
select count ( * ) from customers where payment_method = "Credit Card"
select * from customers where payment_method = "Direct Debit"
SELECT T2.customer_name , T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.outcome_code = 'Order' INTERSECT SELECT T2.customer_name , T2.payment_method FROM mailshot_customers AS T1 JOIN customers AS T2 ON T1.customer_id = T2.customer_id WHERE T1.outcome_code = 'No Response'
SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type = 'Friendly'
select count ( * ) from ( SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type = 'Friendly' ) 
SELECT country FROM competition EXCEPT SELECT country FROM competition WHERE competition_type = 'Friendly'
SELECT T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID = T2.Tourist_ID WHERE T1.Tourist_Details = "Vincent"
SELECT T2.Visit_Date FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID = T2.Tourist_ID WHERE T1.Tourist_Details = "Vincent"
SELECT Visit_Date FROM visits where visit_date < "2013-01-01 00:00:00"
SELECT T2.Visit_Date , T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID = T2.Tourist_ID WHERE T1.Tourist_Details = "Toney"
SELECT T2.Visit_Date , T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID = T2.Tourist_ID WHERE T1.Tourist_Details = "Graciela"
SELECT T2.Visit_Date , T2.Visit_Details FROM VISITORS AS T1 JOIN VISITS AS T2 ON T1.Tourist_ID = T2.Tourist_ID WHERE T1.Tourist_Details = "Vincent"
SELECT count ( * ) FROM Customers
SELECT customer_first_name FROM Customers
SELECT T2.card_number from Customers as T1 JOIN Customers_Cards as T2 ON T1.customer_id = T2.customer_id WHERE customer_first_name = "Aniyah"
SELECT count ( * ) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = "Art" AND T2.customer_last_name = "Turcotte"
SELECT max ( Transit_Passengers ) FROM airport
SELECT min ( Transit_Passengers ) FROM airport
SELECT avg ( Domestic_Passengers ) FROM airport
SELECT Airport_Name FROM airport order by International_Passengers desc limit 1
SELECT max ( Transit_Passengers ) , min ( Transit_Passengers ) FROM airport
SELECT count ( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = "KAWA" AND T2.lastname = "GORDON"
SELECT count ( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname like "%MIN%" AND T2.lastname like "%MACROSTIE%"
SELECT T2.firstname, T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T1.firstname like "%STORMY%" AND T1.lastname like "%CHRISTENSEN%"
SELECT count ( * ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE T2.firstname = "KAWA" AND T2.lastname = "GORDON"
SELECT count ( * ) from albums
SELECT count ( * ) from artists where id in ( select artist_id from albums ) 
SELECT count ( * ) FROM artists AS T1 JOIN albums AS T2 ON T1.id = T2.artist_id WHERE T1.name LIKE '%Led%'
SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id = T2.artist_id WHERE T1.name LIKE '%Led%'
SELECT T2.title FROM artists AS T1 JOIN albums AS T2 ON T1.id = T2.artist_id WHERE T1.name LIKE '%Led%'
SELECT Name FROM editor ORDER BY Age ASC LIMIT 1
SELECT age FROM editor ORDER BY Age ASC LIMIT 1
SELECT name FROM editor ORDER BY Age ASC LIMIT 1
SELECT name FROM editor ORDER BY Age desc LIMIT 1
SELECT Name FROM editor ORDER BY Age ASC LIMIT 1
SELECT MAX ( Population ) FROM county_public_safety
SELECT COUNT ( Location ) FROM county_public_safety
SELECT Crime_rate FROM county_public_safety ORDER BY Crime_rate DESC LIMIT 1
SELECT T2.Crime_rate FROM city AS T1 JOIN county_public_safety AS T2 ON T1.County_ID = T2.County_ID WHERE T1.White > 90
SELECT friend from personfriend where name = 'Alice'
SELECT age FROM Person AS T1 where name = ( select friend from personFriend where name = 'Alice' ) 
SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Dan' INTERSECT SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Alice'
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM ( T1.quantity ) DESC LIMIT 1
SELECT T2.location FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM ( T1.quantity ) DESC LIMIT 1
SELECT T2.shop_id FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM ( T1.quantity ) DESC LIMIT 1
SELECT T2.Shop_Name FROM stock AS T1 JOIN shop AS T2 ON T1.Shop_ID = T2.Shop_ID GROUP BY T1.Shop_ID ORDER BY SUM ( T1.quantity ) DESC LIMIT 1
select max ( Height ) from people
SELECT name FROM people ORDER BY Height DESC LIMIT 1
SELECT age FROM people ORDER BY Height DESC LIMIT 1
SELECT Age FROM people ORDER BY Height DESC LIMIT 1
SELECT avg ( enrollment ) FROM school
SELECT max ( enrollment ) FROM school
SELECT min ( enrollment ) FROM school
SELECT School_name FROM school order by Enrollment desc limit 1
SELECT School_name FROM school order by Enrollment limit 1
SELECT avg ( enrollment ) , max ( enrollment ) , min ( enrollment ) FROM school
SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms > = 15
SELECT DISTINCT LOCATION FROM station WHERE total_passengers > 25
SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms = 19
SELECT DISTINCT LOCATION FROM station WHERE number_of_platforms >= 15 AND total_passengers > 25
SELECT department_name FROM departments
SELECT department_name , COUNT ( * ) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY department_name
SELECT department_name , COUNT ( * ) FROM employees AS T1 JOIN departments AS T2 ON T1.department_id = T2.department_id GROUP BY department_name
SELECT count ( * ) FROM professor WHERE prof_high_degree = 'Ph.D.' OR prof_high_degree = 'MA'
SELECT count ( * ) FROM professor where prof_high_degree = 'Ph.D.'
SELECT count ( * ) FROM professor WHERE prof_high_degree = 'Ph.D.' OR prof_high_degree = 'MA'
SELECT name FROM physician
SELECT SSN FROM physician where name = 'John Dorian'
SELECT name FROM physician where EmployeeID = 2
SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1
SELECT T1.name FROM physician AS T1 JOIN prescribes AS T2 ON T1.employeeid = T2.physician ORDER BY T2.dose DESC LIMIT 1
SELECT count ( * ) from Customer_Orders
SELECT customer_id from Customer_Orders WHERE order_id = 2
SELECT order_date from Customer_Orders WHERE order_id = 1
SELECT DISTINCT customer_id FROM Customer_Orders WHERE order_date > ( SELECT min ( order_date ) FROM Customer_Orders WHERE order_status_code = "Cancelled" ) 
SELECT city from person where name = "Alice"
SELECT gender from person where name = "Alice"
SELECT job from person where name = "Bob"
SELECT age from person where name = "Bob"
SELECT city from person where name = "Bob"
SELECT count ( * ) from person where gender = "male"
SELECT name from person order by age desc limit 1
SELECT age from person where name = "Zach"
SELECT count ( * ) from person where gender = "male" and job = "engineer"
SELECT age FROM Person WHERE job = 'doctor' AND name = 'Zach'
SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid ORDER BY T2.balance DESC LIMIT 3
SELECT T1.name , T2.custid FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid ORDER BY T2.balance DESC LIMIT 3
SELECT avg ( T2.balance ) FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid
SELECT T1.name FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid order by T2.balance desc limit 3
SELECT T1.name , T2.balance FROM accounts AS T1 JOIN savings AS T2 ON T1.custid = T2.custid ORDER BY T2.balance DESC LIMIT 3
select count ( * ) from Physician
select Name from Physician
SELECT Position FROM physician WHERE POSITION LIKE '%senior%'
SELECT name FROM physician WHERE POSITION LIKE '%senior%'
SELECT name FROM physician WHERE POSITION LIKE '%senior%'
SELECT max ( Weeks_on_Top ) FROM volume
select count ( * ) from volume where weeks_on_top = 3.0
select song from volume where weeks_on_top = 3.0
SELECT min ( Weeks_on_Top ) FROM volume
SELECT count ( * ) FROM volume where weeks_on_top = 1.0
SELECT Artist_ID from volume group by artist_id having count ( * ) > = 2
SELECT max ( Weeks_on_Top ) , min ( Weeks_on_Top ) FROM volume
SELECT sum ( Enrollment ) FROM university
SELECT sum ( Enrollment ) FROM university WHERE founded > 1850
SELECT affiliation, sum ( Enrollment ) FROM university WHERE founded > 1850 GROUP BY affiliation
SELECT sum ( Enrollment ) , affiliation FROM university WHERE founded > 1850 GROUP BY affiliation
SELECT count ( * ) FROM routes AS T1 JOIN airports AS T2
SELECT count ( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.country = 'Italy'
SELECT count ( * ) FROM routes AS T1 JOIN airports AS T2 ON T1.dst_apid = T2.apid WHERE T2.country = 'Italy'
SELECT dorm_name FROM dorm
SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge'
SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'Study Room'
SELECT T1.dorm_name,T1.gender FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge' EXCEPT SELECT T1.dorm_name,T1.gender FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'Study Room'
SELECT T1.dorm_name,T3.amenity_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T1.dorm_name = 'Fawlty Towers'
SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'TV Lounge' EXCEPT SELECT T1.dorm_name FROM dorm AS T1 JOIN has_amenity AS T2 ON T1.dormid = T2.dormid JOIN dorm_amenity AS T3 ON T2.amenid = T3.amenid WHERE T3.amenity_name = 'Study Room'
SELECT title FROM course WHERE course_id IN ( SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.title = 'Mobile Computing' ) 
SELECT dept_name FROM course WHERE course_id IN ( SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.title = 'Mobile Computing' ) 
select count ( * ) from course where dept_name = "History"
SELECT title FROM course WHERE course_id IN ( SELECT T1.prereq_id FROM prereq AS T1 JOIN course AS T2 ON T1.course_id = T2.course_id WHERE T2.title = 'Mobile Computing' ) 
SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = "John Wen"
SELECT T3.name FROM physician AS T1 JOIN trained_in AS T2 ON T1.employeeid = T2.physician JOIN procedures AS T3 ON T3.code = T2.treatment WHERE T1.name = "John Wen"
SELECT chip_model, Company_name FROM phone where screen_mode>2
SELECT Accreditation_level FROM phone GROUP BY Accreditation_level HAVING count ( * ) > 3
SELECT Accreditation_level FROM phone GROUP BY Accreditation_level HAVING count ( * ) > 3
SELECT apt_type_code FROM Apartments
SELECT apt_type_code , max ( room_count ) FROM Apartments GROUP BY apt_type_code
SELECT apt_type_code , min ( room_count ) FROM Apartments GROUP BY apt_type_code
SELECT apt_type_code FROM Apartments where building_id = 808
SELECT apt_type_code , max ( room_count ) , min ( room_count ) FROM Apartments GROUP BY apt_type_code
SELECT avg ( age ) FROM HOST
SELECT name FROM HOST order by age limit 1
SELECT Nationality FROM HOST group by Nationality order by count ( * ) desc limit 1
SELECT Nationality FROM HOST GROUP BY Nationality ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT COUNT ( DISTINCT product_id ) FROM Products_Booked
SELECT MAX ( booked_amount ) FROM Products_Booked
SELECT MIN ( booked_count ) FROM Products_Booked
SELECT product_id FROM Products_Booked WHERE booked_count = 5
SELECT product_id FROM products_booked GROUP BY product_id HAVING count ( * ) = 3
SELECT T1.Date_Claim_Made , T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id GROUP BY T1.Claim_id HAVING count ( * ) > 2
SELECT T1.Date_Claim_Made , T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id order by T1.Amount_Claimed desc limit 1
SELECT T1.Date_Claim_made FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id order by T1.Amount_Claimed desc limit 1
SELECT T1.Date_Claim_settled FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id order by T1.Amount_Claimed desc limit 1
SELECT T1.Date_Claim_Made , T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id GROUP BY T1.Claim_id HAVING count ( * ) > 2 UNION SELECT T1.Date_Claim_Made , T1.Claim_id FROM Claims AS T1 JOIN Settlements AS T2 ON T1.Claim_id = T2.Claim_id WHERE T1.Amount_Claimed = ( SELECT max ( Amount_Claimed ) FROM Claims ) 
SELECT fname, lname FROM authors where lname = "Ohori"
SELECT authID FROM authors where lname = "Ohori" and fname = 'Atsushi'
SELECT paperID FROM Authorship where authID = 57
SELECT title FROM Papers where paperID = 204
SELECT t3.title FROM authors AS t1 JOIN authorship AS t2 ON t1.authid = t2.authid JOIN papers AS t3 ON t2.paperid = t3.paperid JOIN inst AS t4 ON t2.instid = t4.instid WHERE t4.country = "Japan" AND t2.authorder = 1 AND t1.lname = "Ohori"
SELECT age from artist where country = "United States"
SELECT avg ( age ) from artist where country = 'United States'
SELECT min ( age ) from artist where country = 'United States'
SELECT avg ( age ) , min ( age ) FROM artist WHERE country = 'United States'
SELECT count ( * ) from drivers
select count ( * ) from ( SELECT T1.surname , T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count ( * )  = 11 INTERSECT SELECT T1.surname , T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count ( * ) > 5 ) 
SELECT T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid order by count ( * ) desc limit 1
SELECT T1.surname , T1.driverid FROM drivers AS T1 JOIN pitstops AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count ( * ) = 11 INTERSECT SELECT T1.surname , T1.driverid FROM drivers AS T1 JOIN results AS T2 ON T1.driverid = T2.driverid GROUP BY T1.driverid HAVING count ( * ) > 5
SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count ( * ) DESC LIMIT 1
SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count ( * ) DESC LIMIT 2 except SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count ( * ) DESC LIMIT 1
SELECT store_name FROM department_stores GROUP BY dept_store_chain_id ORDER BY count ( * ) DESC LIMIT 2
SELECT store_address FROM department_stores GROUP BY dept_store_chain_id ORDER BY count ( * ) DESC LIMIT 2
SELECT store_email FROM department_stores GROUP BY dept_store_chain_id ORDER BY count ( * ) DESC LIMIT 2
SELECT dept_store_chain_id FROM department_stores GROUP BY dept_store_chain_id ORDER BY count ( * ) DESC LIMIT 2
SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id = T2.document_id WHERE T1.document_name LIKE '%s%'
SELECT T1.Document_Type_Code FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id = T2.document_id WHERE T1.document_name LIKE '%s%'
SELECT T1.Project_ID FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id = T2.document_id WHERE T1.document_name LIKE '%s%'
SELECT T1.Document_ID FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id = T2.document_id WHERE T1.document_name LIKE '%a%'
SELECT T1.document_id FROM Documents AS T1 JOIN Documents_with_expenses AS T2 ON T1.document_id = T2.document_id WHERE T1.document_name LIKE '%s%'
SELECT T2.Dname , T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO = T2.DNO WHERE T1.CName = "INTRODUCTION TO COMPUTER SCIENCE"
SELECT Instructor FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO = T2.DNO WHERE T1.CName = "INTRODUCTION TO COMPUTER SCIENCE"
SELECT Days FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO = T2.DNO WHERE T1.CName = "INTRODUCTION TO COMPUTER SCIENCE"
SELECT Hours FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO = T2.DNO WHERE T1.CName = "INTRODUCTION TO COMPUTER SCIENCE"
SELECT Credits FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO = T2.DNO WHERE T1.CName = "INTRODUCTION TO COMPUTER SCIENCE"
SELECT T2.Dname , T2.Room FROM COURSE AS T1 JOIN DEPARTMENT AS T2 ON T1.DNO = T2.DNO WHERE T1.CName = "INTRODUCTION TO COMPUTER SCIENCE"
SELECT killed FROM perpetrator WHERE Country = "South Korea"
SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Weight DESC LIMIT 1
SELECT Location FROM perpetrator WHERE Country = "Japan"
SELECT T1.Name FROM people AS T1 JOIN perpetrator AS T2 ON T1.People_ID = T2.People_ID ORDER BY T1.Weight DESC LIMIT 1
SELECT count ( * ) FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id = T2.id WHERE T2.nationality = 'American'
SELECT count ( * ) FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id = T2.id WHERE T2.nationality = 'Canadian'
SELECT DISTINCT T1.type FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id = T2.id WHERE T2.nationality = 'American' OR T2.nationality = 'Canadian'
SELECT DISTINCT T1.type FROM mill AS T1 JOIN architect AS t2 ON T1.architect_id = T2.id WHERE T2.nationality = 'American' OR T2.nationality = 'Canadian'
SELECT avg ( t3.age ) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = "Bootup Baltimore"
SELECT count ( * ) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = "Bootup Baltimore"
SELECT T3.FName, T3.LName FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = "Bootup Baltimore" AND t2.Position = "President"
SELECT avg ( t3.age ) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t1.clubname = "Bootup Baltimore"
SELECT distinct t1.pilot_id FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id = t2.winning_pilot
SELECT t1.name , t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id = t2.winning_pilot WHERE t1.age < 30 GROUP BY t2.winning_pilot ORDER BY count ( * ) DESC LIMIT 1
SELECT t1.name , t1.age FROM pilot AS t1 JOIN MATCH AS t2 ON t1.pilot_id = t2.winning_pilot WHERE t1.age < 30 GROUP BY t2.winning_pilot ORDER BY count ( * ) DESC LIMIT 1
SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id
SELECT date_became_customer FROM customers where customer_name in ( SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id ) 
SELECT distinct t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id where t2.order_status = "Cancelled"
SELECT customer_name FROM customers EXCEPT SELECT t1.customer_name FROM customers AS t1 JOIN customer_orders AS t2 ON t1.customer_id = t2.customer_id
SELECT T1.Allergy FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = "Lisa"
SELECT T1.Allergy FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = "Lisa" AND T1.AllergyType = "food"
SELECT T1.Allergy , T1.AllergyType FROM Allergy_type AS T1 JOIN Has_allergy AS T2 ON T1.Allergy = T2.Allergy JOIN Student AS T3 ON T3.StuID = T2.StuID WHERE T3.Fname = "Lisa" ORDER BY T1.Allergy
SELECT sum ( total_pounds ) FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T2.city = 'London' AND T1.year = 2018
SELECT count ( * ) FROM branch WHERE city = 'London'
SELECT sum ( total_pounds ) FROM purchase AS T1 JOIN branch AS T2 ON T1.branch_id = T2.branch_id WHERE T2.city = 'London' AND T1.year = 2018
SELECT count ( distinct f_id ) FROM files
SELECT T2.country from files as T1 join song as T2 on T1.f_id = T2.f_id where T1.artist_name = "Shrikanta"
SELECT artist_name from song order by rating desc limit 1
SELECT languages, genre_is from song where artist_name = "Prity"
SELECT file_size from files where artist_name = "Farida"
SELECT f_id FROM files WHERE formats = "mp4" INTERSECT SELECT f_id FROM song WHERE resolution < 1000
SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID GROUP BY T2.Railway_ID order by count ( * ) asc limit 1
SELECT T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID GROUP BY T2.Railway_ID order by count ( * ) desc limit 1
SELECT T1.Railway_ID FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID GROUP BY T2.Railway_ID order by count ( * ) desc limit 1
SELECT T2.Railway_ID , T1.Builder FROM railway AS T1 JOIN train AS T2 ON T1.Railway_ID = T2.Railway_ID GROUP BY T2.Railway_ID ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT count ( distinct name ) from aircraft
SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid GROUP BY T1.aid ORDER BY count ( * ) ASC LIMIT 1
SELECT count ( * ) FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid where T2.name = "Boeing 747-400"
SELECT distance from Aircraft where name = "Boeing 747-400"
SELECT distance from Aircraft where name = "Boeing 737-800"
SELECT T2.name FROM Certificate AS T1 JOIN Aircraft AS T2 ON T2.aid = T1.aid GROUP BY T1.aid ORDER BY count ( * ) DESC LIMIT 1
SELECT dept_name,budget FROM department
SELECT dept_name,budget FROM department order by budget limit 1
SELECT dept_name,building, budget FROM department order by budget limit 1
SELECT dept_name FROM department ORDER BY budget LIMIT 1
SELECT count ( * ) FROM ship
SELECT Name FROM ship where Ship_ID = 2
SELECT Built_Year FROM ship where Ship_ID = 3
SELECT class FROM ship where Ship_ID = 1
SELECT flag FROM ship where Ship_ID = 1
SELECT name , TYPE , flag FROM ship ORDER BY built_year DESC LIMIT 1
SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1
SELECT Police_officers FROM county_public_safety ORDER BY Population DESC LIMIT 1
SELECT Name FROM county_public_safety where Police_officers > ( SELECT Police_officers FROM county_public_safety ORDER BY Population DESC LIMIT 1 ) 
SELECT Name FROM county_public_safety ORDER BY Population LIMIT 1
SELECT Police_officers FROM county_public_safety ORDER BY Police_officers LIMIT 1
SELECT Name FROM county_public_safety ORDER BY Population DESC LIMIT 1
SELECT count ( distinct T2.lastname ) FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE grade = 5
SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE grade = 5
SELECT DISTINCT T2.classroom FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE grade = 5
SELECT DISTINCT T2.lastname FROM list AS T1 JOIN teachers AS T2 ON T1.classroom = T2.classroom WHERE grade = 5
select open_year from shop order by open_year
SELECT location FROM shop group by location having count ( * ) > 1
SELECT shop_name FROM shop WHERE Open_Year > 2012 or Open_Year < 2008
SELECT LOCATION FROM shop WHERE Open_Year > 2012 INTERSECT SELECT LOCATION FROM shop WHERE Open_Year < 2008
SELECT customer_details FROM customers
SELECT Staff_ID,Staff_Details from staff
SELECT customer_details FROM customers UNION SELECT staff_details FROM staff
select name from airlines
select count ( * ) from routes AS T1 JOIN airlines AS T2 ON T2.alid = T1.alid WHERE T2.country = 'United States'
SELECT T1.country , T1.name , count ( * ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.country , T1.name
SELECT T1.country , T1.name , count ( * ) FROM airlines AS T1 JOIN routes AS T2 ON T1.alid = T2.alid GROUP BY T1.country , T1.name
SELECT location_name FROM Ref_Locations
SELECT Date_in_Locaton_To FROM Document_Locations
SELECT T2.location_name , T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code = T2.location_code GROUP BY T1.location_code ORDER BY count ( * ) ASC LIMIT 1
SELECT T2.location_name , T1.location_code FROM Document_locations AS T1 JOIN Ref_locations AS T2 ON T1.location_code = T2.location_code GROUP BY T1.location_code ORDER BY count ( * ) ASC LIMIT 1
SELECT max ( enrollment ) from school
SELECT school_colors from school where school = "Barker College"
SELECT enrollment from school where school = "Cranbrook School"
SELECT school from school order by founded limit 1
SELECT Denomination FROM school WHERE Founded < 1890 INTERSECT SELECT Denomination FROM school WHERE Founded > 1900
SELECT count ( * ) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T2.park_name = 'Columbia Park'
SELECT count ( * ) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T1.year = 1907
SELECT count ( * ) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T1.year = 1907 AND T2.park_name = 'Columbia Park'
SELECT count ( * ) FROM home_game AS T1 JOIN park AS T2 ON T1.park_id = T2.park_id WHERE T1.year = 1907 AND T2.park_name = 'Columbia Park';
SELECT DISTINCT T2.thing_id , T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close'
SELECT DISTINCT T2.thing_id , T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' and T1.Date_and_Date < '2017-06-19 02:59:21'
SELECT DISTINCT T2.thing_id , T2.Type_of_Thing_Code FROM Timed_Status_of_Things AS T1 JOIN Things AS T2 ON T1.thing_id = T2.thing_id WHERE T1.Status_of_Thing_Code = 'Close' OR T1.Date_and_Date < '2017-06-19 02:59:21'
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = "Movies"
SELECT id from playlists WHERE name = "Movies"
SELECT T1.name FROM tracks AS T1 JOIN playlist_tracks AS T2 ON T1.id = T2.track_id JOIN playlists AS T3 ON T3.id = T2.playlist_id WHERE T3.name = "Movies";
SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1
SELECT End FROM appointment ORDER BY START DESC LIMIT 1
SELECT PrepNurse FROM appointment ORDER BY START DESC LIMIT 1
SELECT appointmentid FROM appointment ORDER BY START DESC LIMIT 1
SELECT name FROM buildings
SELECT name FROM buildings WHERE Status = "on-hold"
SELECT name FROM buildings WHERE Status = "on-hold" ORDER BY Stories ASC
SELECT name FROM buildings WHERE Status = "on-hold" ORDER BY Stories ASC
select product_id from products_booked where booked_amount = 102.76
SELECT T2.product_description FROM products_booked AS T1 JOIN products_for_hire AS T2 ON T1.product_id = T2.product_id WHERE T1.booked_amount = 102.76
SELECT T2.product_description FROM products_booked AS T1 JOIN products_for_hire AS T2 ON T1.product_id = T2.product_id WHERE T1.booked_amount = 102.76
SELECT * FROM track WHERE UnitPrice>1
SELECT count ( * ) FROM track
SELECT avg ( UnitPrice ) FROM track
SELECT T1.Title , T2.AlbumID FROM ALBUM AS T1 JOIN TRACK AS T2 ON T1.AlbumId = T2.AlbumId WHERE T2.UnitPrice > 1 GROUP BY T2.AlbumID
SELECT count ( * ) FROM student
SELECT count ( class_room ) FROM class
SELECT avg ( STU_GPA ) FROM student
SELECT STU_LNAME FROM student where STU_FNAME = "William"
SELECT avg ( T2.stu_gpa ) FROM enroll AS T1 JOIN student AS T2 ON T1.stu_num = T2.stu_num JOIN CLASS AS T3 ON T1.class_code = T3.class_code WHERE T3.crs_code = 'ACCT-211'
SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1
SELECT cust_name FROM customer ORDER BY credit_score desc LIMIT 1
SELECT cust_name FROM customer ORDER BY acc_bal desc LIMIT 1
SELECT cust_name FROM customer ORDER BY credit_score LIMIT 1
SELECT staff_first_name , staff_last_name FROM staff
SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = "rem"
SELECT product_name from product
SELECT T1.product_name from product as T1 join problems as T2 on T1.product_id = T2.product_id group by T2.product_id order by count ( * ) desc limit 3
SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = "rem" EXCEPT SELECT T3.staff_first_name , T3.staff_last_name FROM problems AS T1 JOIN product AS T2 JOIN staff AS T3 ON T1.product_id = T2.product_id AND T1.reported_by_staff_id = T3.staff_id WHERE T2.product_name = "aut"
SELECT count ( * ) FROM cinema WHERE capacity > = 300
SELECT name FROM cinema WHERE capacity > = 300
SELECT LOCATION FROM cinema WHERE capacity > = 300
SELECT * FROM cinema order by capacity desc limit 1
SELECT openning_year FROM cinema where name = "Codling"
SELECT LOCATION FROM cinema WHERE capacity > 300 GROUP BY LOCATION HAVING count ( * ) > 1
SELECT T1.customer_id FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T3.order_id = T2.order_id GROUP BY T1.customer_id ORDER BY sum ( T3.order_quantity ) DESC LIMIT 1
SELECT T1.customer_name , T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T3.order_id = T2.order_id GROUP BY T1.customer_id ORDER BY sum ( T3.order_quantity ) DESC LIMIT 1
SELECT customer_address FROM customers WHERE customer_name = "Cleo"
SELECT customer_email FROM customers WHERE customer_name = "Cleo" AND customer_phone = "1-202-928-5395"
SELECT customer_number FROM customers WHERE customer_name = "Cleo"
SELECT T1.customer_name , T1.customer_phone FROM customers AS T1 JOIN customer_orders AS T2 ON T1.customer_id = T2.customer_id JOIN order_items AS T3 ON T3.order_id = T2.order_id GROUP BY T1.customer_id ORDER BY sum ( T3.order_quantity ) DESC LIMIT 1
SELECT distance FROM Aircraft where name = 'Boeing 747-400'
SELECT distance FROM Aircraft where name = 'Boeing 737-800'
SELECT name FROM Aircraft where distance = 7120
SELECT aid FROM Aircraft order by distance desc limit 1
SELECT name FROM Aircraft order by distance desc limit 1
SELECT aid , name FROM Aircraft ORDER BY distance DESC LIMIT 1
SELECT T1.name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID WHERE T2.speed > 60 INTERSECT SELECT T1.name FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID WHERE T2.speed < 55
SELECT T1.Country_ID FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID WHERE T2.speed > 60 INTERSECT SELECT T1.Country_ID FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID WHERE T2.speed < 55
SELECT T1.name , T1.area , T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID WHERE T2.speed > 60 INTERSECT SELECT T1.name , T1.area , T1.population FROM country AS T1 JOIN roller_coaster AS T2 ON T1.Country_ID = T2.Country_ID WHERE T2.speed < 55
SELECT sum ( Visits_Restaurant.Spent ) FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Restaurant.ResName = "Subway"
SELECT sum ( Visits_Restaurant.Spent ) FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID WHERE Restaurant.ResName = "Honeygrow"
SELECT Restaurant.ResName, sum ( Visits_Restaurant.Spent ) FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID group by restaurant.resid
SELECT Restaurant.ResName , sum ( Visits_Restaurant.Spent ) FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID GROUP BY Restaurant.ResID ORDER BY sum ( Visits_Restaurant.Spent ) ASC LIMIT 1
SELECT Restaurant.ResName , sum ( Visits_Restaurant.Spent ) FROM Visits_Restaurant JOIN Restaurant ON Visits_Restaurant.ResID = Restaurant.ResID GROUP BY Restaurant.ResID ORDER BY sum ( Visits_Restaurant.Spent ) ASC LIMIT 1;
SELECT patient FROM undergoes ORDER BY dateundergoes DESC
SELECT patient FROM undergoes ORDER BY dateundergoes DESC limit 1
SELECT patient FROM undergoes ORDER BY dateundergoes LIMIT 1
SELECT avg ( price ) FROM Flight WHERE origin = "Los Angeles" AND destination = "Honolulu"
SELECT avg ( price ) FROM Flight WHERE origin = "Los Angeles" AND destination = "Chicago"
SELECT avg ( price ) FROM Flight WHERE origin = "Los Angeles" AND destination = "Washington D.C."
SELECT avg ( price ) FROM Flight WHERE origin = "Los Angeles" AND destination = "Honolulu"
SELECT * FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count ( * ) > 1
SELECT T1.name, T2.text FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count ( * ) > 1
SELECT count ( * ) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid and T1.name = 'Iron Man'
SELECT count ( * ) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid and T1.name = 'Celine Dion'
SELECT T1.name , count ( * ) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count ( * ) > 1
SELECT address FROM member WHERE age < 30
SELECT address FROM member WHERE age > 40
SELECT address FROM member WHERE age < 30 INTERSECT SELECT address FROM member WHERE age > 40
SELECT address FROM member WHERE age < 30 INTERSECT SELECT address FROM member WHERE age > 40
SELECT Location FROM party
SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1
SELECT Party_Theme FROM party
SELECT LOCATION FROM party ORDER BY Number_of_hosts DESC LIMIT 1
SELECT name FROM user_profiles
SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count ( * ) > 1
SELECT T1.name, count ( * ) FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count ( * ) > 1
SELECT T1.name FROM user_profiles AS T1 JOIN tweets AS T2 ON T1.uid = T2.uid GROUP BY T2.uid HAVING count ( * ) > 1
SELECT count ( name ) FROM instructor WHERE id IN ( SELECT id FROM teaches ) 
SELECT count ( name ) FROM instructor WHERE id NOT IN ( SELECT id FROM teaches ) 
SELECT name FROM instructor WHERE id NOT IN ( SELECT id FROM teaches ) 
SELECT name FROM instructor WHERE id NOT IN ( SELECT id FROM teaches ) 
SELECT amount FROM payment ORDER BY amount DESC LIMIT 1
SELECT avg ( amount ) FROM payment
SELECT amount FROM payment ORDER BY amount DESC LIMIT 1
SELECT count ( * ) FROM user_profiles
SELECT name FROM user_profiles ORDER BY followers DESC LIMIT 1
SELECT sum ( followers ) FROM user_profiles
SELECT followers FROM user_profiles WHERE name ! = "Tyler Swift"
SELECT max ( followers ) , sum ( followers ) FROM user_profiles
SELECT T2.emp_fname FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num
SELECT T2.emp_fname , T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num
SELECT T2.emp_fname , T4.prof_office , T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num
SELECT T2.emp_fname , T4.prof_office , T3.crs_description FROM CLASS AS T1 JOIN employee AS T2 ON T1.prof_num = T2.emp_num JOIN course AS T3 ON T1.crs_code = T3.crs_code JOIN professor AS T4 ON T2.emp_num = T4.emp_num
SELECT COUNT ( apid ) FROM airports
SELECT COUNT ( DISTINCT city ) FROM airports
SELECT city FROM airports GROUP BY city HAVING count ( * ) > 2 ORDER BY count ( * ) 
SELECT city FROM airports GROUP BY city HAVING count ( * ) > 2 ORDER BY count ( * ) 
SELECT count ( * ) FROM employees WHERE title = 'IT Staff'
SELECT count ( * ) FROM employees WHERE title = 'IT Staff' and city = 'Calgary'
SELECT count ( * ) FROM employees WHERE title = 'IT Staff' and city = 'Edmonton'
SELECT distinct city FROM employees WHERE title = 'IT Staff'
SELECT count ( * ) , city FROM employees WHERE title = 'IT Staff' GROUP BY city
SELECT t2.campus, sum ( t1.graduate ) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus = t2.id WHERE t1.year = 2004 group by t2.Campus
SELECT t2.campus, sum ( t1.undergraduate ) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus = t2.id group by t2.Campus
SELECT sum ( t1.graduate ) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus = t2.id WHERE t1.year = 2004 AND t2.campus = "San Francisco State University"
SELECT sum ( t1.graduate ) FROM discipline_enrollments AS t1 JOIN campuses AS t2 ON t1.campus = t2.id WHERE t1.year = 2004 AND t2.campus = "San Francisco State University"
SELECT count ( school_code ) FROM department
SELECT count ( * ) FROM PROFESSOR
SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY count ( * ) desc LIMIT 1
SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY count ( * ) LIMIT 1
select DEPT_NAME from department where school_code in ( SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY count ( * ) LIMIT 1 ) 
SELECT T1.school_code FROM department AS T1 JOIN professor AS T2 ON T1.dept_code = T2.dept_code GROUP BY T1.school_code ORDER BY count ( * ) LIMIT 1
SELECT name FROM company WHERE Sales_in_Billion > 200
SELECT headquarters FROM company WHERE name = "BP"
SELECT industry FROM company WHERE name = "BP"
SELECT name FROM company WHERE Sales_in_Billion > 200 ORDER BY Sales_in_Billion , Profits_in_Billion DESC
SELECT T2.name , sum ( T1.show_times_per_day ) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id = T2.cinema_id GROUP BY T1.cinema_id
SELECT T2.name FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id = T2.cinema_id GROUP BY T1.cinema_id ORDER BY sum ( T1.show_times_per_day ) DESC LIMIT 1
SELECT Name FROM cinema ORDER BY Capacity DESC LIMIT 1
SELECT Name FROM cinema WHERE Location = "County Cork"
SELECT T2.name , sum ( T1.show_times_per_day ) FROM schedule AS T1 JOIN cinema AS T2 ON T1.cinema_id = T2.cinema_id GROUP BY T1.cinema_id
SELECT T1.FacID , count ( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID
select count ( * ) from Faculty
select count ( * ) from Faculty where Sex = 'M'
SELECT T1.FacID , count ( * ) FROM Faculty AS T1 JOIN Student AS T2 ON T1.FacID = T2.advisor GROUP BY T1.FacID
SELECT amount FROM endowment ORDER BY amount DESC LIMIT 1
SELECT donator_name FROM endowment ORDER BY amount DESC LIMIT 1
SELECT donator_name FROM endowment ORDER BY amount ASC LIMIT 1
SELECT amount , donator_name FROM endowment ORDER BY amount DESC LIMIT 1
SELECT T3.Name , T3.Code , T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T1.SSN
SELECT Name FROM Scientists ORDER BY SSN
SELECT T3.Code , T3.Name , T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T1.SSN
SELECT T3.Code , T3.Name , T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T1.Name
SELECT T3.Name FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T1.Name
SELECT T3.Name FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T1.Name ASC
SELECT T1.Name , T3.Name , T3.Hours FROM Scientists AS T1 JOIN AssignedTo AS T2 ON T1.SSN = T2.Scientist JOIN Projects AS T3 ON T2.Project = T3.Code ORDER BY T3.Name , T1.Name
SELECT T2.Name FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID WHERE T1.Name = 'Saskatchewan School'
SELECT T2.Name, T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID
SELECT T2.Name, T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID ORDER BY T2.Name ASC
SELECT T2.Name , T1.College_Location FROM college AS T1 JOIN member AS T2 ON T1.College_ID = T2.College_ID ORDER BY T2.Name ASC
SELECT LOCATION FROM station GROUP BY LOCATION HAVING count ( * )  = 1
SELECT name from station where location = "Glasgow"
SELECT Number_of_Platforms from station where name = "Glasgow Central"
SELECT LOCATION FROM station GROUP BY LOCATION HAVING count ( * ) = 1
SELECT max ( Profits_billion ) FROM Companies
SELECT Market_Value_billion FROM Companies where name = "JPMorgan Chase"
SELECT Headquarters FROM Companies where name = "General Electric"
SELECT NAME FROM Companies ORDER BY Assets_billion DESC LIMIT 1
SELECT max ( Sales_billion ) , min ( Sales_billion ) FROM Companies WHERE Industry != "Banking"
SELECT address_content,city FROM addresses
SELECT city FROM addresses WHERE city IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id ) 
SELECT city FROM addresses WHERE city not IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id ) 
SELECT city FROM addresses WHERE city NOT IN ( SELECT DISTINCT t3.city FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id ) 
SELECT T1.statement_id , T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY count ( * ) DESC LIMIT 1
SELECT count ( Account_ID ) from accounts
SELECT Statement_Details from Statements where Statement_ID = '57'
SELECT Account_Details from accounts where Account_ID = 61
SELECT T1.statement_id , T2.statement_details FROM Accounts AS T1 JOIN Statements AS T2 ON T1.statement_id = T2.statement_id GROUP BY T1.statement_id ORDER BY count ( * ) DESC LIMIT 1
SELECT rank , sex , count ( * ) FROM Faculty WHERE sex = "M" GROUP BY rank , sex
SELECT rank , sex , count ( * ) FROM Faculty GROUP BY rank , sex
SELECT rank , sex , count ( * ) FROM Faculty GROUP BY rank , sex
SELECT customer_details FROM customers
SELECT customer_id FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id
SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id
SELECT customer_details FROM customers EXCEPT SELECT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id
SELECT address FROM employees
SELECT city FROM employees
SELECT email FROM employees
SELECT address FROM employees WHERE first_name = "Nancy" AND last_name = "Edwards";
SELECT T1.Grape FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG ( Price ) DESC LIMIT 1
SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG ( Price ) DESC LIMIT 1
SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG ( Price ) LIMIT 1
SELECT T1.Color FROM GRAPES AS T1 JOIN WINE AS T2 ON T1.Grape = T2.Grape GROUP BY T2.Grape ORDER BY AVG ( Price ) DESC LIMIT 1
SELECT count ( * ) FROM professor
SELECT count ( * ) FROM professor where prof_high_degree = "Ph.D."
SELECT T2.dept_name FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T1.prof_high_degree = 'Ph.D.' GROUP BY T1.dept_code ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.dept_name , T1.dept_code FROM professor AS T1 JOIN department AS T2 ON T1.dept_code = T2.dept_code WHERE T1.prof_high_degree = 'Ph.D.' GROUP BY T1.dept_code ORDER BY count ( * ) DESC LIMIT 1
SELECT customer_id FROM orders ORDER BY date_order_placed LIMIT 1
SELECT customer_id FROM orders ORDER BY date_order_placed desc LIMIT 1
SELECT order_status FROM orders where customer_id = 11
SELECT date_order_placed FROM orders where customer_id = 11
SELECT order_id , customer_id FROM orders ORDER BY date_order_placed LIMIT 1
SELECT avg ( budget_million ) FROM movie
SELECT avg ( budget_million ) FROM movie where year < 2000
SELECT avg ( budget_million ) , max ( budget_million ) , min ( budget_million ) FROM movie WHERE YEAR < 2000
SELECT avg ( budget_million ) , max ( budget_million ) , min ( budget_million ) FROM movie WHERE YEAR < 2000
SELECT Coach_ID from player_coach where starting_year = 2010
SELECT coach_name from coach as t1 join player_coach as t2 on t1.coach_id = t2.coach_id where starting_year = 2010
SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID where t2.coach_name = "Jameson Tomas"
SELECT T3.Player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID where t2.coach_name = "Smith Brown"
SELECT T1.Coach_name FROM coach AS T1 JOIN player_coach AS T2 ON T1.Coach_ID = T2.Coach_ID where T2.Starting_year = 2011
SELECT T3.player_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID where T2.coach_name = "Robert Chen"
SELECT T3.Player_name , T2.coach_name FROM player_coach AS T1 JOIN coach AS T2 ON T1.Coach_ID = T2.Coach_ID JOIN player AS T3 ON T1.Player_ID = T3.Player_ID
SELECT Date_Claim_Made FROM Claims
SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1
SELECT Claim_ID FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1
SELECT Date_Claim_Made FROM Claims ORDER BY Date_Claim_Made ASC LIMIT 1
SELECT avg ( Milliseconds ) from Track
SELECT avg ( Bytes ) from Track
SELECT max ( unitprice ) from Track
SELECT Name FROM TRACK WHERE Name LIKE '%you%'
SELECT emp_fname FROM employee ORDER BY emp_dob LIMIT 1
SELECT emp_lname FROM employee ORDER BY emp_dob LIMIT 1
SELECT EMP_HIREDATE FROM employee ORDER BY emp_dob LIMIT 1
SELECT EMP_DOB FROM employee ORDER BY emp_dob LIMIT 1
SELECT emp_fname , emp_lname FROM employee ORDER BY emp_dob LIMIT 1
SELECT t1.product_id,t1.product_name FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code
SELECT t1.product_id,t1.product_name,t1.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code where t1.product_id = 11
SELECT t2.product_category_code,t2.product_category_description, t2.unit_of_measure FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code where t1.product_id = 11
SELECT t2.unit_of_measure , t2.product_category_code FROM products AS t1 JOIN ref_product_categories AS t2 ON t1.product_category_code = t2.product_category_code WHERE t1.product_name = "chervil"
SELECT avg ( height ) FROM player
SELECT avg ( T1.height ) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id = T2.player_id JOIN college AS T3 ON T3.college_id = T2.college_id WHERE T3.name_full = 'Yale University'
SELECT avg ( weight ) FROM player
SELECT player_id FROM player ORDER BY weight DESC LIMIT 1
SELECT avg ( T1.height ) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id = T2.player_id JOIN college AS T3 ON T3.college_id = T2.college_id WHERE T3.name_full = 'Yale University';
SELECT distinct Director FROM movie group by Director
SELECT Budget_million FROM movie where Title = 'The Boondock Saints'
SELECT Budget_million FROM movie order by Budget_million desc limit 1
SELECT avg ( budget_million ) , max ( budget_million ) , min ( budget_million ) FROM movie WHERE YEAR < 2000
SELECT country FROM customers WHERE first_name = "Roberto" AND last_name = "Almeida"
SELECT state FROM customers WHERE first_name = "Roberto" AND last_name = "Almeida"
SELECT address FROM customers WHERE first_name = "Roberto" AND last_name = "Almeida"
SELECT company FROM customers WHERE first_name = "Roberto" AND last_name = "Almeida"
SELECT first_name,last_name FROM customers WHERE company = "Riotur" AND first_name ! = "Roberto" AND last_name ! = "Almeida"
SELECT country FROM customers WHERE first_name = "Roberto" AND last_name = "Almeida";
SELECT t2.amount FROM loan AS T2 JOIN customer AS T1 ON T1.cust_id = T2.cust_id WHERE t1.cust_name = "Owen"
SELECT T1.cust_name FROM customer AS T1 JOIN loan AS T2 ON T1.cust_id = T2.cust_id WHERE amount > 3000
SELECT * FROM university order by founded desc LIMIT 1
SELECT t2.team_name , t2.ACC_Regular_Season FROM university AS t1 JOIN basketball_match AS t2 ON t1.school_id = t2.school_id ORDER BY t1.founded LIMIT 1
SELECT count ( DISTINCT T1.injury ) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id = T2.id WHERE T2.season > 2010
SELECT player from injury_accident where injury = "Hamstring muscle strain in his left thigh"
SELECT count ( DISTINCT T1.injury ) FROM injury_accident AS T1 JOIN game AS T2 ON T1.game_id = T2.id WHERE T2.season > 2010
SELECT DISTINCT T2.city FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id
SELECT count ( * ) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id
SELECT count ( * ) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id WHERE T2.city = "San Francisco"
SELECT count ( * ) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id WHERE T2.city ! = "San Francisco"
SELECT count ( * ) FROM trip AS T1 JOIN station AS T2 ON T1.end_station_id = T2.id WHERE T2.city != "San Francisco"
SELECT Headquarter FROM manufacturers WHERE Name = "Sony"
SELECT Revenue FROM manufacturers WHERE Name = "Creative Labs"
SELECT name FROM manufacturers WHERE Headquarter = "Los Angeles"
SELECT name FROM manufacturers order by revenue limit 1
SELECT name FROM manufacturers WHERE revenue > ( SELECT avg ( revenue ) FROM manufacturers ) 
SELECT name FROM storm
select T1.name,count ( * ) from storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id limit 1
SELECT T1.name , count ( * ) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id
SELECT T1.name , count ( * ) FROM storm AS T1 JOIN affected_region AS T2 ON T1.storm_id = T2.storm_id GROUP BY T1.storm_id
SELECT * FROM classroom WHERE capacity > 50
SELECT room_number FROM classroom WHERE capacity > 50
SELECT count ( distinct room_number ) FROM classroom WHERE capacity > 50
SELECT count ( * ) , building FROM classroom WHERE capacity > 50 GROUP BY building
SELECT T1.city FROM city AS T1 JOIN hosting_city AS T4 ON T1.city_id = T4.host_city
SELECT city FROM city where City_ID not in ( select Host_City from hosting_city ) 
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar < T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city
SELECT T2.Mar,T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T1.City = "Hangzhou ( Zhejiang ) " or T1.City = "Nantong ( Jiangsu ) "
SELECT T1.city FROM city AS T1 JOIN temperature AS T2 ON T1.city_id = T2.city_id WHERE T2.Mar < T2.Dec EXCEPT SELECT T3.city FROM city AS T3 JOIN hosting_city AS T4 ON T3.city_id = T4.host_city
SELECT T1.city FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Dan'
SELECT * FROM Person WHERE name = 'Zach'
SELECT count ( T2.friend ) FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T1.name = 'Dan'
SELECT stu_fname , stu_lname FROM student WHERE stu_gpa > 3 ORDER BY stu_dob DESC LIMIT 1
SELECT stu_gpa FROM student WHERE stu_gpa > 3 ORDER BY stu_dob DESC LIMIT 1
SELECT stu_fname , stu_lname , stu_gpa FROM student WHERE stu_gpa < 3 ORDER BY stu_dob ASC LIMIT 1
SELECT stu_fname , stu_lname , stu_gpa FROM student WHERE stu_gpa > 3 ORDER BY stu_dob DESC LIMIT 1
SELECT * FROM Movie
SELECT director FROM Movie WHERE title = 'Star Wars'
SELECT * FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY T1.stars DESC LIMIT 1
SELECT year FROM Movie WHERE title = 'Gone with the Wind'
SELECT T2.title , T1.rID , T1.stars , min ( T1.stars ) FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID GROUP BY T1.rID
SELECT T1.member_id, count ( * ) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id group by T1.member_id
SELECT count ( * ) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id WHERE T2.level = 5
SELECT count ( * ) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id WHERE T2.level = 6
SELECT count ( * ) FROM purchase AS T1 JOIN member AS T2 ON T1.member_id = T2.member_id WHERE T2.level = 6
SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4
SELECT T2.apt_number FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4
SELECT T2.bathroom_count FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4
SELECT T1.facility_code FROM Apartment_Facilities AS T1 JOIN Apartments AS T2 ON T1.apt_id = T2.apt_id WHERE T2.bedroom_count > 4
SELECT count ( * ) FROM people WHERE weight > 85
SELECT count ( * ) FROM people WHERE weight > 85 AND Sex = "F"
SELECT count ( * ) FROM people WHERE weight > 85 AND Sex = "M"
SELECT count ( * ) , sex FROM people WHERE weight > 85 GROUP BY sex
SELECT product_details, product_id from Products
SELECT T1.product_details,T2.order_quantity from Products as T1 join Order_Items as T2 on T1.product_id = T2.product_id
SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_id ORDER BY count ( * ) DESC LIMIT 1
SELECT t2.product_details FROM order_items AS t1 JOIN products AS t2 ON t1.product_id = t2.product_id GROUP BY t1.product_id ORDER BY count ( * ) DESC LIMIT 1
SELECT avg ( num_of_staff ) , avg ( score ) FROM shop
SELECT * FROM shop order by score desc limit 1
SELECT count ( * ) from shop where num_of_staff > ( select num_of_staff from shop where shop_id = 10 ) 
SELECT * from shop where address = ( select address from shop where shop_id = 10 ) and shop_id ! = 10
SELECT avg ( num_of_staff ) , avg ( score ) FROM shop
SELECT count ( * ) from staff
SELECT staff_name from staff group by staff_name order by count ( * ) desc limit 1
SELECT gender FROM staff GROUP BY gender ORDER BY count ( * ) DESC LIMIT 1
SELECT gender FROM staff GROUP BY gender ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.property_id , count ( * ) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id = T2.property_id GROUP BY T1.property_id
SELECT property_type_code, property_address from properties where property_id = 24
SELECT date_moved_in from residents where resident_id = 6
SELECT T1.property_id , count ( * ) FROM properties AS T1 JOIN residents AS T2 ON T1.property_id = T2.property_id GROUP BY T1.property_id
SELECT destination FROM Flight WHERE flno = 99
SELECT distance FROM Flight WHERE flno = 99
SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T1.flno = 99
SELECT T2.name FROM Flight AS T1 JOIN Aircraft AS T2 ON T1.aid = T2.aid WHERE T1.flno = 99
SELECT count ( distinct sportname ) FROM Sportsinfo WHERE onscholarship = "Y"
SELECT distinct sportname FROM Sportsinfo WHERE onscholarship = "Y"
SELECT sportname FROM Sportsinfo WHERE onscholarship = "Y" GROUP BY sportname ORDER BY count ( * ) DESC LIMIT 1
SELECT sportname FROM Sportsinfo WHERE onscholarship = 'Y' GROUP BY sportname ORDER BY count ( * ) DESC LIMIT 1
SELECT DISTINCT payment_method FROM customers
SELECT DISTINCT address_type FROM customer_addresses
SELECT COUNT ( customer_id ) FROM customers
SELECT t3.address_content FROM customers AS t1 JOIN customer_addresses AS t2 ON t1.customer_id = t2.customer_id JOIN addresses AS t3 ON t2.address_id = t3.address_id WHERE t1.customer_name = "Maudie Kertzmann"
SELECT country FROM airports ORDER BY elevation DESC LIMIT 1
SELECT city FROM airports ORDER BY elevation DESC LIMIT 1
SELECT elevation FROM airports ORDER BY elevation DESC LIMIT 1
SELECT country FROM airports ORDER BY elevation DESC LIMIT 1
select count ( * ) from person where gender = 'female' and age < 40
select count ( * ) from person where gender = 'male'
select count ( * ) from person where age < 40 and gender = 'male'
SELECT count ( * ) , gender FROM Person WHERE age < 40 GROUP BY gender
SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars = 4
SELECT stars FROM Rating where rID = 201
SELECT rID FROM Rating EXCEPT SELECT rID FROM Rating WHERE stars = 4
SELECT document_name , document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'
SELECT document_name FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project' order by document_date limit 1
SELECT document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project' order by document_date limit 1
SELECT document_name , document_date FROM Documents AS T1 JOIN projects AS T2 ON T1.project_id = T2.project_id WHERE T2.project_details = 'Graph Database project'
SELECT T1.activity_name , count ( * ) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID
SELECT T1.activity_name FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID order by count ( * ) desc limit 1
SELECT T1.activity_name , count ( * ) FROM Activity AS T1 JOIN Faculty_participates_in AS T2 ON T1.actID = T2.actID GROUP BY T1.actID
select start_date, start_station_name from trip where id = 900504
select distinct zip_code, bike_id from trip where bike_id = 454 or bike_id = 574
SELECT id FROM trip ORDER BY duration LIMIT 1
SELECT id FROM trip ORDER BY duration LIMIT 1
SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count ( * ) DESC LIMIT 1
SELECT Document_Details FROM Documents_with_expenses GROUP BY Document_Details ORDER BY count ( * ) DESC LIMIT 1
SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count ( * ) DESC LIMIT 1
SELECT budget_type_code FROM Documents_with_expenses GROUP BY budget_type_code ORDER BY count ( * ) DESC LIMIT 1
SELECT i_id FROM review ORDER BY rating LIMIT 1
SELECT T1.name , count ( * ) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id
SELECT u_id FROM review ORDER BY rank LIMIT 1
SELECT name FROM useracct WHERE u_id = 2
SELECT T1.name , count ( * ) FROM useracct AS T1 JOIN review AS T2 ON T1.u_id = T2.u_id GROUP BY T2.u_id
SELECT avg ( product_price ) FROM products
SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg ( product_price ) > ( SELECT avg ( product_price ) FROM products ) 
SELECT product_name FROM products where product_type_code = ( SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg ( product_price ) > ( SELECT avg ( product_price ) FROM products ) ) 
SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg ( product_price ) < ( SELECT avg ( product_price ) FROM products ) 
SELECT product_name FROM products where product_type_code = ( SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg ( product_price ) < ( SELECT avg ( product_price ) FROM products ) ) 
SELECT product_price FROM products where product_type_code = ( SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg ( product_price ) < ( SELECT avg ( product_price ) FROM products ) ) 
SELECT product_type_code FROM products GROUP BY product_type_code HAVING avg ( product_price ) > ( SELECT avg ( product_price ) FROM products ) 
SELECT DISTINCT instrument FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = "Le Pop"
SELECT count ( DISTINCT instrument ) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = "Baby"
SELECT count ( DISTINCT instrument ) FROM instruments AS T1 JOIN songs AS T2 ON T1.songid = T2.songid WHERE title = "Le Pop"
SELECT employee_id , job_id FROM employees WHERE salary < ( SELECT min ( salary ) FROM employees WHERE job_id = 'MK_MAN' ) 
SELECT salary FROM employees WHERE salary < ( SELECT min ( salary ) FROM employees WHERE job_id = 'MK_MAN' ) 
SELECT employee_id , job_id FROM employees WHERE salary < ( SELECT min ( salary ) FROM employees WHERE job_id = 'MK_MAN' ) 
SELECT Aircraft FROM aircraft
SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = "London Heathrow" INTERSECT SELECT T1.Aircraft FROM aircraft AS T1 JOIN airport_aircraft AS T2 ON T1.Aircraft_ID = T2.Aircraft_ID JOIN airport AS T3 ON T2.Airport_ID = T3.Airport_ID WHERE T3.Airport_Name = "London Gatwick"
SELECT T2.address_id FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = "Lockmanfurt"
SELECT * FROM Customers where first_name = "Sigrid" and last_name = "Schmeler"
SELECT T1.first_name , T1.last_name FROM Customers AS T1 JOIN Addresses AS T2 ON T1.customer_address_id = T2.address_id WHERE T2.city = "Lockmanfurt";
SELECT Grape , Appelation , Name FROM WINE WHERE Score > 93 ORDER BY Name
SELECT distinct Appelation FROM WINE WHERE Score > 93
SELECT distinct state from WINE WHERE Score > 93
SELECT Grape , Appelation , Name FROM WINE WHERE Score > 93 ORDER BY Name
SELECT t1.name FROM captain as t1
SELECT t1.name FROM captain as t1 ORDER BY t1.age LIMIT 1
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id WHERE t2.Name like '%Henry%'
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id WHERE t2.Name like '%Henry Dumaresq%'
SELECT t1.name FROM ship AS t1 JOIN captain AS t2 ON t1.ship_id = t2.ship_id ORDER BY t2.age LIMIT 1
SELECT avg ( enr ) FROM college
SELECT DISTINCT state FROM college WHERE enr > ( SELECT avg ( enr ) FROM college ) 
SELECT count ( DISTINCT state ) FROM college WHERE enr > ( SELECT avg ( enr ) FROM college ) 
SELECT count ( DISTINCT state ) FROM college WHERE enr > ( SELECT avg ( enr ) FROM college ) 
SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count ( customer_id ) < 5
SELECT channel_code,contact_number FROM customer_contact_channels GROUP BY channel_code HAVING count ( customer_id ) < 5
SELECT channel_code,active_from_date,active_to_date FROM customer_contact_channels GROUP BY channel_code HAVING count ( customer_id ) < 5
SELECT channel_code FROM customer_contact_channels GROUP BY channel_code HAVING count ( customer_id ) < 5
SELECT max ( T1.duration ) , T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY T2.genre_is
SELECT min ( T1.duration ) , T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY T2.genre_is
SELECT min ( T1.duration ) , T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY T2.genre_is order by T2.genre_is
SELECT min ( T1.duration ) , min ( T2.rating ) , T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is
SELECT min ( T1.duration ) , min ( T2.rating ) , T2.genre_is FROM files AS T1 JOIN song AS T2 ON T1.f_id = T2.f_id GROUP BY T2.genre_is ORDER BY T2.genre_is
SELECT order_shipping_charges , customer_id FROM customer_orders WHERE order_status_code = 'Cancelled'
SELECT order_shipping_charges , customer_id FROM customer_orders WHERE order_status_code = 'Paid'
SELECT shipping_method_code FROM customer_orders WHERE order_status_code = 'Paid'
SELECT order_shipping_charges , customer_id FROM customer_orders WHERE order_status_code = 'Cancelled' OR order_status_code = 'Paid'
SELECT count ( DISTINCT t1.clubname ) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.fname = "Eric" AND t3.lname = "Tai"
select count ( * ) from student where stuid not in ( SELECT t3.stuid FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid ) 
select count ( * ) from ( select stuid from member_of_club group by stuid having count ( * ) = 1 ) 
select lname,fname from student where stuid in ( select stuid from member_of_club group by stuid having count ( * ) = 1 ) 
select clubName from club where clubid in ( select distinct clubid from member_of_club group by stuid having count ( * ) = 1 ) 
SELECT count ( DISTINCT t1.clubname ) FROM club AS t1 JOIN member_of_club AS t2 ON t1.clubid = t2.clubid JOIN student AS t3 ON t2.stuid = t3.stuid WHERE t3.fname = "Eric" AND t3.lname = "Tai"
SELECT count ( * ) FROM mountain
SELECT count ( distinct country ) FROM mountain
SELECT Name FROM mountain ORDER BY Height DESC LIMIT 1
SELECT count ( * ) FROM invoices
SELECT sum ( total ) FROM invoices WHERE billing_country = "Germany"
SELECT sum ( total ) FROM invoices WHERE billing_country = "Norway"
SELECT count ( distinct billing_country ) FROM invoices
SELECT sum ( total ) FROM invoices WHERE billing_city = "Chicago" AND billing_state = "IL";
SELECT state_province_county FROM addresses WHERE zip_postcode LIKE "4%"
SELECT country FROM addresses WHERE zip_postcode LIKE "4%"
SELECT zip_postcode FROM addresses WHERE zip_postcode LIKE "4%"
SELECT state_province_county , country FROM addresses WHERE zip_postcode LIKE "4%"
SELECT billing_state FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT DISTINCT billing_postal_code FROM invoices WHERE billing_state = ( SELECT billing_state FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY COUNT ( * ) DESC LIMIT 1 ) 
SELECT DISTINCT invoice_date FROM invoices WHERE billing_state = ( SELECT billing_state FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY COUNT ( * ) DESC LIMIT 1 ) 
SELECT billing_state , COUNT ( * ) FROM invoices WHERE billing_country = "USA" GROUP BY billing_state ORDER BY COUNT ( * ) DESC LIMIT 1;
SELECT sum ( market_rate ) FROM furniture
SELECT sum ( market_rate ) FROM furniture ORDER BY market_rate DESC LIMIT 2
SELECT count ( project_id ) from Project_Staff
SELECT count ( staff_id ) from Project_Staff
SELECT project_id from Project_Staff group by project_id order by count ( staff_id ) DESC limit 1
SELECT staff_id from project_staff order by date_from limit 1
SELECT date_from from project_staff where staff_id = 56.0
SELECT date_from FROM Project_Staff ORDER BY date_from ASC LIMIT 1
SELECT count ( * ) FROM Faculty
SELECT count ( * ) FROM Faculty where sex = 'F'
SELECT count ( * ) FROM Faculty where rank = 'Professor'
SELECT rank , sex , count ( * ) FROM Faculty GROUP BY rank , sex
SELECT Building FROM DEPARTMENT WHERE Division = "AS"
SELECT Room FROM DEPARTMENT WHERE DName = "Chemistry"
SELECT DPhone FROM DEPARTMENT WHERE DName = "Biology"
SELECT Room FROM DEPARTMENT WHERE DName = "Biology"
SELECT DName FROM DEPARTMENT WHERE Division = "AS" UNION SELECT DName FROM DEPARTMENT WHERE Division = "EN" AND Building = "NEB"
SELECT T1.role_description FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code = T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.staff_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.role_code FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code = T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.staff_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T2.other_details FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code = T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.staff_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.role_description , T2.staff_id FROM Staff_Roles AS T1 JOIN Project_Staff AS T2 ON T1.role_code = T2.role_code JOIN Project_outcomes AS T3 ON T2.project_id = T3.project_id GROUP BY T2.staff_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Treasury'
SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Homeland Security'
select * from department where num_employees > 100000
SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Treasury' INTERSECT SELECT T3.born_state FROM department AS T1 JOIN management AS T2 ON T1.department_id = T2.department_id JOIN head AS T3 ON T2.head_id = T3.head_id WHERE T1.name = 'Homeland Security'
SELECT capacity from cinema where name = "Codling"
SELECT openning_year from cinema where name = "Codling"
SELECT location from cinema where name = "Codling"
SELECT LOCATION FROM cinema EXCEPT SELECT LOCATION FROM cinema WHERE capacity > 800
SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count ( * ) > 2
select Start_Date from Policies where Policy_Type_Code = 'Jurisdiction'
select end_Date from Policies where Policy_Type_Code = 'Deputy'
SELECT policy_type_code FROM policies GROUP BY policy_type_code HAVING count ( * ) > 2
SELECT id FROM station WHERE city = "San Francisco"
SELECT id FROM station WHERE city = "San Francisco" INTERSECT SELECT station_id FROM status where bikes_available > 0
SELECT id FROM station WHERE city = "San Francisco" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg ( bikes_available ) > 10
SELECT id FROM station WHERE city = "San Francisco" INTERSECT SELECT station_id FROM status GROUP BY station_id HAVING avg ( bikes_available ) > 10
SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT ( * ) LIMIT 1
SELECT Crime_rate FROM county_public_safety WHERE Name = 'Burnaby'
SELECT Location FROM county_public_safety WHERE Name = 'Campbell River'
SELECT Police_officers FROM county_public_safety WHERE County_ID = '2'
SELECT LOCATION FROM county_public_safety GROUP BY LOCATION ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT count ( outcome_code ) from project_outcomes group by outcome_code order by count ( outcome_code ) desc limit 1
SELECT T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.project_details , T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count ( * ) DESC LIMIT 1
SELECT T1.project_details , T1.project_id FROM Projects AS T1 JOIN Project_outcomes AS T2 ON T1.project_id = T2.project_id GROUP BY T1.project_id ORDER BY count ( * ) DESC LIMIT 1
SELECT course_name from Courses
SELECT author_id from Courses where course_name = "advanced database"
SELECT personal_name, middle_name, family_name from Course_Authors_and_Tutors where author_id = 6
SELECT login_name from Course_Authors_and_Tutors where personal_name like "%Adolf%" and middle_name like "%Keira%" and family_name like "%Rohan%"
SELECT T1.login_name FROM Course_Authors_and_Tutors AS T1 JOIN Courses AS T2 ON T1.author_id = T2.author_id WHERE T2.course_name = "advanced database"
SELECT COUNT ( DISTINCT color_description ) FROM Ref_Colors
SELECT product_name FROM Products
SELECT typical_selling_price FROM Products WHERE product_name = "cumin"
SELECT T1.product_name FROM products AS T1 JOIN ref_colors AS T2 ON T1.color_code = T2.color_code WHERE T2.color_description = 'yellow'
SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT ( * ) ASC LIMIT 1
SELECT count ( * ) FROM ( SELECT T2.MediaTypeId FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId GROUP BY T2.MediaTypeId ) 
SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT ( * ) DESC LIMIT 1
SELECT count ( * ) FROM Track
SELECT T1.Name FROM MEDIATYPE AS T1 JOIN TRACK AS T2 ON T1.MediaTypeId = T2.MediaTypeId GROUP BY T2.MediaTypeId ORDER BY COUNT ( * ) ASC LIMIT 1
SELECT customer_id from customers WHERE customer_first_name = "Art" AND customer_last_name = "Turcotte"
SELECT count ( * ) FROM Customers_cards AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.customer_first_name = "Art" AND T2.customer_last_name = "Turcotte"
SELECT T1.driverid FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION = '1' GROUP BY T1.driverid HAVING count ( * )  > = 2
SELECT driverId FROM drivers
SELECT driverId, forename, surname FROM drivers
SELECT T1.driverid , T1.forename , T1.surname FROM drivers AS T1 JOIN laptimes AS T2 ON T1.driverid = T2.driverid WHERE POSITION = '1' GROUP BY T1.driverid HAVING count ( * ) >= 2
SELECT count ( * ) from injury_accident
SELECT T1.date , T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id = T2.game_id
SELECT T1.date , T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id = T2.game_id ORDER BY T1.season DESC
SELECT T1.date , T2.player FROM game AS T1 JOIN injury_accident AS T2 ON T1.id = T2.game_id ORDER BY T1.season DESC
SELECT T2.title , T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY T1.stars DESC LIMIT 3
SELECT T2.title , T2.year, T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY T1.stars DESC LIMIT 3
SELECT T2.title , T2.year, T2.director FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY T1.stars LIMIT 3
SELECT T2.title , T2.year FROM Rating AS T1 JOIN Movie AS T2 ON T1.mID = T2.mID ORDER BY T1.stars DESC LIMIT 3
SELECT COUNT ( * ) FROM Rooms
SELECT roomName FROM Rooms
SELECT basePrice FROM Rooms WHERE roomName = "Recluse and defiance"
SELECT roomName FROM Rooms WHERE basePrice > ( SELECT avg ( basePrice ) FROM Rooms ) ;
SELECT Residence FROM player WHERE gender = "M" INTERSECT SELECT Residence FROM player WHERE gender = "F"
SELECT Sponsor_Name FROM player WHERE Player_name = "Jean Luc Bouché"
SELECT Votes FROM player WHERE player_name = "Niki Ashton"
SELECT Residence FROM player WHERE gender = "M" INTERSECT SELECT Residence FROM player WHERE gender = "F"
SELECT COUNT ( * ) , state_province_county FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.address_id GROUP BY state_province_county
SELECT T2.first_name , T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.address_id WHERE T1.state_province_county = "Wisconsin"
SELECT T2.first_name , T2.last_name FROM Addresses AS T1 JOIN Students AS T2 ON T1.address_id = T2.address_id WHERE T1.state_province_county = "Wisconsin"
SELECT country FROM stadium EXCEPT SELECT country FROM stadium WHERE opening_year > 2006
SELECT capacity FROM stadium where country = "England"
SELECT city FROM stadium where country = "England"
SELECT country FROM stadium EXCEPT SELECT country FROM stadium WHERE opening_year > 2006
SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id order by rating desc limit 1
SELECT avg ( rating ) FROM review
SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rating > 7
SELECT i_id FROM item where title = 'cup'
SELECT title FROM item where i_id = 4
SELECT * FROM item
SELECT T1.title, T2.rating FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id order by T2.rating
SELECT T1.title FROM item AS T1 JOIN review AS T2 ON T1.i_id = T2.i_id WHERE T2.rating > ( SELECT avg ( rating ) FROM review ) 
SELECT title FROM film WHERE rental_rate = 0.99
SELECT title FROM film ORDER BY rental_rate DESC LIMIT 1
SELECT title FROM film INTERSECT SELECT T1.title FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id HAVING count ( * ) < 3
SELECT title , film_id FROM film WHERE rental_rate = 0.99 INTERSECT SELECT T1.title , T1.film_id FROM film AS T1 JOIN inventory AS T2 ON T1.film_id = T2.film_id GROUP BY T1.film_id HAVING count ( * ) < 3
SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Launched_Year > 1928
SELECT * FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Fate Like "%Lost%"
SELECT * FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Fate Like "%Lost%" order by T2.tonnage desc limit 1
SELECT T2.Name FROM mission AS T1 JOIN ship AS T2 ON T1.Ship_ID = T2.Ship_ID WHERE T1.Launched_Year > 1928
SELECT Weeks_on_Top FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1
SELECT distinct ( Volume_ID ) from volume where Weeks_On_Top = ( SELECT Weeks_on_Top FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1 ) 
SELECT distinct ( Song ) from volume where Weeks_On_Top = ( SELECT Weeks_on_Top FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1 ) 
SELECT Song FROM volume ORDER BY Weeks_on_Top DESC LIMIT 1
SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Dan' INTERSECT SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Alice'
SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Dan' INTERSECT SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Zach'
SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Dan' INTERSECT SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Bob'
SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Zach' INTERSECT SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Bob'
SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Dan' INTERSECT SELECT T1.name , T1.age FROM Person AS T1 JOIN PersonFriend AS T2 ON T1.name = T2.name WHERE T2.friend = 'Alice'
SELECT height FROM catalog_contents WHERE catalog_entry_name = "Cola"
SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH < 5
SELECT catalog_entry_name,LENGTH FROM catalog_contents WHERE LENGTH < 5
SELECT height FROM catalog_contents WHERE catalog_entry_name = "Fenta Orange"
SELECT catalog_entry_name FROM catalog_contents WHERE LENGTH < 3 OR width > 5
SELECT max ( Milliseconds ) FROM TRACK
SELECT min ( Milliseconds ) FROM TRACK
SELECT count ( Composer ) FROM TRACK
SELECT max ( Milliseconds ) , min ( Milliseconds ) FROM TRACK
SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID WHERE T2.Order_Quantity = 1
select Product_ID from Order_Items where Order_Quantity = 1
SELECT T1.Customer_ID FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID WHERE T2.Order_Quantity = 1
SELECT T1.Actual_Delivery_Date FROM Customer_Orders AS T1 JOIN ORDER_ITEMS AS T2 ON T1.Order_ID = T2.Order_ID WHERE T2.Order_Quantity = 1
SELECT T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000
SELECT T2.transaction_type_code FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000
SELECT T1.sales_details , T2.date_of_transaction FROM SALES AS T1 JOIN TRANSACTIONS AS T2 ON T1.sales_transaction_id = T2.transaction_id WHERE T2.amount_of_transaction < 3000
SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name = "Nokia Corporation" AND T1.Type ! = "Text"
SELECT DISTINCT T1.pixels FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name = "Nokia Corporation" AND T1.Type ! = "Text"
SELECT DISTINCT T1.char_cells FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name = "Nokia Corporation" AND T1.Type ! = "Text"
SELECT DISTINCT T1.used_kb FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name = "Nokia Corporation" AND T1.Type ! = "Text"
SELECT DISTINCT T2.Hardware_Model_name FROM screen_mode AS T1 JOIN phone AS T2 ON T1.Graphics_mode = T2.screen_mode WHERE t2.Company_name = "Nokia Corporation" AND T1.Type != "Text";
SELECT COUNT ( * ) FROM Student WHERE Major = 600
SELECT MAX ( Age ) FROM Student where Major = 600
SELECT MIN ( Age ) FROM Student where Major = 600
SELECT max ( Age ) , min ( Age ) FROM STUDENT WHERE Major = 600
SELECT sum ( Spent ) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID WHERE Student.Fname = "Linda" AND Student.Lname = "Smith"
SELECT * FROM Student where city_code = ( select city_code from student where Fname = "Linda" AND Lname = "Smith" ) and Fname ! = "Linda" AND Lname ! = "Smith"
SELECT T1.StuID, sum ( T2.Spent ) FROM Student AS T1 JOIN Visits_Restaurant AS T2 where city_code = ( select city_code from student where Fname = "Linda" AND Lname = "Smith" ) and Fname ! = "Linda" AND Lname ! = "Smith" GROUP BY T1.StuID HAVING sum ( T2.Spent ) > ( SELECT sum ( Spent ) FROM Student AS T1 JOIN Visits_Restaurant AS T2 ON T1.StuID = T2.StuID WHERE T1.Fname = "Linda" AND T1.Lname = "Smith" ) 
SELECT sum ( Spent ) FROM Student JOIN Visits_Restaurant ON Student.StuID = Visits_Restaurant.StuID WHERE Student.Fname = "Linda" AND Student.Lname = "Smith";
SELECT Location FROM party where Party_ID = 1
SELECT Number_of_hosts from party where Party_ID = 3
SELECT age from host where Host_ID = 3
SELECT nationality from host where host_id = 3
SELECT T3.Location , T2.Name FROM party_host AS T1 JOIN HOST AS T2 ON T1.Host_ID = T2.Host_ID JOIN party AS T3 ON T1.Party_ID = T3.Party_ID ORDER BY T2.Age
SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3
SELECT name, open_year FROM branch ORDER BY membership_amount DESC LIMIT 3
SELECT name, city FROM branch ORDER BY membership_amount DESC LIMIT 3
SELECT name FROM branch ORDER BY membership_amount DESC LIMIT 3
SELECT DISTINCT T1.fname FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid = T2.stuid WHERE T2.Allergy = "Milk"
SELECT DISTINCT T1.city_code, T1.fname FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid = T2.stuid WHERE T2.Allergy = "Milk"
SELECT DISTINCT T1.fname , T1.city_code FROM Student AS T1 JOIN Has_Allergy AS T2 ON T1.stuid = T2.stuid WHERE T2.Allergy = "Milk" OR T2.Allergy = "Cat"
SELECT Name FROM Products WHERE Code = 1
SELECT Price FROM Products WHERE Code = 1
SELECT count ( DISTINCT T1.name ) , T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.Headquarter
SELECT count ( DISTINCT T1.name ) , T2.Headquarter FROM products AS T1 JOIN manufacturers AS T2 ON T1.Manufacturer = T2.code GROUP BY T2.Headquarter
select T2.Customer_ID, T1.Policy_Type_Code from Policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id
select t2.Customer_ID, t1.Policy_Type_code, t2.Customer_Details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id
SELECT t2.customer_id, t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t1.policy_type_code = "Deputy" OR t1.policy_type_code = "Uniform"
SELECT DISTINCT t2.customer_details FROM policies AS t1 JOIN customers AS t2 ON t1.customer_id = t2.customer_id WHERE t1.policy_type_code = "Deputy" OR t1.policy_type_code = "Uniform"
SELECT T1.campus , sum ( T2.degrees ) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id = T2.campus WHERE T1.county = "Orange" AND T2.year > = 2000 GROUP BY T1.campus
SELECT Year from degrees order by Degrees DESC LIMIT 1
SELECT T1.campus FROM Campuses AS T1 JOIN degrees AS T2 ON T1.id = T2.campus WHERE T2.Degrees = ( select max ( Degrees ) from degrees ) 
SELECT T1.campus , sum ( T2.degrees ) FROM campuses AS T1 JOIN degrees AS T2 ON T1.id = T2.campus WHERE T1.county = "Orange" AND T2.year >= 2000 GROUP BY T1.campus
SELECT count ( * ) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = "Rylan" AND T2.last_name = "Goodwin" AND T1.lesson_status_code = "Completed"
SELECT customer_status_code from Customers where first_name = "Rylan" AND last_name = "Goodwin"
SELECT date_of_birth from Customers where first_name = "Rylan" AND last_name = "Goodwin"
SELECT count ( * ) FROM Lessons AS T1 JOIN Customers AS T2 ON T1.customer_id = T2.customer_id WHERE T2.first_name = "Rylan" AND T2.last_name = "Goodwin" AND T1.lesson_status_code = "Completed";
SELECT game_id FROM injury_accident where Player = 'Walter Samuel'
SELECT T1.season FROM game AS T1 JOIN injury_accident AS T2 ON T1.id = T2.game_id WHERE T2.player = 'Walter Samuel'
SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count ( * ) DESC LIMIT 1
SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count ( * ) LIMIT 1
SELECT avg ( Age ) FROM STUDENT
SELECT Major FROM STUDENT where sex = "F"
SELECT city_code FROM STUDENT GROUP BY city_code ORDER BY count ( * ) DESC LIMIT 1
SELECT Name, Tourist_Attraction_ID FROM Tourist_Attractions WHERE How_to_Get_There = "walk"
SELECT T2.Name, t2.Tourist_Attraction_ID FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = "660 Shea Crescent" OR T2.How_to_Get_There = "walk"
SELECT T2.Name, t2.Tourist_Attraction_ID, t2.Opening_Hours FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = "660 Shea Crescent" OR T2.How_to_Get_There = "walk"
SELECT T2.Name FROM Locations AS T1 JOIN Tourist_Attractions AS T2 ON T1.Location_ID = T2.Location_ID WHERE T1.Address = "660 Shea Crescent" OR T2.How_to_Get_There = "walk"
SELECT T1.name_given FROM player AS T1 JOIN player_college AS T2 ON T1.player_id = T2.player_id JOIN college AS T3 ON T3.college_id = T2.college_id WHERE T3.name_full = 'Yale University'
SELECT T1.height FROM player AS T1 JOIN player_college AS T2 ON T1.player_id = T2.player_id JOIN college AS T3 ON T3.college_id = T2.college_id WHERE T3.name_full = 'Yale University'
SELECT avg ( T1.height ) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id = T2.player_id JOIN college AS T3 ON T3.college_id = T2.college_id WHERE T3.name_full = 'Yale University'
SELECT avg ( T1.height ) FROM player AS T1 JOIN player_college AS T2 ON T1.player_id = T2.player_id JOIN college AS T3 ON T3.college_id = T2.college_id WHERE T3.name_full = 'Yale University';
SELECT count ( * ) from customer
select count ( * ) from ( SELECT * FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ) 
SELECT T1.first_name , T1.last_name , T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY sum ( amount ) ASC LIMIT 1
SELECT sum ( amount ) FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY sum ( amount ) ASC LIMIT 1
SELECT T1.first_name , T1.last_name , T1.customer_id FROM customer AS T1 JOIN payment AS T2 ON T1.customer_id = T2.customer_id GROUP BY T1.customer_id ORDER BY sum ( amount ) ASC LIMIT 1
SELECT t1.Name FROM Projects as t1 join AssignedTo as t2 on t1.Code = t2.Project
SELECT Name FROM Projects WHERE Code NOT IN ( SELECT Project FROM AssignedTo ) 
SELECT Name FROM Projects WHERE Code NOT IN ( SELECT Project FROM AssignedTo ) order by Hours limit 1
SELECT Name FROM Projects WHERE Code NOT IN ( SELECT Project FROM AssignedTo ) 
SELECT date_assigned_to from Staff_Department_Assignments
SELECT staff_id, date_assigned_from from Staff_Department_Assignments
SELECT staff_id, date_assigned_from from Staff_Department_Assignments order by date_assigned_from desc limit 1
SELECT staff_name,job_title_code from Staff_Department_Assignments as T1 join Staff as T2 on T1.staff_id = T2.staff_id where T1.staff_id = '1'
SELECT T1.staff_name , T2.job_title_code FROM staff AS T1 JOIN staff_department_assignments AS T2 ON T1.staff_id = T2.staff_id ORDER BY T2.date_assigned_to DESC LIMIT 1
SELECT name FROM projects ORDER BY hours DESC LIMIT 1
SELECT name FROM projects
SELECT Hours FROM projects where Name = 'A Magnetic Primer Designer'
SELECT Code FROM projects where Name = 'A Magnetic Primer Designer'
SELECT name FROM projects ORDER BY hours LIMIT 1
SELECT name FROM projects ORDER BY hours DESC LIMIT 1
SELECT institution FROM institution
SELECT T1.institution , count ( * ) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id
SELECT institution, location from institution
SELECT T1.institution , count ( * ) FROM institution AS T1 JOIN protein AS T2 ON T1.institution_id = T2.institution_id GROUP BY T1.institution_id
SELECT T3.DEPT_EXTENSION FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T2.dept_code = T3.dept_code WHERE EMP_LNAME = "Donelly" or EMP_LNAME = "Blalock"
SELECT T3.SCHOOL_CODE FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T2.dept_code = T3.dept_code WHERE T3.dept_name = 'History'
SELECT T1.emp_lname , T2.prof_office FROM employee AS T1 JOIN professor AS T2 ON T1.emp_num = T2.emp_num JOIN department AS T3 ON T2.dept_code = T3.dept_code WHERE T3.dept_name = 'History'
select count ( * ) from department
SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY count ( * ) ASC LIMIT 1
SELECT count ( * ) FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY count ( * ) ASC LIMIT 1
SELECT T1.DName FROM DEPARTMENT AS T1 JOIN MEMBER_OF AS T2 ON T1.DNO = T2.DNO GROUP BY T2.DNO ORDER BY count ( * ) ASC LIMIT 1
SELECT count ( distinct T2.directed_by ) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id where T1.show_times_per_day>1
SELECT distinct T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id where T1.show_times_per_day>1
SELECT sum ( T1.show_times_per_day ) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id where t2.directed_by = 'Bill Schreiner' GROUP BY T2.directed_by
SELECT sum ( T1.show_times_per_day ) FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id where t2.directed_by = 'Jesus Salvador Treviño' GROUP BY T2.directed_by
SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.directed_by ORDER BY sum ( T1.show_times_per_day ) DESC LIMIT 1
SELECT T2.directed_by FROM schedule AS T1 JOIN film AS T2 ON T1.film_id = T2.film_id GROUP BY T2.directed_by ORDER BY sum ( T1.show_times_per_day ) DESC LIMIT 1
SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = "Daan" AND T4.last_name = "Peeters"
select id ,milliseconds from tracks group by id
select unit_price from tracks
SELECT T1.name FROM tracks AS T1 JOIN invoice_lines AS T2 ON T1.id = T2.track_id JOIN invoices AS T3 ON T3.id = T2.invoice_id JOIN customers AS T4 ON T4.id = T3.customer_id WHERE T4.first_name = "Daan" AND T4.last_name = "Peeters";
SELECT avg ( acc_bal ) FROM customer
SELECT distinct acc_type FROM customer
SELECT avg ( credit_score ) FROM customer
SELECT sum ( acc_bal ) FROM customer WHERE state = 'Utah' OR state = 'Texas'
SELECT sum ( acc_bal ) FROM customer WHERE state = 'Utah' OR state = 'Texas'
SELECT count ( distinct origin ) FROM Flight
SELECT count ( * ) FROM Flight
SELECT origin FROM Flight group by origin order by count ( * ) asc limit 1
SELECT origin FROM Flight GROUP BY origin ORDER BY count ( * ) DESC LIMIT 1
SELECT mascot FROM school WHERE enrollment > ( SELECT avg ( enrollment ) FROM school ) 
SELECT Location from School where School_name = "Glenn"
SELECT Enrollment from School where School_name = "Culver Community"
SELECT mascot FROM school WHERE enrollment > ( SELECT avg ( enrollment ) FROM school ) 
SELECT count ( distinct album_id ) from tracks
SELECT count ( distinct genre_id ) from tracks
SELECT genre_id,avg ( unit_price ) from tracks group by genre_id
SELECT count ( * ) , T1.name FROM genres AS T1 JOIN tracks AS T2 ON T1.id = T2.genre_id GROUP BY T1.name;
